[0m[[0m[0mdebug[0m] [0m[0m[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial source changes: [0m
[0m[[0m[0mdebug[0m] [0m[0m	removed:Set(/Users/hungnguyen/Downloads/Scorex/examples/src/main/scala/examples/hybrid/mining/PowMiner.scala, /Users/hungnguyen/Downloads/Scorex/examples/src/main/scala/examples/hybrid/simulations/PrivateChain.scala, /Users/hungnguyen/Downloads/Scorex/examples/src/main/scala/examples/hybrid/api/http/DebugApiRoute.scala, /Users/hungnguyen/Downloads/Scorex/examples/src/main/scala/examples/hybrid/mining/PosForger.scala, /Users/hungnguyen/Downloads/Scorex/examples/src/main/scala/examples/hybrid/api/http/WalletApiRoute.scala, /Users/hungnguyen/Downloads/Scorex/examples/src/main/scala/examples/hybrid/state/HBoxStoredState.scala, /Users/hungnguyen/Downloads/Scorex/examples/src/main/scala/examples/hybrid/blocks/HybridBlock.scala, /Users/hungnguyen/Downloads/Scorex/examples/src/main/scala/examples/hybrid/wallet/HBoxWallet.scala, /Users/hungnguyen/Downloads/Scorex/examples/src/main/scala/examples/hybrid/validation/DifficultyBlockValidator.scala, /Users/hungnguyen/Downloads/Scorex/examples/src/main/scala/examples/hybrid/util/FileFunctions.scala, /Users/hungnguyen/Downloads/Scorex/examples/src/main/scala/examples/hybrid/validation/SemanticBlockValidator.scala, /Users/hungnguyen/Downloads/Scorex/examples/src/main/scala/examples/hybrid/history/HistoryStorage.scala, /Users/hungnguyen/Downloads/Scorex/examples/src/main/scala/examples/hybrid/HybridNodeViewHolder.scala, /Users/hungnguyen/Downloads/Scorex/examples/src/main/scala/examples/hybrid/HybridApp.scala, /Users/hungnguyen/Downloads/Scorex/examples/src/main/scala/examples/hybrid/util/Cancellable.scala, /Users/hungnguyen/Downloads/Scorex/examples/src/main/scala/examples/hybrid/HLocalInterface.scala, /Users/hungnguyen/Downloads/Scorex/examples/src/main/scala/examples/hybrid/blocks/PosBlock.scala, /Users/hungnguyen/Downloads/Scorex/examples/src/main/scala/examples/hybrid/validation/ParentBlockValidator.scala, /Users/hungnguyen/Downloads/Scorex/examples/src/main/scala/examples/hybrid/history/HybridHistory.scala, /Users/hungnguyen/Downloads/Scorex/examples/src/main/scala/examples/hybrid/mining/HybridMiningSettings.scala, /Users/hungnguyen/Downloads/Scorex/examples/src/main/scala/examples/hybrid/api/http/StatsApiRoute.scala, /Users/hungnguyen/Downloads/Scorex/examples/src/main/scala/examples/hybrid/wallet/SimpleBoxTransactionGenerator.scala, /Users/hungnguyen/Downloads/Scorex/examples/src/main/scala/examples/hybrid/history/HybridSyncInfo.scala, /Users/hungnguyen/Downloads/Scorex/examples/src/main/scala/examples/hybrid/blocks/PowBlock.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0m	added: Set(/Users/hungnguyen/Downloads/Scorex/examples/src/main/scala/examples/ZSChain/HybridApp.scala, /Users/hungnguyen/Downloads/Scorex/examples/src/main/scala/examples/ZSChain/util/Cancellable.scala, /Users/hungnguyen/Downloads/Scorex/examples/src/main/scala/examples/ZSChain/validation/SemanticBlockValidator.scala, /Users/hungnguyen/Downloads/Scorex/examples/src/main/scala/examples/ZSChain/state/HBoxStoredState.scala, /Users/hungnguyen/Downloads/Scorex/examples/src/main/scala/examples/ZSChain/api/http/DebugApiRoute.scala, /Users/hungnguyen/Downloads/Scorex/examples/src/main/scala/examples/ZSChain/history/HybridSyncInfo.scala, /Users/hungnguyen/Downloads/Scorex/examples/src/main/scala/examples/ZSChain/util/FileFunctions.scala, /Users/hungnguyen/Downloads/Scorex/examples/src/main/scala/examples/ZSChain/blocks/PowBlock.scala, /Users/hungnguyen/Downloads/Scorex/examples/src/main/scala/examples/ZSChain/api/http/StatsApiRoute.scala, /Users/hungnguyen/Downloads/Scorex/examples/src/main/scala/examples/ZSChain/history/HybridHistory.scala, /Users/hungnguyen/Downloads/Scorex/examples/src/main/scala/examples/ZSChain/mining/PowMiner.scala, /Users/hungnguyen/Downloads/Scorex/examples/src/main/scala/examples/ZSChain/validation/DifficultyBlockValidator.scala, /Users/hungnguyen/Downloads/Scorex/examples/src/main/scala/examples/ZSChain/blocks/HybridBlock.scala, /Users/hungnguyen/Downloads/Scorex/examples/src/main/scala/examples/ZSChain/wallet/SimpleBoxTransactionGenerator.scala, /Users/hungnguyen/Downloads/Scorex/examples/src/main/scala/examples/ZSChain/mining/HybridMiningSettings.scala, /Users/hungnguyen/Downloads/Scorex/examples/src/main/scala/examples/ZSChain/simulations/PrivateChain.scala, /Users/hungnguyen/Downloads/Scorex/examples/src/main/scala/examples/ZSChain/mining/PosForger.scala, /Users/hungnguyen/Downloads/Scorex/examples/src/main/scala/examples/ZSChain/HybridNodeViewHolder.scala, /Users/hungnguyen/Downloads/Scorex/examples/src/main/scala/examples/ZSChain/HLocalInterface.scala, /Users/hungnguyen/Downloads/Scorex/examples/src/main/scala/examples/ZSChain/api/http/WalletApiRoute.scala, /Users/hungnguyen/Downloads/Scorex/examples/src/main/scala/examples/ZSChain/history/HistoryStorage.scala, /Users/hungnguyen/Downloads/Scorex/examples/src/main/scala/examples/ZSChain/blocks/PosBlock.scala, /Users/hungnguyen/Downloads/Scorex/examples/src/main/scala/examples/ZSChain/wallet/HBoxWallet.scala, /Users/hungnguyen/Downloads/Scorex/examples/src/main/scala/examples/ZSChain/validation/ParentBlockValidator.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0m	modified: Set(/Users/hungnguyen/Downloads/Scorex/examples/src/main/scala/examples/commons/SimpleBoxTransaction.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated products: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mExternal API changes: API Changes: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mModified binary dependencies: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial directly invalidated classes: Set(examples.commons.SimpleBoxTransaction, examples.hybrid.history.HybridSyncInfoMessageSpec, examples.hybrid.wallet.SimpleBoxTransactionGeneratorRef, examples.hybrid.mining.HybridMiningSettings, examples.hybrid.mining.PosForgerRef, examples.hybrid.wallet.GenesisStateGenerator, examples.hybrid.history.HistoryStorage, examples.hybrid.mining.PosForger.ReceivableMessages, examples.hybrid.mining.PowMiner.ReceivableMessages.StopMining, examples.hybrid.validation.DifficultyBlockValidator, examples.hybrid.wallet.SimpleBoxTransactionGenerator.ReceivableMessages.StartGeneration, examples.hybrid.mining.PowMiner.ReceivableMessages.PowMiningInfo, examples.hybrid.blocks.PosBlockSerializer, examples.hybrid.mining.PosForger.ReceivableMessages.StartForging, examples.hybrid.blocks.PowBlock, examples.hybrid.simulations.PrivateChain, examples.hybrid.state.HBoxStoredState, examples.hybrid.util.FileFunctions, examples.hybrid.HLocalInterface, examples.hybrid.blocks.PosBlock, examples.hybrid.wallet.HBoxWallet, examples.hybrid.api.http.StatsApiRoute, examples.hybrid.mining.HybridSettings, examples.hybrid.mining.PowMiner.ReceivableMessages.MineBlock, examples.hybrid.history.HybridSyncInfoSerializer, examples.hybrid.validation.ParentBlockValidator, examples.hybrid.wallet.SimpleBoxTransactionGenerator.ReceivableMessages.GeneratorInfo, examples.hybrid.mining.PosForger.ReceivableMessages.StopForging, examples.hybrid.HLocalInterfaceRef, examples.hybrid.history.HybridHistory, examples.hybrid.wallet.SimpleBoxTransactionGenerator.ReceivableMessages, examples.hybrid.mining.WalletSettings, examples.hybrid.api.http.WalletApiRoute, examples.hybrid.validation.SemanticBlockValidator, examples.hybrid.HybridNodeViewHolderRef, examples.hybrid.blocks.PowBlockSerializer, examples.hybrid.HybridApp, examples.hybrid.mining.PowMiner, examples.commons.SimpleBoxTransactionSerializer, examples.hybrid.api.http.DebugApiRoute, examples.hybrid.mining.PowMiner.ReceivableMessages.StartMining, examples.hybrid.mining.PosForger, examples.hybrid.mining.PowMinerRef, examples.hybrid.util.CancellableStatus, examples.hybrid.mining.PosForger.ReceivableMessages.PosForgingInfo, examples.hybrid.history.HybridSyncInfo, examples.hybrid.blocks.PowBlockHeaderSerializer, examples.hybrid.mining.PowMiner.ReceivableMessages, examples.hybrid.HybridNodeViewHolder, examples.hybrid.blocks.PowBlockHeader, examples.hybrid.blocks.HybridBlock, examples.hybrid.wallet.SimpleBoxTransactionGenerator, examples.hybrid.util.Cancellable)[0m
[0m[[0m[0mdebug[0m] [0m[0m[0m
[0m[[0m[0mdebug[0m] [0m[0mSources indirectly invalidated by:[0m
[0m[[0m[0mdebug[0m] [0m[0m	product: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	binary dep: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	external source: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mAll initially invalidated classes: Set(examples.commons.SimpleBoxTransaction, examples.hybrid.history.HybridSyncInfoMessageSpec, examples.hybrid.wallet.SimpleBoxTransactionGeneratorRef, examples.hybrid.mining.HybridMiningSettings, examples.hybrid.mining.PosForgerRef, examples.hybrid.wallet.GenesisStateGenerator, examples.hybrid.history.HistoryStorage, examples.hybrid.mining.PosForger.ReceivableMessages, examples.hybrid.mining.PowMiner.ReceivableMessages.StopMining, examples.hybrid.validation.DifficultyBlockValidator, examples.hybrid.wallet.SimpleBoxTransactionGenerator.ReceivableMessages.StartGeneration, examples.hybrid.mining.PowMiner.ReceivableMessages.PowMiningInfo, examples.hybrid.blocks.PosBlockSerializer, examples.hybrid.mining.PosForger.ReceivableMessages.StartForging, examples.hybrid.blocks.PowBlock, examples.hybrid.simulations.PrivateChain, examples.hybrid.state.HBoxStoredState, examples.hybrid.util.FileFunctions, examples.hybrid.HLocalInterface, examples.hybrid.blocks.PosBlock, examples.hybrid.wallet.HBoxWallet, examples.hybrid.api.http.StatsApiRoute, examples.hybrid.mining.HybridSettings, examples.hybrid.mining.PowMiner.ReceivableMessages.MineBlock, examples.hybrid.history.HybridSyncInfoSerializer, examples.hybrid.validation.ParentBlockValidator, examples.hybrid.wallet.SimpleBoxTransactionGenerator.ReceivableMessages.GeneratorInfo, examples.hybrid.mining.PosForger.ReceivableMessages.StopForging, examples.hybrid.HLocalInterfaceRef, examples.hybrid.history.HybridHistory, examples.hybrid.wallet.SimpleBoxTransactionGenerator.ReceivableMessages, examples.hybrid.mining.WalletSettings, examples.hybrid.api.http.WalletApiRoute, examples.hybrid.validation.SemanticBlockValidator, examples.hybrid.HybridNodeViewHolderRef, examples.hybrid.blocks.PowBlockSerializer, examples.hybrid.HybridApp, examples.hybrid.mining.PowMiner, examples.commons.SimpleBoxTransactionSerializer, examples.hybrid.api.http.DebugApiRoute, examples.hybrid.mining.PowMiner.ReceivableMessages.StartMining, examples.hybrid.mining.PosForger, examples.hybrid.mining.PowMinerRef, examples.hybrid.util.CancellableStatus, examples.hybrid.mining.PosForger.ReceivableMessages.PosForgingInfo, examples.hybrid.history.HybridSyncInfo, examples.hybrid.blocks.PowBlockHeaderSerializer, examples.hybrid.mining.PowMiner.ReceivableMessages, examples.hybrid.HybridNodeViewHolder, examples.hybrid.blocks.PowBlockHeader, examples.hybrid.blocks.HybridBlock, examples.hybrid.wallet.SimpleBoxTransactionGenerator, examples.hybrid.util.Cancellable)[0m
[0m[[0m[0mdebug[0m] [0m[0mAll initially invalidated sources:Set(/Users/hungnguyen/Downloads/Scorex/examples/src/main/scala/examples/ZSChain/HybridApp.scala, /Users/hungnguyen/Downloads/Scorex/examples/src/main/scala/examples/ZSChain/util/Cancellable.scala, /Users/hungnguyen/Downloads/Scorex/examples/src/main/scala/examples/ZSChain/validation/SemanticBlockValidator.scala, /Users/hungnguyen/Downloads/Scorex/examples/src/main/scala/examples/ZSChain/state/HBoxStoredState.scala, /Users/hungnguyen/Downloads/Scorex/examples/src/main/scala/examples/ZSChain/api/http/DebugApiRoute.scala, /Users/hungnguyen/Downloads/Scorex/examples/src/main/scala/examples/ZSChain/history/HybridSyncInfo.scala, /Users/hungnguyen/Downloads/Scorex/examples/src/main/scala/examples/ZSChain/util/FileFunctions.scala, /Users/hungnguyen/Downloads/Scorex/examples/src/main/scala/examples/ZSChain/blocks/PowBlock.scala, /Users/hungnguyen/Downloads/Scorex/examples/src/main/scala/examples/ZSChain/api/http/StatsApiRoute.scala, /Users/hungnguyen/Downloads/Scorex/examples/src/main/scala/examples/ZSChain/history/HybridHistory.scala, /Users/hungnguyen/Downloads/Scorex/examples/src/main/scala/examples/ZSChain/mining/PowMiner.scala, /Users/hungnguyen/Downloads/Scorex/examples/src/main/scala/examples/ZSChain/validation/DifficultyBlockValidator.scala, /Users/hungnguyen/Downloads/Scorex/examples/src/main/scala/examples/ZSChain/blocks/HybridBlock.scala, /Users/hungnguyen/Downloads/Scorex/examples/src/main/scala/examples/ZSChain/wallet/SimpleBoxTransactionGenerator.scala, /Users/hungnguyen/Downloads/Scorex/examples/src/main/scala/examples/ZSChain/mining/HybridMiningSettings.scala, /Users/hungnguyen/Downloads/Scorex/examples/src/main/scala/examples/commons/SimpleBoxTransaction.scala, /Users/hungnguyen/Downloads/Scorex/examples/src/main/scala/examples/ZSChain/simulations/PrivateChain.scala, /Users/hungnguyen/Downloads/Scorex/examples/src/main/scala/examples/ZSChain/mining/PosForger.scala, /Users/hungnguyen/Downloads/Scorex/examples/src/main/scala/examples/ZSChain/HybridNodeViewHolder.scala, /Users/hungnguyen/Downloads/Scorex/examples/src/main/scala/examples/ZSChain/HLocalInterface.scala, /Users/hungnguyen/Downloads/Scorex/examples/src/main/scala/examples/ZSChain/api/http/WalletApiRoute.scala, /Users/hungnguyen/Downloads/Scorex/examples/src/main/scala/examples/ZSChain/history/HistoryStorage.scala, /Users/hungnguyen/Downloads/Scorex/examples/src/main/scala/examples/ZSChain/blocks/PosBlock.scala, /Users/hungnguyen/Downloads/Scorex/examples/src/main/scala/examples/ZSChain/wallet/HBoxWallet.scala, /Users/hungnguyen/Downloads/Scorex/examples/src/main/scala/examples/ZSChain/validation/ParentBlockValidator.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: examples.commons.SimpleBoxTransaction, examples.hybrid.history.HybridSyncInfoMessageSpec, examples.hybrid.wallet.SimpleBoxTransactionGeneratorRef, examples.hybrid.mining.HybridMiningSettings, examples.hybrid.mining.PosForgerRef, examples.hybrid.wallet.GenesisStateGenerator, examples.hybrid.history.HistoryStorage, examples.hybrid.mining.PosForger.ReceivableMessages, examples.hybrid.mining.PowMiner.ReceivableMessages.StopMining, examples.hybrid.validation.DifficultyBlockValidator, examples.hybrid.wallet.SimpleBoxTransactionGenerator.ReceivableMessages.StartGeneration, examples.hybrid.mining.PowMiner.ReceivableMessages.PowMiningInfo, examples.hybrid.blocks.PosBlockSerializer, examples.hybrid.mining.PosForger.ReceivableMessages.StartForging, examples.hybrid.blocks.PowBlock, examples.hybrid.simulations.PrivateChain, examples.hybrid.state.HBoxStoredState, examples.hybrid.util.FileFunctions, examples.hybrid.HLocalInterface, examples.hybrid.blocks.PosBlock, examples.hybrid.wallet.HBoxWallet, examples.hybrid.api.http.StatsApiRoute, examples.hybrid.mining.HybridSettings, examples.hybrid.mining.PowMiner.ReceivableMessages.MineBlock, examples.hybrid.history.HybridSyncInfoSerializer, examples.hybrid.validation.ParentBlockValidator, examples.hybrid.wallet.SimpleBoxTransactionGenerator.ReceivableMessages.GeneratorInfo, examples.hybrid.mining.PosForger.ReceivableMessages.StopForging, examples.hybrid.HLocalInterfaceRef, examples.hybrid.history.HybridHistory, examples.hybrid.wallet.SimpleBoxTransactionGenerator.ReceivableMessages, examples.hybrid.mining.WalletSettings, examples.hybrid.api.http.WalletApiRoute, examples.hybrid.validation.SemanticBlockValidator, examples.hybrid.HybridNodeViewHolderRef, examples.hybrid.blocks.PowBlockSerializer, examples.hybrid.HybridApp, examples.hybrid.mining.PowMiner, examples.commons.SimpleBoxTransactionSerializer, examples.hybrid.api.http.DebugApiRoute, examples.hybrid.mining.PowMiner.ReceivableMessages.StartMining, examples.hybrid.mining.PosForger, examples.hybrid.mining.PowMinerRef, examples.hybrid.util.CancellableStatus, examples.hybrid.mining.PosForger.ReceivableMessages.PosForgingInfo, examples.hybrid.history.HybridSyncInfo, examples.hybrid.blocks.PowBlockHeaderSerializer, examples.hybrid.mining.PowMiner.ReceivableMessages, examples.hybrid.HybridNodeViewHolder, examples.hybrid.blocks.PowBlockHeader, examples.hybrid.blocks.HybridBlock, examples.hybrid.wallet.SimpleBoxTransactionGenerator, examples.hybrid.util.Cancellable[0m
[0m[[0m[0mdebug[0m] [0m[0mRecompiling all sources: number of invalidated sources > 50.0% of all sources[0m
[0m[[0m[0minfo[0m] [0m[0mCompiling 29 Scala sources to /Users/hungnguyen/Downloads/Scorex/examples/target/scala-2.12/classes ...[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting org.scala-sbt:compiler-bridge_2.12:1.3.5:compile for Scala 2.12.12[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting org.scala-sbt:compiler-bridge_2.12:1.3.5:compile for Scala 2.12.12[0m
[0m[[0m[0mdebug[0m] [0m[0m[zinc] Running cached compiler 687784b4 for Scala compiler version 2.12.12[0m
[0m[[0m[0mdebug[0m] [0m[0m[zinc] The Scala compiler is invoked with:[0m
[0m[[0m[0mdebug[0m] [0m[0m	-P:wartremover:traverser:org.wartremover.warts.Recursion[0m
[0m[[0m[0mdebug[0m] [0m[0m	-P:wartremover:traverser:org.wartremover.warts.TraversableOps[0m
[0m[[0m[0mdebug[0m] [0m[0m	-P:wartremover:traverser:org.wartremover.warts.Null[0m
[0m[[0m[0mdebug[0m] [0m[0m	-P:wartremover:traverser:org.wartremover.warts.Product[0m
[0m[[0m[0mdebug[0m] [0m[0m	-P:wartremover:traverser:org.wartremover.warts.PublicInference[0m
[0m[[0m[0mdebug[0m] [0m[0m	-P:wartremover:traverser:org.wartremover.warts.FinalVal[0m
[0m[[0m[0mdebug[0m] [0m[0m	-P:wartremover:traverser:org.wartremover.warts.IsInstanceOf[0m
[0m[[0m[0mdebug[0m] [0m[0m	-P:wartremover:traverser:org.wartremover.warts.JavaConversions[0m
[0m[[0m[0mdebug[0m] [0m[0m	-P:wartremover:traverser:org.wartremover.warts.JavaSerializable[0m
[0m[[0m[0mdebug[0m] [0m[0m	-P:wartremover:traverser:org.wartremover.warts.Serializable[0m
[0m[[0m[0mdebug[0m] [0m[0m	-P:wartremover:traverser:org.wartremover.warts.OptionPartial[0m
[0m[[0m[0mdebug[0m] [0m[0m	-Xplugin:/Users/hungnguyen/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/wartremover/wartremover_2.12/2.2.1/wartremover_2.12-2.2.1.jar[0m
[0m[[0m[0mdebug[0m] [0m[0m	-bootclasspath[0m
[0m[[0m[0mdebug[0m] [0m[0m	/Users/hungnguyen/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.12.12/scala-library-2.12.12.jar[0m
[0m[[0m[0mdebug[0m] [0m[0m	-classpath[0m
[0m[[0m[0mdebug[0m] [0m[0m	/Users/hungnguyen/Downloads/Scorex/examples/target/scala-2.12/classes:/Users/hungnguyen/Downloads/Scorex/target/scala-2.12/classes:/Users/hungnguyen/Downloads/Scorex/testkit/target/scala-2.12/classes:/Users/hungnguyen/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/scorexfoundation/iodb_2.12/0.3.2/iodb_2.12-0.3.2.jar:/Users/hungnguyen/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/com/iheart/ficus_2.12/1.4.2/ficus_2.12-1.4.2.jar:/Users/hungnguyen/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/scorexfoundation/scrypto_2.12/2.1.10/scrypto_2.12-2.1.10.jar:/Users/hungnguyen/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/scorexfoundation/scorex-util_2.12/0.1.8/scorex-util_2.12-0.1.8.jar:/Users/hungnguyen/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/com/typesafe/akka/akka-actor_2.12/2.6.10/akka-actor_2.12-2.6.10.jar:/Users/hungnguyen/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/com/typesafe/akka/akka-http-core_2.12/10.2.1/akka-http-core_2.12-10.2.1.jar:/Users/hungnguyen/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/com/typesafe/akka/akka-http_2.12/10.2.1/akka-http_2.12-10.2.1.jar:/Users/hungnguyen/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/com/typesafe/akka/akka-parsing_2.12/10.2.1/akka-parsing_2.12-10.2.1.jar:/Users/hungnguyen/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/com/typesafe/akka/akka-protobuf_2.12/2.6.10/akka-protobuf_2.12-2.6.10.jar:/Users/hungnguyen/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/com/typesafe/akka/akka-stream_2.12/2.6.10/akka-stream_2.12-2.6.10.jar:/Users/hungnguyen/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/bitlet/weupnp/0.1.4/weupnp-0.1.4.jar:/Users/hungnguyen/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/commons-net/commons-net/3.6/commons-net-3.6.jar:/Users/hungnguyen/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/io/circe/circe-core_2.12/0.13.0/circe-core_2.12-0.13.0.jar:/Users/hungnguyen/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/io/circe/circe-generic_2.12/0.13.0/circe-generic_2.12-0.13.0.jar:/Users/hungnguyen/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/io/circe/circe-parser_2.12/0.13.0/circe-parser_2.12-0.13.0.jar:/Users/hungnguyen/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/de/heikoseeberger/akka-http-circe_2.12/1.20.0/akka-http-circe_2.12-1.20.0.jar:/Users/hungnguyen/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/ch/qos/logback/logback-classic/1.3.0-alpha4/logback-classic-1.3.0-alpha4.jar:/Users/hungnguyen/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/scalacheck/scalacheck_2.12/1.14.0/scalacheck_2.12-1.14.0.jar:/Users/hungnguyen/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/scalactic/scalactic_2.12/3.1.1/scalactic_2.12-3.1.1.jar:/Users/hungnguyen/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/scalatest/scalatest_2.12/3.1.1/scalatest_2.12-3.1.1.jar:/Users/hungnguyen/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/scalatestplus/scalatestplus-scalacheck_2.12/3.1.0.0-RC2/scalatestplus-scalacheck_2.12-3.1.0.0-RC2.jar:/Users/hungnguyen/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/com/typesafe/akka/akka-testkit_2.12/2.6.10/akka-testkit_2.12-2.6.10.jar:/Users/hungnguyen/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/com/google/guava/guava/23.0/guava-23.0.jar:/Users/hungnguyen/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/net/jpountz/lz4/lz4/1.3.0/lz4-1.3.0.jar:/Users/hungnguyen/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/slf4j/slf4j-api/1.8.0-beta1/slf4j-api-1.8.0-beta1.jar:/Users/hungnguyen/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/com/typesafe/config/1.4.0/config-1.4.0.jar:/Users/hungnguyen/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/typelevel/macro-compat_2.12/1.1.1/macro-compat_2.12-1.1.1.jar:/Users/hungnguyen/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/rudogma/supertagged_2.12/1.5/supertagged_2.12-1.5.jar:/Users/hungnguyen/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/com/typesafe/scala-logging/scala-logging_2.12/3.9.2/scala-logging_2.12-3.9.2.jar:/Users/hungnguyen/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/whispersystems/curve25519-java/0.5.0/curve25519-java-0.5.0.jar:/Users/hungnguyen/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/bouncycastle/bcprov-jdk15on/1.66/bcprov-jdk15on-1.66.jar:/Users/hungnguyen/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/scala-lang/modules/scala-java8-compat_2.12/0.8.0/scala-java8-compat_2.12-0.8.0.jar:/Users/hungnguyen/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/com/typesafe/akka/akka-protobuf-v3_2.12/2.6.10/akka-protobuf-v3_2.12-2.6.10.jar:/Users/hungnguyen/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/reactivestreams/reactive-streams/1.0.3/reactive-streams-1.0.3.jar:/Users/hungnguyen/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/com/typesafe/ssl-config-core_2.12/0.4.2/ssl-config-core_2.12-0.4.2.jar:/Users/hungnguyen/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/io/circe/circe-numbers_2.12/0.13.0/circe-numbers_2.12-0.13.0.jar:/Users/hungnguyen/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/typelevel/cats-core_2.12/2.1.0/cats-core_2.12-2.1.0.jar:/Users/hungnguyen/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/com/chuusai/shapeless_2.12/2.3.3/shapeless_2.12-2.3.3.jar:/Users/hungnguyen/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/io/circe/circe-jawn_2.12/0.13.0/circe-jawn_2.12-0.13.0.jar:/Users/hungnguyen/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/ch/qos/logback/logback-core/1.3.0-alpha4/logback-core-1.3.0-alpha4.jar:/Users/hungnguyen/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/com/sun/mail/javax.mail/1.6.0/javax.mail-1.6.0.jar:/Users/hungnguyen/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/scala-sbt/test-interface/1.0/test-interface-1.0.jar:/Users/hungnguyen/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-reflect/2.12.12/scala-reflect-2.12.12.jar:/Users/hungnguyen/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/scala-lang/modules/scala-xml_2.12/1.2.0/scala-xml_2.12-1.2.0.jar:/Users/hungnguyen/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/com/google/code/findbugs/jsr305/1.3.9/jsr305-1.3.9.jar:/Users/hungnguyen/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/com/google/errorprone/error_prone_annotations/2.0.18/error_prone_annotations-2.0.18.jar:/Users/hungnguyen/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/com/google/j2objc/j2objc-annotations/1.1/j2objc-annotations-1.1.jar:/Users/hungnguyen/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/codehaus/mojo/animal-sniffer-annotations/1.14/animal-sniffer-annotations-1.14.jar:/Users/hungnguyen/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/scala-lang/modules/scala-parser-combinators_2.12/1.1.2/scala-parser-combinators_2.12-1.1.2.jar:/Users/hungnguyen/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/typelevel/cats-macros_2.12/2.1.0/cats-macros_2.12-2.1.0.jar:/Users/hungnguyen/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/typelevel/cats-kernel_2.12/2.1.0/cats-kernel_2.12-2.1.0.jar:/Users/hungnguyen/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/typelevel/jawn-parser_2.12/1.0.0/jawn-parser_2.12-1.0.0.jar:/Users/hungnguyen/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/javax/activation/activation/1.1/activation-1.1.jar[0m
[0m[[0m[0mdebug[0m] [0m[0mScala compilation took 7.410377284 s[0m
[0m[[0m[0minfo[0m] [0m[0mDone compiling.[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from examples.ZSChain.mining.PosForger.ReceivableMessages...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: examples.ZSChain.mining.PosForger.ReceivableMessages[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(examples.ZSChain.mining.PosForger.ReceivableMessages)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of examples.ZSChain.HLocalInterface: Set(UsedName(==,[Default]), UsedName(isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName(ReceivableMessages,[Default]), UsedName(StopForging,[Default]), UsedName(StartForging,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(examples.ZSChain.mining.PosForger.ReceivableMessages,ModifiedNames(changes = UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(notifyAll,[Default]), UsedName(isInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(PosForgingInfo,[Default]), UsedName(hashCode,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(##,[Default]), UsedName(getClass,[Default]), UsedName(clone,[Default]), UsedName(asInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(finalize,[Default]), UsedName(!=,[Default]), UsedName(ReceivableMessages,[Default]), UsedName(StopForging,[Default]), UsedName(StartForging,[Default]), UsedName(wait,[Default]))) invalidates 2 classes due to The examples.ZSChain.mining.PosForger.ReceivableMessages has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(notifyAll,[Default]), UsedName(isInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(PosForgingInfo,[Default]), UsedName(hashCode,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(##,[Default]), UsedName(getClass,[Default]), UsedName(clone,[Default]), UsedName(asInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(finalize,[Default]), UsedName(!=,[Default]), UsedName(ReceivableMessages,[Default]), UsedName(StopForging,[Default]), UsedName(StartForging,[Default]), UsedName(wait,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(examples.ZSChain.mining.PosForger.ReceivableMessages)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(examples.ZSChain.HLocalInterface)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from examples.ZSChain.mining.PosForger...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: examples.ZSChain.mining.PosForger[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(examples.ZSChain.mining.PosForger)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following member ref dependencies of examples.ZSChain.mining.PosForger are invalidated:[0m
[0m[[0m[0mdebug[0m] [0m[0m	examples.ZSChain.HLocalInterface[0m
[0m[[0m[0mdebug[0m] [0m[0m	examples.ZSChain.history.HistoryStorage[0m
[0m[[0m[0mdebug[0m] [0m[0m	examples.ZSChain.simulations.PrivateChain[0m
[0m[[0m[0mdebug[0m] [0m[0m	examples.ZSChain.validation.DifficultyBlockValidator[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(examples.ZSChain.mining.PosForger,ModifiedNames(changes = UsedName(postRestart,[Default]), UsedName(PosForger,[Default]), UsedName(==,[Default]), UsedName(preStart,[Default]), UsedName(eq,[Default]), UsedName(notifyAll,[Default]), UsedName($init$,[Default]), UsedName(isInstanceOf,[Default]), UsedName(aroundReceive,[Default]), UsedName(self,[Implicit]), UsedName(forging,[Default]), UsedName(synchronized,[Default]), UsedName(InitialDifficuly,[Default]), UsedName(postStop,[Default]), UsedName(examples;ZSChain;mining;PosForger;init;,[Default]), UsedName(hashCode,[Default]), UsedName(aroundPostRestart,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(##,[Default]), UsedName(posIterationSecond,[Default]), UsedName(getClass,[Default]), UsedName(clone,[Default]), UsedName(logger,[Default]), UsedName(sender,[Default]), UsedName(supervisorStrategy,[Default]), UsedName(Receive,[Default]), UsedName(asInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(receive,[Default]), UsedName(context,[Implicit]), UsedName(posIteration,[Default]), UsedName(finalize,[Default]), UsedName(log,[Default]), UsedName(!=,[Default]), UsedName(ReceivableMessages,[Default]), UsedName(aroundPostStop,[Default]), UsedName(wait,[Default]), UsedName(getRequiredData,[Default]), UsedName(aroundPreRestart,[Default]), UsedName(preRestart,[Default]), UsedName(aroundPreStart,[Default]), UsedName(unhandled,[Default]), UsedName(hit,[Default]))) invalidates 5 classes due to The examples.ZSChain.mining.PosForger has the following implicit definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(self,[Implicit]), UsedName(context,[Implicit]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(examples.ZSChain.mining.PosForger)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(examples.ZSChain.HLocalInterface, examples.ZSChain.validation.DifficultyBlockValidator, examples.ZSChain.simulations.PrivateChain, examples.ZSChain.history.HistoryStorage)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from examples.commons.SimpleBoxTransaction...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: examples.commons.SimpleBoxTransaction[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(examples.commons.SimpleBoxTransaction)[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of examples.ZSChain.HybridApp. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of examples.ZSChain.wallet.SimpleBoxTransactionGenerator.ReceivableMessages.GeneratorInfo. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of examples.ZSChain.history.HybridHistory. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of examples.ZSChain.blocks.PosBlockSerializer. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of examples.commons.SimpleBoxTransactionMemPool. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of examples.ZSChain.simulations.PrivateChain. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of examples.ZSChain.api.http.WalletApiRoute: Set(UsedName(create,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of examples.ZSChain.blocks.PosBlock. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of examples.ZSChain.wallet.HBoxWallet. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of examples.ZSChain.blocks.HybridBlock. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of examples.ZSChain.wallet.SimpleBoxTransactionGenerator: Set(UsedName(create,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of examples.ZSChain.mining.PosForger: Set(UsedName(create,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of examples.ZSChain.state.HBoxStoredState. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of examples.ZSChain.HybridNodeViewHolder: Set(UsedName(create,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of examples.ZSChain.mining.PosForger.ReceivableMessages.PosForgingInfo. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of examples.ZSChain.blocks.PowBlockHeader. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of examples.ZSChain.blocks.PowBlock. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(examples.commons.SimpleBoxTransaction,ModifiedNames(changes = UsedName(create,[Default]))) invalidates 5 classes due to The examples.commons.SimpleBoxTransaction has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(create,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(examples.commons.SimpleBoxTransaction)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(examples.ZSChain.api.http.WalletApiRoute, examples.ZSChain.wallet.SimpleBoxTransactionGenerator, examples.ZSChain.mining.PosForger, examples.ZSChain.HybridNodeViewHolder)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from examples.hybrid.mining.HybridSettings...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: examples.hybrid.mining.HybridSettings[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(examples.hybrid.mining.HybridSettings)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(examples.hybrid.mining.HybridSettings,ModifiedNames(changes = UsedName(copy$default$2,[Default]), UsedName(read,[Default]), UsedName(walletSettings,[Default]), UsedName(inetSocketAddressReader,[Implicit]), UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(notifyAll,[Default]), UsedName(scorexSettings,[Default]), UsedName(productElement,[Default]), UsedName($init$,[Default]), UsedName(isInstanceOf,[Default]), UsedName(apply,[Default]), UsedName(synchronized,[Default]), UsedName(productPrefix,[Default]), UsedName(hashCode,[Default]), UsedName(byteValueReader,[Implicit]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(copy$default$3,[Default]), UsedName(toString,[Default]), UsedName(HybridSettings,[Default]), UsedName(copy$default$1,[Default]), UsedName(##,[Default]), UsedName(getClass,[Default]), UsedName(clone,[Default]), UsedName(logger,[Default]), UsedName(examples;hybrid;mining;HybridSettings;init;,[Default]), UsedName(unapply,[Default]), UsedName(asInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(networkSettingsValueReader,[Implicit]), UsedName(productArity,[Default]), UsedName(finalize,[Default]), UsedName(log,[Default]), UsedName(!=,[Default]), UsedName(mining,[Default]), UsedName(fileReader,[Implicit]), UsedName(wait,[Default]), UsedName(productIterator,[Default]), UsedName(copy,[Default]), UsedName(canEqual,[Default]))) invalidates 1 classes due to The examples.hybrid.mining.HybridSettings has the following implicit definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(inetSocketAddressReader,[Implicit]), UsedName(byteValueReader,[Implicit]), UsedName(networkSettingsValueReader,[Implicit]), UsedName(fileReader,[Implicit]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(examples.hybrid.mining.HybridSettings)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from examples.hybrid.mining.PosForger...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: examples.hybrid.mining.PosForger[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(examples.hybrid.mining.PosForger)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(examples.hybrid.mining.PosForger,ModifiedNames(changes = UsedName(postRestart,[Default]), UsedName(PosForger,[Default]), UsedName(==,[Default]), UsedName(preStart,[Default]), UsedName(eq,[Default]), UsedName(notifyAll,[Default]), UsedName($init$,[Default]), UsedName(isInstanceOf,[Default]), UsedName(aroundReceive,[Default]), UsedName(self,[Implicit]), UsedName(forging,[Default]), UsedName(synchronized,[Default]), UsedName(InitialDifficuly,[Default]), UsedName(postStop,[Default]), UsedName(examples;hybrid;mining;PosForger;init;,[Default]), UsedName(hashCode,[Default]), UsedName(aroundPostRestart,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(##,[Default]), UsedName(posIterationSecond,[Default]), UsedName(getClass,[Default]), UsedName(clone,[Default]), UsedName(logger,[Default]), UsedName(sender,[Default]), UsedName(supervisorStrategy,[Default]), UsedName(Receive,[Default]), UsedName(asInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(receive,[Default]), UsedName(context,[Implicit]), UsedName(posIteration,[Default]), UsedName(finalize,[Default]), UsedName(log,[Default]), UsedName(!=,[Default]), UsedName(ReceivableMessages,[Default]), UsedName(aroundPostStop,[Default]), UsedName(wait,[Default]), UsedName(getRequiredData,[Default]), UsedName(aroundPreRestart,[Default]), UsedName(preRestart,[Default]), UsedName(aroundPreStart,[Default]), UsedName(unhandled,[Default]), UsedName(hit,[Default]))) invalidates 1 classes due to The examples.hybrid.mining.PosForger has the following implicit definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(self,[Implicit]), UsedName(context,[Implicit]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(examples.hybrid.mining.PosForger)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from examples.hybrid.mining.PowMiner.ReceivableMessages...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: examples.hybrid.mining.PowMiner.ReceivableMessages[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(examples.hybrid.mining.PowMiner.ReceivableMessages)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(examples.hybrid.mining.PowMiner.ReceivableMessages,ModifiedNames(changes = UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(StopMining,[Default]), UsedName(notifyAll,[Default]), UsedName(isInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(hashCode,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(StartMining,[Default]), UsedName(##,[Default]), UsedName(getClass,[Default]), UsedName(clone,[Default]), UsedName(asInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(PowMiningInfo,[Default]), UsedName(finalize,[Default]), UsedName(!=,[Default]), UsedName(ReceivableMessages,[Default]), UsedName(wait,[Default]), UsedName(MineBlock,[Default]))) invalidates 1 classes due to The examples.hybrid.mining.PowMiner.ReceivableMessages has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(StopMining,[Default]), UsedName(notifyAll,[Default]), UsedName(isInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(hashCode,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(StartMining,[Default]), UsedName(##,[Default]), UsedName(getClass,[Default]), UsedName(clone,[Default]), UsedName(asInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(PowMiningInfo,[Default]), UsedName(finalize,[Default]), UsedName(!=,[Default]), UsedName(ReceivableMessages,[Default]), UsedName(wait,[Default]), UsedName(MineBlock,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(examples.hybrid.mining.PowMiner.ReceivableMessages)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from examples.ZSChain.history.HistoryStorage...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: examples.ZSChain.history.HistoryStorage[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(examples.ZSChain.history.HistoryStorage)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of examples.ZSChain.api.http.StatsApiRoute: Set(UsedName(==,[Default]), UsedName(HistoryStorage,[Default]), UsedName(eq,[Default]), UsedName(getPoSDifficulty,[Default]), UsedName(isInstanceOf,[Default]), UsedName(toString,[Default]), UsedName(asInstanceOf,[Default]), UsedName(height,[Default]), UsedName(getPoWDifficulty,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of examples.ZSChain.validation.ParentBlockValidator: Set(UsedName(==,[Default]), UsedName(HistoryStorage,[Default]), UsedName(isInstanceOf,[Default]), UsedName(parentId,[Default]), UsedName(isGenesis,[Default]), UsedName(asInstanceOf,[Default]), UsedName(modifierById,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of examples.ZSChain.history.HybridHistory: Set(UsedName(bestPosBlock,[Default]), UsedName(semanticValidity,[Default]), UsedName(updateValidity,[Default]), UsedName(==,[Default]), UsedName(HistoryStorage,[Default]), UsedName(getPoSDifficulty,[Default]), UsedName(isInstanceOf,[Default]), UsedName(update,[Default]), UsedName(examples;ZSChain;history;HistoryStorage;init;,[Default]), UsedName(parentId,[Default]), UsedName(bestPowId,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(isGenesis,[Default]), UsedName(logger,[Default]), UsedName(parentHeight,[Default]), UsedName(asInstanceOf,[Default]), UsedName(bestPowBlock,[Default]), UsedName(height,[Default]), UsedName(modifierById,[Default]), UsedName(log,[Default]), UsedName(bestChainScore,[Default]), UsedName(getPoWDifficulty,[Default]), UsedName(bestPosId,[Default]), UsedName(heightOf,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of examples.ZSChain.validation.DifficultyBlockValidator: Set(UsedName(HistoryStorage,[Default]), UsedName(getPoSDifficulty,[Default]), UsedName(isInstanceOf,[Default]), UsedName(parentId,[Default]), UsedName(isGenesis,[Default]), UsedName(asInstanceOf,[Default]), UsedName(modifierById,[Default]), UsedName(getPoWDifficulty,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(examples.ZSChain.history.HistoryStorage,ModifiedNames(changes = UsedName(bestPosBlock,[Default]), UsedName(semanticValidity,[Default]), UsedName(updateValidity,[Default]), UsedName(==,[Default]), UsedName(HistoryStorage,[Default]), UsedName(eq,[Default]), UsedName(getPoSDifficulty,[Default]), UsedName(notifyAll,[Default]), UsedName($init$,[Default]), UsedName(isInstanceOf,[Default]), UsedName(update,[Default]), UsedName(examples;ZSChain;history;HistoryStorage;init;,[Default]), UsedName(parentId,[Default]), UsedName(synchronized,[Default]), UsedName(bestPowId,[Default]), UsedName(hashCode,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(##,[Default]), UsedName(getClass,[Default]), UsedName(isGenesis,[Default]), UsedName(clone,[Default]), UsedName(logger,[Default]), UsedName(parentHeight,[Default]), UsedName(asInstanceOf,[Default]), UsedName(bestPowBlock,[Default]), UsedName(equals,[Default]), UsedName(height,[Default]), UsedName(modifierById,[Default]), UsedName(finalize,[Default]), UsedName(log,[Default]), UsedName(bestChainScore,[Default]), UsedName(!=,[Default]), UsedName(getPoWDifficulty,[Default]), UsedName(bestPosId,[Default]), UsedName(wait,[Default]), UsedName(heightOf,[Default]))) invalidates 5 classes due to The examples.ZSChain.history.HistoryStorage has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(bestPosBlock,[Default]), UsedName(semanticValidity,[Default]), UsedName(updateValidity,[Default]), UsedName(==,[Default]), UsedName(HistoryStorage,[Default]), UsedName(eq,[Default]), UsedName(getPoSDifficulty,[Default]), UsedName(notifyAll,[Default]), UsedName($init$,[Default]), UsedName(isInstanceOf,[Default]), UsedName(update,[Default]), UsedName(examples;ZSChain;history;HistoryStorage;init;,[Default]), UsedName(parentId,[Default]), UsedName(synchronized,[Default]), UsedName(bestPowId,[Default]), UsedName(hashCode,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(##,[Default]), UsedName(getClass,[Default]), UsedName(isGenesis,[Default]), UsedName(clone,[Default]), UsedName(logger,[Default]), UsedName(parentHeight,[Default]), UsedName(asInstanceOf,[Default]), UsedName(bestPowBlock,[Default]), UsedName(equals,[Default]), UsedName(height,[Default]), UsedName(modifierById,[Default]), UsedName(finalize,[Default]), UsedName(log,[Default]), UsedName(bestChainScore,[Default]), UsedName(!=,[Default]), UsedName(getPoWDifficulty,[Default]), UsedName(bestPosId,[Default]), UsedName(wait,[Default]), UsedName(heightOf,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(examples.ZSChain.history.HistoryStorage)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(examples.ZSChain.api.http.StatsApiRoute, examples.ZSChain.validation.ParentBlockValidator, examples.ZSChain.history.HybridHistory, examples.ZSChain.validation.DifficultyBlockValidator)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from examples.hybrid.HybridApp...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: examples.hybrid.HybridApp[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(examples.hybrid.HybridApp)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(examples.hybrid.HybridApp,ModifiedNames(changes = UsedName(HybridApp,[Default]), UsedName(stopAll,[Default]), UsedName(executionContext,[Implicit]), UsedName(TX,[Default]), UsedName(PMOD,[Default]), UsedName(settings,[Implicit]), UsedName(actorSystem,[Implicit]), UsedName(==,[Default]), UsedName(rejectionHandler,[Implicit]), UsedName(eq,[Default]), UsedName(miner,[Default]), UsedName(notifyAll,[Default]), UsedName($init$,[Default]), UsedName(isInstanceOf,[Default]), UsedName(delayedInit,[Default]), UsedName(modifierSerializers,[Default]), UsedName(networkControllerRef,[Default]), UsedName(serializerReg,[Implicit]), UsedName(synchronized,[Default]), UsedName(run,[Default]), UsedName(settingsFilename,[Default]), UsedName(hashCode,[Default]), UsedName(features,[Default]), UsedName(examples;hybrid;HybridApp;init;,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(executionStart,[Default]), UsedName(swaggerConfig,[Default]), UsedName(toString,[Default]), UsedName(peerManagerRef,[Default]), UsedName(##,[Default]), UsedName(apiRoutes,[Default]), UsedName(args,[Default]), UsedName(getClass,[Default]), UsedName(forger,[Default]), UsedName(clone,[Default]), UsedName(logger,[Default]), UsedName(additionalMessageSpecs,[Default]), UsedName(asInstanceOf,[Default]), UsedName(nodeViewHolderRef,[Default]), UsedName(equals,[Default]), UsedName(timeProvider,[Default]), UsedName(externalSocketAddress,[Default]), UsedName(NVHT,[Default]), UsedName(localInterface,[Default]), UsedName(finalize,[Default]), UsedName(log,[Default]), UsedName(!=,[Default]), UsedName(exceptionHandler,[Implicit]), UsedName(peerSynchronizer,[Default]), UsedName(wait,[Default]), UsedName(nodeViewSynchronizer,[Default]), UsedName(combinedRoute,[Default]), UsedName(main,[Default]), UsedName(scorexContext,[Default]))) invalidates 1 classes due to The examples.hybrid.HybridApp has the following implicit definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(executionContext,[Implicit]), UsedName(settings,[Implicit]), UsedName(actorSystem,[Implicit]), UsedName(rejectionHandler,[Implicit]), UsedName(serializerReg,[Implicit]), UsedName(exceptionHandler,[Implicit]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(examples.hybrid.HybridApp)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from examples.ZSChain.HybridNodeViewHolder...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: examples.ZSChain.HybridNodeViewHolder[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(examples.ZSChain.HybridNodeViewHolder)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following member ref dependencies of examples.ZSChain.HybridNodeViewHolder are invalidated:[0m
[0m[[0m[0mdebug[0m] [0m[0m	examples.ZSChain.HybridApp[0m
[0m[[0m[0mdebug[0m] [0m[0m	examples.ZSChain.simulations.PrivateChain[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(examples.ZSChain.HybridNodeViewHolder,ModifiedNames(changes = UsedName(postRestart,[Default]), UsedName(memoryPool,[Default]), UsedName(updateNodeView$default$2,[Default]), UsedName(genesisState,[Default]), UsedName(minimalState,[Default]), UsedName(==,[Default]), UsedName(preStart,[Default]), UsedName(txModify,[Default]), UsedName(updateNodeView$default$4,[Default]), UsedName(eq,[Default]), UsedName(HIS,[Default]), UsedName(UpdateInformation,[Default]), UsedName(notifyAll,[Default]), UsedName(scorexSettings,[Default]), UsedName($init$,[Default]), UsedName(modifiersCache,[Default]), UsedName(isInstanceOf,[Default]), UsedName(MP,[Default]), UsedName(aroundReceive,[Default]), UsedName(self,[Implicit]), UsedName(processLocallyGeneratedModifiers,[Default]), UsedName(vault,[Default]), UsedName(synchronized,[Default]), UsedName(postStop,[Default]), UsedName(updateNodeView$default$1,[Default]), UsedName(transactionsProcessing,[Default]), UsedName(hashCode,[Default]), UsedName(NodeView,[Default]), UsedName(aroundPostRestart,[Default]), UsedName(extractTransactions,[Default]), UsedName(MS,[Default]), UsedName(encoder,[Implicit]), UsedName(notify,[Default]), UsedName(generateGenesisState,[Default]), UsedName(ne,[Default]), UsedName(updateMemPool,[Default]), UsedName(updateNodeView,[Default]), UsedName(SI,[Default]), UsedName(processRemoteModifiers,[Default]), UsedName(toString,[Default]), UsedName(examples;ZSChain;HybridNodeViewHolder;init;,[Default]), UsedName(##,[Default]), UsedName(getClass,[Default]), UsedName(clone,[Default]), UsedName(logger,[Default]), UsedName(updateNodeView$default$3,[Default]), UsedName(VL,[Default]), UsedName(sender,[Default]), UsedName(supervisorStrategy,[Default]), UsedName(Receive,[Default]), UsedName(asInstanceOf,[Default]), UsedName(restoreState,[Default]), UsedName(equals,[Default]), UsedName(getCurrentInfo,[Default]), UsedName(receive,[Default]), UsedName(context,[Implicit]), UsedName(finalize,[Default]), UsedName(log,[Default]), UsedName(HybridNodeViewHolder,[Default]), UsedName(!=,[Default]), UsedName(applyState,[Default]), UsedName(pmodModify,[Default]), UsedName(aroundPostStop,[Default]), UsedName(wait,[Default]), UsedName(aroundPreRestart,[Default]), UsedName(preRestart,[Default]), UsedName(aroundPreStart,[Default]), UsedName(unhandled,[Default]), UsedName(getNodeViewChanges,[Default]), UsedName(history,[Default]))) invalidates 3 classes due to The examples.ZSChain.HybridNodeViewHolder has the following implicit definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(self,[Implicit]), UsedName(encoder,[Implicit]), UsedName(context,[Implicit]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(examples.ZSChain.HybridNodeViewHolder)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(examples.ZSChain.HybridApp, examples.ZSChain.simulations.PrivateChain)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from examples.ZSChain.state.HBoxStoredState...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: examples.ZSChain.state.HBoxStoredState[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(examples.ZSChain.state.HBoxStoredState)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following member ref dependencies of examples.ZSChain.state.HBoxStoredState are invalidated:[0m
[0m[[0m[0mdebug[0m] [0m[0m	examples.ZSChain.HybridNodeViewHolder[0m
[0m[[0m[0mdebug[0m] [0m[0m	examples.ZSChain.api.http.DebugApiRoute[0m
[0m[[0m[0mdebug[0m] [0m[0m	examples.ZSChain.api.http.StatsApiRoute[0m
[0m[[0m[0mdebug[0m] [0m[0m	examples.ZSChain.api.http.WalletApiRoute[0m
[0m[[0m[0mdebug[0m] [0m[0m	examples.ZSChain.mining.PosForger[0m
[0m[[0m[0mdebug[0m] [0m[0m	examples.ZSChain.mining.PowMiner[0m
[0m[[0m[0mdebug[0m] [0m[0m	examples.ZSChain.simulations.PrivateChain[0m
[0m[[0m[0mdebug[0m] [0m[0m	examples.ZSChain.wallet.HBoxWallet[0m
[0m[[0m[0mdebug[0m] [0m[0m	examples.ZSChain.wallet.SimpleBoxTransactionGenerator[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(examples.ZSChain.state.HBoxStoredState,ModifiedNames(changes = UsedName(semanticValidity,[Default]), UsedName(copy$default$2,[Default]), UsedName(version,[Default]), UsedName(genesisState,[Default]), UsedName(changes,[Default]), UsedName(==,[Default]), UsedName(getReader,[Default]), UsedName(eq,[Default]), UsedName(store,[Default]), UsedName(filterValid,[Default]), UsedName(notifyAll,[Default]), UsedName(productElement,[Default]), UsedName($init$,[Default]), UsedName(isInstanceOf,[Default]), UsedName(apply,[Default]), UsedName(examples;ZSChain;state;HBoxStoredState;init;,[Default]), UsedName(applyModifier,[Default]), UsedName(synchronized,[Default]), UsedName(productPrefix,[Default]), UsedName(maxRollbackDepth,[Default]), UsedName(hashCode,[Default]), UsedName(encoder,[Implicit]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(readOrGenerate,[Default]), UsedName(HPMOD,[Default]), UsedName(toString,[Default]), UsedName(boxesOf,[Default]), UsedName(copy$default$1,[Default]), UsedName(##,[Default]), UsedName(rollbackTo,[Default]), UsedName(getClass,[Default]), UsedName(clone,[Default]), UsedName(validate,[Default]), UsedName(logger,[Default]), UsedName(HBoxStoredState,[Default]), UsedName(unapply,[Default]), UsedName(asInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(productArity,[Default]), UsedName(NVCT,[Default]), UsedName(closedBox,[Default]), UsedName(finalize,[Default]), UsedName(isValid,[Default]), UsedName(log,[Default]), UsedName(!=,[Default]), UsedName(applyChanges,[Default]), UsedName(wait,[Default]), UsedName(productIterator,[Default]), UsedName(copy,[Default]), UsedName(canEqual,[Default]))) invalidates 10 classes due to The examples.ZSChain.state.HBoxStoredState has the following implicit definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(encoder,[Implicit]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(examples.ZSChain.state.HBoxStoredState)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(examples.ZSChain.api.http.DebugApiRoute, examples.ZSChain.api.http.StatsApiRoute, examples.ZSChain.simulations.PrivateChain, examples.ZSChain.api.http.WalletApiRoute, examples.ZSChain.wallet.HBoxWallet, examples.ZSChain.wallet.SimpleBoxTransactionGenerator, examples.ZSChain.mining.PowMiner, examples.ZSChain.mining.PosForger, examples.ZSChain.HybridNodeViewHolder)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from examples.ZSChain.history.HybridSyncInfoMessageSpec...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: examples.ZSChain.history.HybridSyncInfoMessageSpec[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(examples.ZSChain.history.HybridSyncInfoMessageSpec)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of examples.ZSChain.HybridApp: Set(UsedName(HybridSyncInfoMessageSpec,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(examples.ZSChain.history.HybridSyncInfoMessageSpec,ModifiedNames(changes = UsedName(toBytes,[Default]), UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(parse,[Default]), UsedName(notifyAll,[Default]), UsedName($init$,[Default]), UsedName(isInstanceOf,[Default]), UsedName(protocolVersion,[Default]), UsedName(parseBytes,[Default]), UsedName(synchronized,[Default]), UsedName(parseByteString,[Default]), UsedName(hashCode,[Default]), UsedName(parseBytesTry,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(parseByteStringTry,[Default]), UsedName(##,[Default]), UsedName(getClass,[Default]), UsedName(clone,[Default]), UsedName(asInstanceOf,[Default]), UsedName(messageName,[Default]), UsedName(equals,[Default]), UsedName(HybridSyncInfoMessageSpec,[Default]), UsedName(serialize,[Default]), UsedName(finalize,[Default]), UsedName(!=,[Default]), UsedName(parseTry,[Default]), UsedName(wait,[Default]), UsedName(toByteString,[Default]), UsedName(messageCode,[Default]))) invalidates 2 classes due to The examples.ZSChain.history.HybridSyncInfoMessageSpec has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(toBytes,[Default]), UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(parse,[Default]), UsedName(notifyAll,[Default]), UsedName($init$,[Default]), UsedName(isInstanceOf,[Default]), UsedName(protocolVersion,[Default]), UsedName(parseBytes,[Default]), UsedName(synchronized,[Default]), UsedName(parseByteString,[Default]), UsedName(hashCode,[Default]), UsedName(parseBytesTry,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(parseByteStringTry,[Default]), UsedName(##,[Default]), UsedName(getClass,[Default]), UsedName(clone,[Default]), UsedName(asInstanceOf,[Default]), UsedName(messageName,[Default]), UsedName(equals,[Default]), UsedName(HybridSyncInfoMessageSpec,[Default]), UsedName(serialize,[Default]), UsedName(finalize,[Default]), UsedName(!=,[Default]), UsedName(parseTry,[Default]), UsedName(wait,[Default]), UsedName(toByteString,[Default]), UsedName(messageCode,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(examples.ZSChain.history.HybridSyncInfoMessageSpec)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(examples.ZSChain.HybridApp)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from examples.ZSChain.validation.DifficultyBlockValidator...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: examples.ZSChain.validation.DifficultyBlockValidator[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(examples.ZSChain.validation.DifficultyBlockValidator)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following member ref dependencies of examples.ZSChain.validation.DifficultyBlockValidator are invalidated:[0m
[0m[[0m[0mdebug[0m] [0m[0m	examples.ZSChain.history.HybridHistory[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(examples.ZSChain.validation.DifficultyBlockValidator,ModifiedNames(changes = UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(examples;ZSChain;validation;DifficultyBlockValidator;init;,[Default]), UsedName(notifyAll,[Default]), UsedName($init$,[Default]), UsedName(isInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(hashCode,[Default]), UsedName(encoder,[Implicit]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(##,[Default]), UsedName(getClass,[Default]), UsedName(clone,[Default]), UsedName(validate,[Default]), UsedName(asInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(finalize,[Default]), UsedName(!=,[Default]), UsedName(wait,[Default]), UsedName(DifficultyBlockValidator,[Default]))) invalidates 2 classes due to The examples.ZSChain.validation.DifficultyBlockValidator has the following implicit definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(encoder,[Implicit]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(examples.ZSChain.validation.DifficultyBlockValidator)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(examples.ZSChain.history.HybridHistory)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from examples.ZSChain.wallet.GenesisStateGenerator...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: examples.ZSChain.wallet.GenesisStateGenerator[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(examples.ZSChain.wallet.GenesisStateGenerator)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(examples.ZSChain.wallet.GenesisStateGenerator,ModifiedNames(changes = UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(notifyAll,[Default]), UsedName($init$,[Default]), UsedName(isInstanceOf,[Default]), UsedName(delayedInit,[Default]), UsedName(GenesisStateGenerator,[Default]), UsedName(synchronized,[Default]), UsedName(hashCode,[Default]), UsedName(encoder,[Implicit]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(executionStart,[Default]), UsedName(toString,[Default]), UsedName(##,[Default]), UsedName(args,[Default]), UsedName(getClass,[Default]), UsedName(clone,[Default]), UsedName(asInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(finalize,[Default]), UsedName(!=,[Default]), UsedName(pks,[Default]), UsedName(wait,[Default]), UsedName(main,[Default]))) invalidates 1 classes due to The examples.ZSChain.wallet.GenesisStateGenerator has the following implicit definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(encoder,[Implicit]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(examples.ZSChain.wallet.GenesisStateGenerator)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from examples.ZSChain.HLocalInterfaceRef...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: examples.ZSChain.HLocalInterfaceRef[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(examples.ZSChain.HLocalInterfaceRef)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of examples.ZSChain.HybridApp: Set(UsedName(apply,[Default]), UsedName(props,[Default]), UsedName(HLocalInterfaceRef,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(examples.ZSChain.HLocalInterfaceRef,ModifiedNames(changes = UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(notifyAll,[Default]), UsedName(isInstanceOf,[Default]), UsedName(apply,[Default]), UsedName(synchronized,[Default]), UsedName(hashCode,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(##,[Default]), UsedName(getClass,[Default]), UsedName(clone,[Default]), UsedName(asInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(props,[Default]), UsedName(finalize,[Default]), UsedName(!=,[Default]), UsedName(wait,[Default]), UsedName(HLocalInterfaceRef,[Default]))) invalidates 2 classes due to The examples.ZSChain.HLocalInterfaceRef has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(notifyAll,[Default]), UsedName(isInstanceOf,[Default]), UsedName(apply,[Default]), UsedName(synchronized,[Default]), UsedName(hashCode,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(##,[Default]), UsedName(getClass,[Default]), UsedName(clone,[Default]), UsedName(asInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(props,[Default]), UsedName(finalize,[Default]), UsedName(!=,[Default]), UsedName(wait,[Default]), UsedName(HLocalInterfaceRef,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(examples.ZSChain.HLocalInterfaceRef)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(examples.ZSChain.HybridApp)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from examples.hybrid.history.HybridHistory...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: examples.hybrid.history.HybridHistory[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(examples.hybrid.history.HybridHistory)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(examples.hybrid.history.HybridHistory,ModifiedNames(changes = UsedName(bestPosBlock,[Default]), UsedName(powDifficulty,[Default]), UsedName(bestBlock,[Default]), UsedName(applicableTry,[Default]), UsedName(syncInfo,[Default]), UsedName(==,[Default]), UsedName(getReader,[Default]), UsedName(eq,[Default]), UsedName(reportModifierIsValid,[Default]), UsedName(notifyAll,[Default]), UsedName(reportModifierIsInvalid,[Default]), UsedName(storage,[Default]), UsedName($init$,[Default]), UsedName(isInstanceOf,[Default]), UsedName(generatorDistribution,[Default]), UsedName(synchronized,[Default]), UsedName(bestPowId,[Default]), UsedName(compare,[Default]), UsedName(examples;hybrid;history;HybridHistory;init;,[Default]), UsedName(hashCode,[Default]), UsedName(contains,[Default]), UsedName(HybridHistory,[Default]), UsedName(isEmpty,[Default]), UsedName(encoder,[Implicit]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(count,[Default]), UsedName(averageDelay,[Default]), UsedName(readOrGenerate,[Default]), UsedName(DifficultyRecalcPeriod,[Default]), UsedName(toString,[Default]), UsedName(blockGenerator,[Default]), UsedName(filter,[Default]), UsedName(isSemanticallyValid,[Default]), UsedName(##,[Default]), UsedName(getClass,[Default]), UsedName(clone,[Default]), UsedName(logger,[Default]), UsedName(commonBlockThenSuffixes,[Default]), UsedName(bestForkChanges,[Default]), UsedName(asInstanceOf,[Default]), UsedName(bestPowBlock,[Default]), UsedName(continuationIds,[Default]), UsedName(parentBlock,[Default]), UsedName(equals,[Default]), UsedName(openSurfaceIds,[Default]), UsedName(lastPowBlocks,[Default]), UsedName(height,[Default]), UsedName(modifierById,[Default]), UsedName(NVCT,[Default]), UsedName(finalize,[Default]), UsedName(log,[Default]), UsedName(!=,[Default]), UsedName(append,[Default]), UsedName(bestPosId,[Default]), UsedName(wait,[Default]), UsedName(lastBlockIds,[Default]), UsedName(commonBlockThenSuffixes$default$2,[Default]), UsedName(posDifficulty,[Default]), UsedName(pairCompleted,[Default]))) invalidates 1 classes due to The examples.hybrid.history.HybridHistory has the following implicit definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(encoder,[Implicit]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(examples.hybrid.history.HybridHistory)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from examples.ZSChain.HybridApp...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: examples.ZSChain.HybridApp[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(examples.ZSChain.HybridApp)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(examples.ZSChain.HybridApp,ModifiedNames(changes = UsedName(HybridApp,[Default]), UsedName(stopAll,[Default]), UsedName(executionContext,[Implicit]), UsedName(TX,[Default]), UsedName(PMOD,[Default]), UsedName(settings,[Implicit]), UsedName(actorSystem,[Implicit]), UsedName(==,[Default]), UsedName(rejectionHandler,[Implicit]), UsedName(eq,[Default]), UsedName(miner,[Default]), UsedName(notifyAll,[Default]), UsedName($init$,[Default]), UsedName(isInstanceOf,[Default]), UsedName(delayedInit,[Default]), UsedName(modifierSerializers,[Default]), UsedName(networkControllerRef,[Default]), UsedName(serializerReg,[Implicit]), UsedName(synchronized,[Default]), UsedName(run,[Default]), UsedName(settingsFilename,[Default]), UsedName(hashCode,[Default]), UsedName(features,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(executionStart,[Default]), UsedName(swaggerConfig,[Default]), UsedName(toString,[Default]), UsedName(peerManagerRef,[Default]), UsedName(##,[Default]), UsedName(apiRoutes,[Default]), UsedName(args,[Default]), UsedName(getClass,[Default]), UsedName(forger,[Default]), UsedName(clone,[Default]), UsedName(logger,[Default]), UsedName(additionalMessageSpecs,[Default]), UsedName(asInstanceOf,[Default]), UsedName(nodeViewHolderRef,[Default]), UsedName(equals,[Default]), UsedName(timeProvider,[Default]), UsedName(externalSocketAddress,[Default]), UsedName(NVHT,[Default]), UsedName(localInterface,[Default]), UsedName(finalize,[Default]), UsedName(log,[Default]), UsedName(!=,[Default]), UsedName(examples;ZSChain;HybridApp;init;,[Default]), UsedName(exceptionHandler,[Implicit]), UsedName(peerSynchronizer,[Default]), UsedName(wait,[Default]), UsedName(nodeViewSynchronizer,[Default]), UsedName(combinedRoute,[Default]), UsedName(main,[Default]), UsedName(scorexContext,[Default]))) invalidates 1 classes due to The examples.ZSChain.HybridApp has the following implicit definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(executionContext,[Implicit]), UsedName(settings,[Implicit]), UsedName(actorSystem,[Implicit]), UsedName(rejectionHandler,[Implicit]), UsedName(serializerReg,[Implicit]), UsedName(exceptionHandler,[Implicit]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(examples.ZSChain.HybridApp)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from examples.hybrid.mining.PosForger.ReceivableMessages.StopForging...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: examples.hybrid.mining.PosForger.ReceivableMessages.StopForging[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(examples.hybrid.mining.PosForger.ReceivableMessages.StopForging)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(examples.hybrid.mining.PosForger.ReceivableMessages.StopForging,ModifiedNames(changes = UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(notifyAll,[Default]), UsedName(productElement,[Default]), UsedName($init$,[Default]), UsedName(isInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(productPrefix,[Default]), UsedName(hashCode,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(##,[Default]), UsedName(getClass,[Default]), UsedName(clone,[Default]), UsedName(asInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(productArity,[Default]), UsedName(finalize,[Default]), UsedName(!=,[Default]), UsedName(StopForging,[Default]), UsedName(wait,[Default]), UsedName(productIterator,[Default]), UsedName(canEqual,[Default]))) invalidates 1 classes due to The examples.hybrid.mining.PosForger.ReceivableMessages.StopForging has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(notifyAll,[Default]), UsedName(productElement,[Default]), UsedName($init$,[Default]), UsedName(isInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(productPrefix,[Default]), UsedName(hashCode,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(##,[Default]), UsedName(getClass,[Default]), UsedName(clone,[Default]), UsedName(asInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(productArity,[Default]), UsedName(finalize,[Default]), UsedName(!=,[Default]), UsedName(StopForging,[Default]), UsedName(wait,[Default]), UsedName(productIterator,[Default]), UsedName(canEqual,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(examples.hybrid.mining.PosForger.ReceivableMessages.StopForging)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from examples.hybrid.history.HybridSyncInfo...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: examples.hybrid.history.HybridSyncInfo[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(examples.hybrid.history.HybridSyncInfo)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(examples.hybrid.history.HybridSyncInfo,ModifiedNames(changes = UsedName(copy$default$2,[Default]), UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(notifyAll,[Default]), UsedName(startingPoints,[Default]), UsedName(productElement,[Default]), UsedName($init$,[Default]), UsedName(examples;hybrid;history;HybridSyncInfo;init;,[Default]), UsedName(isInstanceOf,[Default]), UsedName(apply,[Default]), UsedName(synchronized,[Default]), UsedName(productPrefix,[Default]), UsedName(HybridSyncInfo,[Default]), UsedName(hashCode,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(copy$default$3,[Default]), UsedName(toString,[Default]), UsedName(copy$default$1,[Default]), UsedName(##,[Default]), UsedName(getClass,[Default]), UsedName(serializer,[Default]), UsedName(lastPowBlockIds,[Default]), UsedName(clone,[Default]), UsedName(unapply,[Default]), UsedName(asInstanceOf,[Default]), UsedName(bytes,[Default]), UsedName(equals,[Default]), UsedName(productArity,[Default]), UsedName(lastPosBlockId,[Default]), UsedName(finalize,[Default]), UsedName(!=,[Default]), UsedName(answer,[Default]), UsedName(M,[Default]), UsedName(wait,[Default]), UsedName(productIterator,[Default]), UsedName(copy,[Default]), UsedName(canEqual,[Default]), UsedName(MaxLastPowBlocks,[Default]))) invalidates 1 classes due to The examples.hybrid.history.HybridSyncInfo has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(copy$default$2,[Default]), UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(notifyAll,[Default]), UsedName(startingPoints,[Default]), UsedName(productElement,[Default]), UsedName($init$,[Default]), UsedName(examples;hybrid;history;HybridSyncInfo;init;,[Default]), UsedName(isInstanceOf,[Default]), UsedName(apply,[Default]), UsedName(synchronized,[Default]), UsedName(productPrefix,[Default]), UsedName(HybridSyncInfo,[Default]), UsedName(hashCode,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(copy$default$3,[Default]), UsedName(toString,[Default]), UsedName(copy$default$1,[Default]), UsedName(##,[Default]), UsedName(getClass,[Default]), UsedName(serializer,[Default]), UsedName(lastPowBlockIds,[Default]), UsedName(clone,[Default]), UsedName(unapply,[Default]), UsedName(asInstanceOf,[Default]), UsedName(bytes,[Default]), UsedName(equals,[Default]), UsedName(productArity,[Default]), UsedName(lastPosBlockId,[Default]), UsedName(finalize,[Default]), UsedName(!=,[Default]), UsedName(answer,[Default]), UsedName(M,[Default]), UsedName(wait,[Default]), UsedName(productIterator,[Default]), UsedName(copy,[Default]), UsedName(canEqual,[Default]), UsedName(MaxLastPowBlocks,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(examples.hybrid.history.HybridSyncInfo)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from examples.ZSChain.blocks.PowBlock...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: examples.ZSChain.blocks.PowBlock[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(examples.ZSChain.blocks.PowBlock)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following member ref dependencies of examples.ZSChain.blocks.PowBlock are invalidated:[0m
[0m[[0m[0mdebug[0m] [0m[0m	examples.ZSChain.HLocalInterface[0m
[0m[[0m[0mdebug[0m] [0m[0m	examples.ZSChain.HybridApp[0m
[0m[[0m[0mdebug[0m] [0m[0m	examples.ZSChain.HybridNodeViewHolder[0m
[0m[[0m[0mdebug[0m] [0m[0m	examples.ZSChain.api.http.DebugApiRoute[0m
[0m[[0m[0mdebug[0m] [0m[0m	examples.ZSChain.history.HistoryStorage[0m
[0m[[0m[0mdebug[0m] [0m[0m	examples.ZSChain.history.HybridHistory[0m
[0m[[0m[0mdebug[0m] [0m[0m	examples.ZSChain.history.HybridSyncInfo[0m
[0m[[0m[0mdebug[0m] [0m[0m	examples.ZSChain.mining.PosForger[0m
[0m[[0m[0mdebug[0m] [0m[0m	examples.ZSChain.mining.PosForger.ReceivableMessages.PosForgingInfo[0m
[0m[[0m[0mdebug[0m] [0m[0m	examples.ZSChain.mining.PowMiner[0m
[0m[[0m[0mdebug[0m] [0m[0m	examples.ZSChain.mining.PowMiner.ReceivableMessages.PowMiningInfo[0m
[0m[[0m[0mdebug[0m] [0m[0m	examples.ZSChain.simulations.PrivateChain[0m
[0m[[0m[0mdebug[0m] [0m[0m	examples.ZSChain.state.HBoxStoredState[0m
[0m[[0m[0mdebug[0m] [0m[0m	examples.ZSChain.validation.DifficultyBlockValidator[0m
[0m[[0m[0mdebug[0m] [0m[0m	examples.ZSChain.validation.ParentBlockValidator[0m
[0m[[0m[0mdebug[0m] [0m[0m	examples.ZSChain.validation.SemanticBlockValidator[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(examples.ZSChain.blocks.PowBlock,ModifiedNames(changes = UsedName(brothers,[Default]), UsedName(copy$default$2,[Default]), UsedName(prevPosId,[Default]), UsedName(version,[Default]), UsedName(brotherBytes,[Default]), UsedName(==,[Default]), UsedName(brothersCount,[Default]), UsedName(eq,[Default]), UsedName(id,[Default]), UsedName(transactions,[Default]), UsedName(notifyAll,[Default]), UsedName(productElement,[Default]), UsedName($init$,[Default]), UsedName(isInstanceOf,[Default]), UsedName(apply,[Default]), UsedName(ModifierTypeId,[Default]), UsedName(copy$default$6,[Default]), UsedName(parentId,[Default]), UsedName(synchronized,[Default]), UsedName(productPrefix,[Default]), UsedName(brothersHash,[Default]), UsedName(nonce,[Default]), UsedName(powBlockEncoder,[Implicit]), UsedName(hashCode,[Default]), UsedName(examples;ZSChain;blocks;PowBlock;init;,[Default]), UsedName(PowBlock,[Default]), UsedName(correctWork,[Default]), UsedName(copy$default$4,[Default]), UsedName(encoder,[Implicit]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(copy$default$3,[Default]), UsedName(copy$default$8,[Default]), UsedName(toString,[Default]), UsedName(timestamp,[Default]), UsedName(copy$default$1,[Default]), UsedName(##,[Default]), UsedName(getClass,[Default]), UsedName(serializer,[Default]), UsedName(header,[Default]), UsedName(clone,[Default]), UsedName(modifierTypeId,[Default]), UsedName(unapply,[Default]), UsedName(asInstanceOf,[Default]), UsedName(bytes,[Default]), UsedName(equals,[Default]), UsedName(productArity,[Default]), UsedName(finalize,[Default]), UsedName(!=,[Default]), UsedName(generatorProposition,[Default]), UsedName(copy$default$7,[Default]), UsedName(copy$default$5,[Default]), UsedName(M,[Default]), UsedName(wait,[Default]), UsedName(productIterator,[Default]), UsedName(copy,[Default]), UsedName(canEqual,[Default]), UsedName(encodedId,[Default]))) invalidates 17 classes due to The examples.ZSChain.blocks.PowBlock has the following implicit definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(powBlockEncoder,[Implicit]), UsedName(encoder,[Implicit]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(examples.ZSChain.blocks.PowBlock)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(examples.ZSChain.mining.PowMiner.ReceivableMessages.PowMiningInfo, examples.ZSChain.history.HistoryStorage, examples.ZSChain.HybridApp, examples.ZSChain.api.http.DebugApiRoute, examples.ZSChain.HLocalInterface, examples.ZSChain.history.HybridHistory, examples.ZSChain.validation.ParentBlockValidator, examples.ZSChain.simulations.PrivateChain, examples.ZSChain.validation.SemanticBlockValidator, examples.ZSChain.history.HybridSyncInfo, examples.ZSChain.mining.PowMiner, examples.ZSChain.mining.PosForger, examples.ZSChain.state.HBoxStoredState, examples.ZSChain.HybridNodeViewHolder, examples.ZSChain.mining.PosForger.ReceivableMessages.PosForgingInfo, examples.ZSChain.validation.DifficultyBlockValidator)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from examples.hybrid.blocks.PosBlock...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: examples.hybrid.blocks.PosBlock[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(examples.hybrid.blocks.PosBlock)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(examples.hybrid.blocks.PosBlock,ModifiedNames(changes = UsedName(copy$default$2,[Default]), UsedName(version,[Default]), UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(id,[Default]), UsedName(transactions,[Default]), UsedName(notifyAll,[Default]), UsedName(productElement,[Default]), UsedName($init$,[Default]), UsedName(isInstanceOf,[Default]), UsedName(apply,[Default]), UsedName(ModifierTypeId,[Default]), UsedName(copy$default$6,[Default]), UsedName(parentId,[Default]), UsedName(synchronized,[Default]), UsedName(productPrefix,[Default]), UsedName(hashCode,[Default]), UsedName(randBeacon,[Default]), UsedName(generatorBox,[Default]), UsedName(copy$default$4,[Default]), UsedName(posBlockEncoder,[Implicit]), UsedName(encoder,[Implicit]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(copy$default$3,[Default]), UsedName(toString,[Default]), UsedName(timestamp,[Default]), UsedName(signatureValid,[Default]), UsedName(copy$default$1,[Default]), UsedName(##,[Default]), UsedName(getClass,[Default]), UsedName(serializer,[Default]), UsedName(clone,[Default]), UsedName(logger,[Default]), UsedName(modifierTypeId,[Default]), UsedName(unapply,[Default]), UsedName(asInstanceOf,[Default]), UsedName(bytes,[Default]), UsedName(equals,[Default]), UsedName(productArity,[Default]), UsedName(PosBlock,[Default]), UsedName(finalize,[Default]), UsedName(log,[Default]), UsedName(!=,[Default]), UsedName(copy$default$7,[Default]), UsedName(copy$default$5,[Default]), UsedName(examples;hybrid;blocks;PosBlock;init;,[Default]), UsedName(M,[Default]), UsedName(signature,[Default]), UsedName(wait,[Default]), UsedName(productIterator,[Default]), UsedName(copy,[Default]), UsedName(MaxBlockSize,[Default]), UsedName(attachment,[Default]), UsedName(canEqual,[Default]), UsedName(encodedId,[Default]), UsedName(create,[Default]))) invalidates 1 classes due to The examples.hybrid.blocks.PosBlock has the following implicit definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(posBlockEncoder,[Implicit]), UsedName(encoder,[Implicit]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(examples.hybrid.blocks.PosBlock)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from examples.hybrid.api.http.StatsApiRoute...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: examples.hybrid.api.http.StatsApiRoute[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(examples.hybrid.api.http.StatsApiRoute)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(examples.hybrid.api.http.StatsApiRoute,ModifiedNames(changes = UsedName(defaultUrlEncodedFormDataUnmarshaller,[Implicit]), UsedName(as,[Default]), UsedName(withAuth,[Default]), UsedName(path,[Default]), UsedName(authenticateBasicPFAsync,[Default]), UsedName(copy$default$2,[Default]), UsedName(onCompleteWithBreaker,[Default]), UsedName(extractLog,[Default]), UsedName(extractExecutionContext,[Default]), UsedName(multipartUnmarshaller$default$7,[Default]), UsedName(extract,[Default]), UsedName(handleSync,[Default]), UsedName(withSizeLimit,[Default]), UsedName(formFieldMultiMap,[Default]), UsedName(urlEncodedFormDataUnmarshaller,[Default]), UsedName(Authenticator,[Default]), UsedName(separateOnSlashes,[Default]), UsedName(charArrayUnmarshaller,[Implicit]), UsedName(requestEncodedWith,[Default]), UsedName(_symbol2NR,[Implicit]), UsedName(textract,[Default]), UsedName(marshaller,[Implicit]), UsedName(host,[Default]), UsedName(withRangeSupport,[Default]), UsedName(pathPrefixTest,[Default]), UsedName(Neutral,[Default]), UsedName(jsonMarshaller$default$1,[Default]), UsedName(==,[Default]), UsedName(get,[Default]), UsedName(extractUpgradeToWebSocket,[Default]), UsedName(parameterMultiMap,[Default]), UsedName(_segmentStringToPathMatcher,[Implicit]), UsedName(encodeResponse,[Default]), UsedName(addCorsHeaders,[Default]), UsedName(mapRequest,[Default]), UsedName(eq,[Default]), UsedName(parameter,[Default]), UsedName(multipartGeneralUnmarshaller$default$3,[Default]), UsedName(authenticateOAuth2,[Default]), UsedName(complete,[Default]), UsedName(instanceOf,[Default]), UsedName(requestEntityEmpty,[Default]), UsedName(redirect,[Default]), UsedName(withMaterializer,[Default]), UsedName(put,[Default]), UsedName(withSettings,[Default]), UsedName(logRequest,[Default]), UsedName(notifyAll,[Default]), UsedName(JavaUUID,[Default]), UsedName(examples;hybrid;api;http;StatsApiRoute;init;,[Default]), UsedName(handleWebSocketMessagesForOptionalProtocol,[Default]), UsedName(multipartFormDataUnmarshaller$default$2,[Default]), UsedName(productElement,[Default]), UsedName(mapRejections,[Default]), UsedName($init$,[Default]), UsedName(meanDifficulty,[Default]), UsedName(isInstanceOf,[Default]), UsedName(mediaTypes,[Default]), UsedName(withPrecompressedMediaTypeSupport,[Default]), UsedName(extractCredentials,[Default]), UsedName(requestEntityPresent,[Default]), UsedName(apply,[Default]), UsedName(mapUnmatchedPath,[Default]), UsedName(fileUploadAll,[Default]), UsedName(rejectEmptyResponse,[Default]), UsedName(overrideMethodWithParameter,[Default]), UsedName(concat,[Default]), UsedName(encodeResponseWith,[Default]), UsedName(timeout,[Implicit]), UsedName(route,[Default]), UsedName(unmarshallerContentTypes,[Default]), UsedName(multipartUnmarshaller,[Default]), UsedName(extractOfferedWsProtocols,[Default]), UsedName(mapRequestContext,[Default]), UsedName(provide,[Default]), UsedName(failWith,[Default]), UsedName(headerValue,[Default]), UsedName(multipartUnmarshaller$default$8,[Default]), UsedName(corsHandler,[Default]), UsedName(completeOrRecoverWith,[Default]), UsedName(withRequestTimeout,[Default]), UsedName(authenticateOAuth2PF,[Default]), UsedName(synchronized,[Default]), UsedName(Segment,[Default]), UsedName(multipartGeneralUnmarshaller$default$2,[Default]), UsedName(RequestToSourceUnmarshaller,[Default]), UsedName(patch,[Default]), UsedName(deleteCookie$default$2,[Default]), UsedName(optionalHeaderValueByType,[Default]), UsedName(productPrefix,[Default]), UsedName(handle,[Default]), UsedName(extractRequestContext,[Default]), UsedName(authorize,[Default]), UsedName(cookie,[Default]), UsedName(handleWebSocketMessages,[Default]), UsedName(StatsApiRoute,[Default]), UsedName(post,[Default]), UsedName(extractMethod,[Default]), UsedName(multipartFormDataUnmarshaller,[Implicit]), UsedName(hashCode,[Default]), UsedName(extractScheme,[Default]), UsedName(mapResponseEntity,[Default]), UsedName(headerValueByType,[Default]), UsedName(extractClientIP,[Default]), UsedName(extractHost,[Default]), UsedName(getFromBrowseableDirectory,[Default]), UsedName(extractStrictEntity,[Default]), UsedName(optionalHeaderValueByName,[Default]), UsedName(withoutSizeLimit,[Default]), UsedName(optionalHeaderValuePF,[Default]), UsedName(defaultMultipartGeneralUnmarshaller$default$1,[Default]), UsedName(optionalAttribute,[Default]), UsedName(onComplete,[Default]), UsedName(authenticateOAuth2Async,[Default]), UsedName(unmarshaller,[Implicit]), UsedName(extractUri,[Default]), UsedName(mapSettings,[Default]), UsedName(RemainingPath,[Default]), UsedName(authorizeAsync,[Default]), UsedName(pathSingleSlash,[Default]), UsedName(settings,[Default]), UsedName(headerValuePF,[Default]), UsedName(defaultMultipartByteRangesUnmarshaller$default$2,[Default]), UsedName(HexLongNumber,[Default]), UsedName(encoder,[Implicit]), UsedName(selectPreferredLanguage,[Default]), UsedName(respondWithDefaultHeaders,[Default]), UsedName(notify,[Default]), UsedName(_defaultClassLoader,[Default]), UsedName(ne,[Default]), UsedName(getFromResourceDirectory,[Default]), UsedName(pathSuffix,[Default]), UsedName(multipartByteRangesUnmarshaller$default$2,[Default]), UsedName(pathEnd,[Default]), UsedName(mapResponseHeaders,[Default]), UsedName(parameterSeq,[Default]), UsedName(toString,[Default]), UsedName(tprovide,[Default]), UsedName(defaultMultipartByteRangesUnmarshaller$default$1,[Default]), UsedName(mapRouteResult,[Default]), UsedName(formFieldMap,[Default]), UsedName(reject,[Default]), UsedName(recoverRejectionsWith,[Default]), UsedName(_enhanceRouteWithConcatenation,[Implicit]), UsedName(extractParserSettings,[Default]), UsedName(handleWith,[Default]), UsedName(AuthenticationResult,[Default]), UsedName(getFromBrowseableDirectories,[Default]), UsedName(delete,[Default]), UsedName(AsyncAuthenticatorPF,[Default]), UsedName(askActor,[Default]), UsedName(deleteCookie,[Default]), UsedName(entity,[Default]), UsedName(head,[Default]), UsedName(extractRequest,[Default]), UsedName(scheme,[Default]), UsedName(copy$default$1,[Default]), UsedName(##,[Default]), UsedName(toStrictEntity,[Default]), UsedName(withoutRequestTimeout,[Default]), UsedName(mapRouteResultPF,[Default]), UsedName(getFromResourceDirectory$default$2,[Default]), UsedName(getFromResource$default$3,[Default]), UsedName(listDirectoryContents,[Default]), UsedName(getClass,[Default]), UsedName(clone,[Default]), UsedName(HexIntNumber,[Default]), UsedName(not,[Default]), UsedName(recoverRejections,[Default]), UsedName(redirectToNoTrailingSlashIfPresent,[Default]), UsedName(handleExceptions,[Default]), UsedName(tail,[Default]), UsedName(validate,[Default]), UsedName(logger,[Default]), UsedName(Slash,[Default]), UsedName(method,[Default]), UsedName(withLog,[Default]), UsedName(Remaining,[Default]), UsedName(headerValueByName,[Default]), UsedName(respondWithHeaders,[Default]), UsedName(PathEnd,[Default]), UsedName(formFields,[Default]), UsedName(extractRequestEntity,[Default]), UsedName(extractSettings,[Default]), UsedName(unapply,[Default]), UsedName(_string2NR,[Implicit]), UsedName(pathPrefix,[Default]), UsedName(asInstanceOf,[Default]), UsedName(authenticateOrRejectWithChallenge,[Default]), UsedName(responseEncodingAccepted,[Default]), UsedName(nodeViewHolderRef,[Default]), UsedName(authenticateBasicPF,[Default]), UsedName(extractWebSocketUpgrade,[Default]), UsedName(cancelRejection,[Default]), UsedName(logRequestResult,[Default]), UsedName(getFromResource,[Default]), UsedName(fileUpload,[Default]), UsedName(AuthenticatorPF,[Default]), UsedName(defaultMultipartByteRangesUnmarshaller,[Implicit]), UsedName(mapRouteResultWithPF,[Default]), UsedName(equals,[Default]), UsedName(multipartFormDataUnmarshaller$default$1,[Default]), UsedName(extractMatchedPath,[Default]), UsedName(completeWith,[Default]), UsedName(apiKeyHeaderName,[Default]), UsedName(extractRequestTimeout,[Default]), UsedName(logResult,[Default]), UsedName(productArity,[Default]), UsedName(AsyncAuthenticator,[Default]), UsedName(handleWebSocketMessagesForProtocol,[Default]), UsedName(rawPathPrefixTest,[Default]), UsedName(extractMaterializer,[Default]), UsedName(onSuccess,[Default]), UsedName(withNodeView,[Default]), UsedName(cancelRejections,[Default]), UsedName(parameterMap,[Default]), UsedName(context,[Implicit]), UsedName(formField,[Default]), UsedName(jsonMarshaller,[Implicit]), UsedName(ignoreTrailingSlash,[Default]), UsedName(getFromDirectory,[Default]), UsedName(rawPathPrefix,[Default]), UsedName(respondWithDefaultHeader,[Default]), UsedName(optionalHeaderValue,[Default]), UsedName(decodeRequest,[Default]), UsedName(finalize,[Default]), UsedName(storeUploadedFiles,[Default]), UsedName(log,[Default]), UsedName(!=,[Default]), UsedName(parameters,[Default]), UsedName(_regex2PathMatcher,[Implicit]), UsedName(asSourceOf,[Default]), UsedName(multipartByteRangesUnmarshaller$default$3,[Default]), UsedName(setCookie,[Default]), UsedName(multipartGeneralUnmarshaller,[Default]), UsedName(decodeRequestWith,[Default]), UsedName(withExecutionContext,[Default]), UsedName(byteArrayUnmarshaller,[Implicit]), UsedName(defaultMultipartGeneralUnmarshaller,[Implicit]), UsedName(formFieldSeq,[Default]), UsedName(_stringExtractionPair2PathMatcher,[Implicit]), UsedName(attribute,[Default]), UsedName(deleteCookie$default$3,[Default]), UsedName(marshaller$default$2,[Default]), UsedName(options,[Default]), UsedName(redirectToTrailingSlashIfMissing,[Default]), UsedName(authenticateOAuth2PFAsync,[Default]), UsedName(pathSuffixTest,[Default]), UsedName(stringUnmarshaller,[Implicit]), UsedName(checkSameOrigin,[Default]), UsedName(wait,[Default]), UsedName(authenticateBasicAsync,[Default]), UsedName(_valueMap2PathMatcher,[Implicit]), UsedName(pathEndOrSingleSlash,[Default]), UsedName(productIterator,[Default]), UsedName(storeUploadedFile,[Default]), UsedName(getFromFile,[Default]), UsedName(printer,[Implicit]), UsedName(Segments,[Default]), UsedName(viewAsync,[Default]), UsedName(conditional,[Default]), UsedName(mapRouteResultWith,[Default]), UsedName(extractActorSystem,[Default]), UsedName(LongNumber,[Default]), UsedName(extractUnmatchedPath,[Default]), UsedName(extractDataBytes,[Default]), UsedName(DoubleNumber,[Default]), UsedName(handleRejections,[Default]), UsedName(mapResponse,[Default]), UsedName(nothingMatcher,[Default]), UsedName(authenticateBasic,[Default]), UsedName(copy,[Default]), UsedName(mapRouteResultFuture,[Default]), UsedName(IntNumber,[Default]), UsedName(canEqual,[Default]), UsedName(respondWithHeader,[Default]), UsedName(mapInnerRoute,[Default]), UsedName(_stringNameOptionReceptacle2PathMatcher,[Implicit]), UsedName(NumberMatcher,[Default]), UsedName(pass,[Default]), UsedName(optionalCookie,[Default]), UsedName(multipartByteRangesUnmarshaller,[Default]), UsedName(defaultMultipartGeneralUnmarshaller$default$2,[Default]), UsedName(byteStringUnmarshaller,[Implicit]), UsedName(jsonUnmarshaller,[Implicit]), UsedName(withRequestTimeoutResponse,[Default]))) invalidates 1 classes due to The examples.hybrid.api.http.StatsApiRoute has the following implicit definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(defaultUrlEncodedFormDataUnmarshaller,[Implicit]), UsedName(charArrayUnmarshaller,[Implicit]), UsedName(_symbol2NR,[Implicit]), UsedName(marshaller,[Implicit]), UsedName(_segmentStringToPathMatcher,[Implicit]), UsedName(timeout,[Implicit]), UsedName(multipartFormDataUnmarshaller,[Implicit]), UsedName(unmarshaller,[Implicit]), UsedName(encoder,[Implicit]), UsedName(_enhanceRouteWithConcatenation,[Implicit]), UsedName(_string2NR,[Implicit]), UsedName(defaultMultipartByteRangesUnmarshaller,[Implicit]), UsedName(context,[Implicit]), UsedName(jsonMarshaller,[Implicit]), UsedName(_regex2PathMatcher,[Implicit]), UsedName(byteArrayUnmarshaller,[Implicit]), UsedName(defaultMultipartGeneralUnmarshaller,[Implicit]), UsedName(_stringExtractionPair2PathMatcher,[Implicit]), UsedName(stringUnmarshaller,[Implicit]), UsedName(_valueMap2PathMatcher,[Implicit]), UsedName(printer,[Implicit]), UsedName(_stringNameOptionReceptacle2PathMatcher,[Implicit]), UsedName(byteStringUnmarshaller,[Implicit]), UsedName(jsonUnmarshaller,[Implicit]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(examples.hybrid.api.http.StatsApiRoute)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from examples.hybrid.mining.PosForger.ReceivableMessages.PosForgingInfo...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: examples.hybrid.mining.PosForger.ReceivableMessages.PosForgingInfo[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(examples.hybrid.mining.PosForger.ReceivableMessages.PosForgingInfo)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(examples.hybrid.mining.PosForger.ReceivableMessages.PosForgingInfo,ModifiedNames(changes = UsedName(bestPosBlock,[Default]), UsedName(copy$default$2,[Default]), UsedName(txsToInclude,[Default]), UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(notifyAll,[Default]), UsedName(productElement,[Default]), UsedName($init$,[Default]), UsedName(isInstanceOf,[Default]), UsedName(apply,[Default]), UsedName(copy$default$6,[Default]), UsedName(synchronized,[Default]), UsedName(PosForgingInfo,[Default]), UsedName(productPrefix,[Default]), UsedName(hashCode,[Default]), UsedName(copy$default$4,[Default]), UsedName(boxKeys,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(copy$default$3,[Default]), UsedName(toString,[Default]), UsedName(copy$default$1,[Default]), UsedName(##,[Default]), UsedName(getClass,[Default]), UsedName(clone,[Default]), UsedName(examples;hybrid;mining;PosForger;ReceivableMessages;PosForgingInfo;init;,[Default]), UsedName(unapply,[Default]), UsedName(asInstanceOf,[Default]), UsedName(bestPowBlock,[Default]), UsedName(equals,[Default]), UsedName(productArity,[Default]), UsedName(finalize,[Default]), UsedName(!=,[Default]), UsedName(tupled,[Default]), UsedName(copy$default$5,[Default]), UsedName(wait,[Default]), UsedName(productIterator,[Default]), UsedName(diff,[Default]), UsedName(copy,[Default]), UsedName(canEqual,[Default]), UsedName(curried,[Default]), UsedName(pairCompleted,[Default]))) invalidates 1 classes due to The examples.hybrid.mining.PosForger.ReceivableMessages.PosForgingInfo has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(bestPosBlock,[Default]), UsedName(copy$default$2,[Default]), UsedName(txsToInclude,[Default]), UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(notifyAll,[Default]), UsedName(productElement,[Default]), UsedName($init$,[Default]), UsedName(isInstanceOf,[Default]), UsedName(apply,[Default]), UsedName(copy$default$6,[Default]), UsedName(synchronized,[Default]), UsedName(PosForgingInfo,[Default]), UsedName(productPrefix,[Default]), UsedName(hashCode,[Default]), UsedName(copy$default$4,[Default]), UsedName(boxKeys,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(copy$default$3,[Default]), UsedName(toString,[Default]), UsedName(copy$default$1,[Default]), UsedName(##,[Default]), UsedName(getClass,[Default]), UsedName(clone,[Default]), UsedName(examples;hybrid;mining;PosForger;ReceivableMessages;PosForgingInfo;init;,[Default]), UsedName(unapply,[Default]), UsedName(asInstanceOf,[Default]), UsedName(bestPowBlock,[Default]), UsedName(equals,[Default]), UsedName(productArity,[Default]), UsedName(finalize,[Default]), UsedName(!=,[Default]), UsedName(tupled,[Default]), UsedName(copy$default$5,[Default]), UsedName(wait,[Default]), UsedName(productIterator,[Default]), UsedName(diff,[Default]), UsedName(copy,[Default]), UsedName(canEqual,[Default]), UsedName(curried,[Default]), UsedName(pairCompleted,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(examples.hybrid.mining.PosForger.ReceivableMessages.PosForgingInfo)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from examples.hybrid.util.Cancellable...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: examples.hybrid.util.Cancellable[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(examples.hybrid.util.Cancellable)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(examples.hybrid.util.Cancellable,ModifiedNames(changes = UsedName(status,[Default]), UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(notifyAll,[Default]), UsedName(isInstanceOf,[Default]), UsedName(apply,[Default]), UsedName(synchronized,[Default]), UsedName(Cancellable,[Default]), UsedName(run,[Default]), UsedName(hashCode,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(##,[Default]), UsedName(getClass,[Default]), UsedName(clone,[Default]), UsedName(cancel,[Default]), UsedName(asInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(finalize,[Default]), UsedName(!=,[Default]), UsedName(wait,[Default]))) invalidates 1 classes due to The examples.hybrid.util.Cancellable has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(status,[Default]), UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(notifyAll,[Default]), UsedName(isInstanceOf,[Default]), UsedName(apply,[Default]), UsedName(synchronized,[Default]), UsedName(Cancellable,[Default]), UsedName(run,[Default]), UsedName(hashCode,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(##,[Default]), UsedName(getClass,[Default]), UsedName(clone,[Default]), UsedName(cancel,[Default]), UsedName(asInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(finalize,[Default]), UsedName(!=,[Default]), UsedName(wait,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(examples.hybrid.util.Cancellable)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from examples.ZSChain.history.HybridSyncInfoSerializer...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: examples.ZSChain.history.HybridSyncInfoSerializer[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(examples.ZSChain.history.HybridSyncInfoSerializer)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(examples.ZSChain.history.HybridSyncInfoSerializer,ModifiedNames(changes = UsedName(toBytes,[Default]), UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(parse,[Default]), UsedName(notifyAll,[Default]), UsedName($init$,[Default]), UsedName(isInstanceOf,[Default]), UsedName(parseBytes,[Default]), UsedName(synchronized,[Default]), UsedName(parseByteString,[Default]), UsedName(hashCode,[Default]), UsedName(parseBytesTry,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(parseByteStringTry,[Default]), UsedName(##,[Default]), UsedName(getClass,[Default]), UsedName(clone,[Default]), UsedName(asInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(serialize,[Default]), UsedName(finalize,[Default]), UsedName(!=,[Default]), UsedName(parseTry,[Default]), UsedName(HybridSyncInfoSerializer,[Default]), UsedName(wait,[Default]), UsedName(toByteString,[Default]))) invalidates 1 classes due to The examples.ZSChain.history.HybridSyncInfoSerializer has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(toBytes,[Default]), UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(parse,[Default]), UsedName(notifyAll,[Default]), UsedName($init$,[Default]), UsedName(isInstanceOf,[Default]), UsedName(parseBytes,[Default]), UsedName(synchronized,[Default]), UsedName(parseByteString,[Default]), UsedName(hashCode,[Default]), UsedName(parseBytesTry,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(parseByteStringTry,[Default]), UsedName(##,[Default]), UsedName(getClass,[Default]), UsedName(clone,[Default]), UsedName(asInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(serialize,[Default]), UsedName(finalize,[Default]), UsedName(!=,[Default]), UsedName(parseTry,[Default]), UsedName(HybridSyncInfoSerializer,[Default]), UsedName(wait,[Default]), UsedName(toByteString,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(examples.ZSChain.history.HybridSyncInfoSerializer)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from examples.ZSChain.mining.PowMiner.ReceivableMessages.PowMiningInfo...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: examples.ZSChain.mining.PowMiner.ReceivableMessages.PowMiningInfo[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(examples.ZSChain.mining.PowMiner.ReceivableMessages.PowMiningInfo)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(examples.ZSChain.mining.PowMiner.ReceivableMessages.PowMiningInfo,ModifiedNames(changes = UsedName(powDifficulty,[Default]), UsedName(copy$default$2,[Default]), UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(notifyAll,[Default]), UsedName(productElement,[Default]), UsedName($init$,[Default]), UsedName(isInstanceOf,[Default]), UsedName(apply,[Default]), UsedName(synchronized,[Default]), UsedName(productPrefix,[Default]), UsedName(hashCode,[Default]), UsedName(examples;ZSChain;mining;PowMiner;ReceivableMessages;PowMiningInfo;init;,[Default]), UsedName(copy$default$4,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(copy$default$3,[Default]), UsedName(toString,[Default]), UsedName(copy$default$1,[Default]), UsedName(##,[Default]), UsedName(getClass,[Default]), UsedName(pubkey,[Default]), UsedName(clone,[Default]), UsedName(unapply,[Default]), UsedName(asInstanceOf,[Default]), UsedName(bestPowBlock,[Default]), UsedName(equals,[Default]), UsedName(productArity,[Default]), UsedName(PowMiningInfo,[Default]), UsedName(finalize,[Default]), UsedName(!=,[Default]), UsedName(tupled,[Default]), UsedName(copy$default$5,[Default]), UsedName(bestPosId,[Default]), UsedName(wait,[Default]), UsedName(productIterator,[Default]), UsedName(copy,[Default]), UsedName(canEqual,[Default]), UsedName(curried,[Default]), UsedName(pairCompleted,[Default]))) invalidates 1 classes due to The examples.ZSChain.mining.PowMiner.ReceivableMessages.PowMiningInfo has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(powDifficulty,[Default]), UsedName(copy$default$2,[Default]), UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(notifyAll,[Default]), UsedName(productElement,[Default]), UsedName($init$,[Default]), UsedName(isInstanceOf,[Default]), UsedName(apply,[Default]), UsedName(synchronized,[Default]), UsedName(productPrefix,[Default]), UsedName(hashCode,[Default]), UsedName(examples;ZSChain;mining;PowMiner;ReceivableMessages;PowMiningInfo;init;,[Default]), UsedName(copy$default$4,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(copy$default$3,[Default]), UsedName(toString,[Default]), UsedName(copy$default$1,[Default]), UsedName(##,[Default]), UsedName(getClass,[Default]), UsedName(pubkey,[Default]), UsedName(clone,[Default]), UsedName(unapply,[Default]), UsedName(asInstanceOf,[Default]), UsedName(bestPowBlock,[Default]), UsedName(equals,[Default]), UsedName(productArity,[Default]), UsedName(PowMiningInfo,[Default]), UsedName(finalize,[Default]), UsedName(!=,[Default]), UsedName(tupled,[Default]), UsedName(copy$default$5,[Default]), UsedName(bestPosId,[Default]), UsedName(wait,[Default]), UsedName(productIterator,[Default]), UsedName(copy,[Default]), UsedName(canEqual,[Default]), UsedName(curried,[Default]), UsedName(pairCompleted,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(examples.ZSChain.mining.PowMiner.ReceivableMessages.PowMiningInfo)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from examples.hybrid.blocks.PowBlock...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: examples.hybrid.blocks.PowBlock[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(examples.hybrid.blocks.PowBlock)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(examples.hybrid.blocks.PowBlock,ModifiedNames(changes = UsedName(brothers,[Default]), UsedName(copy$default$2,[Default]), UsedName(prevPosId,[Default]), UsedName(version,[Default]), UsedName(brotherBytes,[Default]), UsedName(==,[Default]), UsedName(brothersCount,[Default]), UsedName(eq,[Default]), UsedName(id,[Default]), UsedName(transactions,[Default]), UsedName(notifyAll,[Default]), UsedName(productElement,[Default]), UsedName($init$,[Default]), UsedName(isInstanceOf,[Default]), UsedName(examples;hybrid;blocks;PowBlock;init;,[Default]), UsedName(apply,[Default]), UsedName(ModifierTypeId,[Default]), UsedName(copy$default$6,[Default]), UsedName(parentId,[Default]), UsedName(synchronized,[Default]), UsedName(productPrefix,[Default]), UsedName(brothersHash,[Default]), UsedName(nonce,[Default]), UsedName(powBlockEncoder,[Implicit]), UsedName(hashCode,[Default]), UsedName(PowBlock,[Default]), UsedName(correctWork,[Default]), UsedName(copy$default$4,[Default]), UsedName(encoder,[Implicit]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(copy$default$3,[Default]), UsedName(copy$default$8,[Default]), UsedName(toString,[Default]), UsedName(timestamp,[Default]), UsedName(copy$default$1,[Default]), UsedName(##,[Default]), UsedName(getClass,[Default]), UsedName(serializer,[Default]), UsedName(header,[Default]), UsedName(clone,[Default]), UsedName(modifierTypeId,[Default]), UsedName(unapply,[Default]), UsedName(asInstanceOf,[Default]), UsedName(bytes,[Default]), UsedName(equals,[Default]), UsedName(productArity,[Default]), UsedName(finalize,[Default]), UsedName(!=,[Default]), UsedName(generatorProposition,[Default]), UsedName(copy$default$7,[Default]), UsedName(copy$default$5,[Default]), UsedName(M,[Default]), UsedName(wait,[Default]), UsedName(productIterator,[Default]), UsedName(copy,[Default]), UsedName(canEqual,[Default]), UsedName(encodedId,[Default]))) invalidates 1 classes due to The examples.hybrid.blocks.PowBlock has the following implicit definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(powBlockEncoder,[Implicit]), UsedName(encoder,[Implicit]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(examples.hybrid.blocks.PowBlock)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from examples.ZSChain.mining.PosForger.ReceivableMessages.StopForging...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: examples.ZSChain.mining.PosForger.ReceivableMessages.StopForging[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(examples.ZSChain.mining.PosForger.ReceivableMessages.StopForging)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of examples.ZSChain.HLocalInterface: Set(UsedName(==,[Default]), UsedName(isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName(StopForging,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(examples.ZSChain.mining.PosForger.ReceivableMessages.StopForging,ModifiedNames(changes = UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(notifyAll,[Default]), UsedName(productElement,[Default]), UsedName($init$,[Default]), UsedName(isInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(productPrefix,[Default]), UsedName(hashCode,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(##,[Default]), UsedName(getClass,[Default]), UsedName(clone,[Default]), UsedName(asInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(productArity,[Default]), UsedName(finalize,[Default]), UsedName(!=,[Default]), UsedName(StopForging,[Default]), UsedName(wait,[Default]), UsedName(productIterator,[Default]), UsedName(canEqual,[Default]))) invalidates 2 classes due to The examples.ZSChain.mining.PosForger.ReceivableMessages.StopForging has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(notifyAll,[Default]), UsedName(productElement,[Default]), UsedName($init$,[Default]), UsedName(isInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(productPrefix,[Default]), UsedName(hashCode,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(##,[Default]), UsedName(getClass,[Default]), UsedName(clone,[Default]), UsedName(asInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(productArity,[Default]), UsedName(finalize,[Default]), UsedName(!=,[Default]), UsedName(StopForging,[Default]), UsedName(wait,[Default]), UsedName(productIterator,[Default]), UsedName(canEqual,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(examples.ZSChain.mining.PosForger.ReceivableMessages.StopForging)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(examples.ZSChain.HLocalInterface)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from examples.hybrid.wallet.SimpleBoxTransactionGenerator.ReceivableMessages.GeneratorInfo...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: examples.hybrid.wallet.SimpleBoxTransactionGenerator.ReceivableMessages.GeneratorInfo[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(examples.hybrid.wallet.SimpleBoxTransactionGenerator.ReceivableMessages.GeneratorInfo)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(examples.hybrid.wallet.SimpleBoxTransactionGenerator.ReceivableMessages.GeneratorInfo,ModifiedNames(changes = UsedName(compose,[Default]), UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(andThen,[Default]), UsedName(notifyAll,[Default]), UsedName(productElement,[Default]), UsedName($init$,[Default]), UsedName(isInstanceOf,[Default]), UsedName(apply,[Default]), UsedName(synchronized,[Default]), UsedName(productPrefix,[Default]), UsedName(hashCode,[Default]), UsedName(GeneratorInfo,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(tx,[Default]), UsedName(copy$default$1,[Default]), UsedName(##,[Default]), UsedName(examples;hybrid;wallet;SimpleBoxTransactionGenerator;ReceivableMessages;GeneratorInfo;init;,[Default]), UsedName(getClass,[Default]), UsedName(clone,[Default]), UsedName(unapply,[Default]), UsedName(asInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(productArity,[Default]), UsedName(finalize,[Default]), UsedName(!=,[Default]), UsedName(wait,[Default]), UsedName(productIterator,[Default]), UsedName(copy,[Default]), UsedName(canEqual,[Default]))) invalidates 1 classes due to The examples.hybrid.wallet.SimpleBoxTransactionGenerator.ReceivableMessages.GeneratorInfo has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(compose,[Default]), UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(andThen,[Default]), UsedName(notifyAll,[Default]), UsedName(productElement,[Default]), UsedName($init$,[Default]), UsedName(isInstanceOf,[Default]), UsedName(apply,[Default]), UsedName(synchronized,[Default]), UsedName(productPrefix,[Default]), UsedName(hashCode,[Default]), UsedName(GeneratorInfo,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(tx,[Default]), UsedName(copy$default$1,[Default]), UsedName(##,[Default]), UsedName(examples;hybrid;wallet;SimpleBoxTransactionGenerator;ReceivableMessages;GeneratorInfo;init;,[Default]), UsedName(getClass,[Default]), UsedName(clone,[Default]), UsedName(unapply,[Default]), UsedName(asInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(productArity,[Default]), UsedName(finalize,[Default]), UsedName(!=,[Default]), UsedName(wait,[Default]), UsedName(productIterator,[Default]), UsedName(copy,[Default]), UsedName(canEqual,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(examples.hybrid.wallet.SimpleBoxTransactionGenerator.ReceivableMessages.GeneratorInfo)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from examples.hybrid.api.http.DebugApiRoute...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: examples.hybrid.api.http.DebugApiRoute[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(examples.hybrid.api.http.DebugApiRoute)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(examples.hybrid.api.http.DebugApiRoute,ModifiedNames(changes = UsedName(defaultUrlEncodedFormDataUnmarshaller,[Implicit]), UsedName(as,[Default]), UsedName(withAuth,[Default]), UsedName(path,[Default]), UsedName(authenticateBasicPFAsync,[Default]), UsedName(copy$default$2,[Default]), UsedName(onCompleteWithBreaker,[Default]), UsedName(extractLog,[Default]), UsedName(extractExecutionContext,[Default]), UsedName(multipartUnmarshaller$default$7,[Default]), UsedName(extract,[Default]), UsedName(handleSync,[Default]), UsedName(withSizeLimit,[Default]), UsedName(formFieldMultiMap,[Default]), UsedName(urlEncodedFormDataUnmarshaller,[Default]), UsedName(Authenticator,[Default]), UsedName(separateOnSlashes,[Default]), UsedName(charArrayUnmarshaller,[Implicit]), UsedName(requestEncodedWith,[Default]), UsedName(_symbol2NR,[Implicit]), UsedName(textract,[Default]), UsedName(marshaller,[Implicit]), UsedName(host,[Default]), UsedName(withRangeSupport,[Default]), UsedName(pathPrefixTest,[Default]), UsedName(Neutral,[Default]), UsedName(jsonMarshaller$default$1,[Default]), UsedName(==,[Default]), UsedName(get,[Default]), UsedName(extractUpgradeToWebSocket,[Default]), UsedName(parameterMultiMap,[Default]), UsedName(_segmentStringToPathMatcher,[Implicit]), UsedName(encodeResponse,[Default]), UsedName(addCorsHeaders,[Default]), UsedName(mapRequest,[Default]), UsedName(eq,[Default]), UsedName(parameter,[Default]), UsedName(multipartGeneralUnmarshaller$default$3,[Default]), UsedName(authenticateOAuth2,[Default]), UsedName(complete,[Default]), UsedName(instanceOf,[Default]), UsedName(requestEntityEmpty,[Default]), UsedName(redirect,[Default]), UsedName(withMaterializer,[Default]), UsedName(put,[Default]), UsedName(withSettings,[Default]), UsedName(logRequest,[Default]), UsedName(notifyAll,[Default]), UsedName(JavaUUID,[Default]), UsedName(handleWebSocketMessagesForOptionalProtocol,[Default]), UsedName(multipartFormDataUnmarshaller$default$2,[Default]), UsedName(productElement,[Default]), UsedName(mapRejections,[Default]), UsedName($init$,[Default]), UsedName(isInstanceOf,[Default]), UsedName(mediaTypes,[Default]), UsedName(withPrecompressedMediaTypeSupport,[Default]), UsedName(extractCredentials,[Default]), UsedName(requestEntityPresent,[Default]), UsedName(apply,[Default]), UsedName(mapUnmatchedPath,[Default]), UsedName(fileUploadAll,[Default]), UsedName(rejectEmptyResponse,[Default]), UsedName(overrideMethodWithParameter,[Default]), UsedName(concat,[Default]), UsedName(encodeResponseWith,[Default]), UsedName(timeout,[Implicit]), UsedName(route,[Default]), UsedName(unmarshallerContentTypes,[Default]), UsedName(multipartUnmarshaller,[Default]), UsedName(extractOfferedWsProtocols,[Default]), UsedName(mapRequestContext,[Default]), UsedName(provide,[Default]), UsedName(examples;hybrid;api;http;DebugApiRoute;init;,[Default]), UsedName(failWith,[Default]), UsedName(headerValue,[Default]), UsedName(multipartUnmarshaller$default$8,[Default]), UsedName(corsHandler,[Default]), UsedName(completeOrRecoverWith,[Default]), UsedName(withRequestTimeout,[Default]), UsedName(authenticateOAuth2PF,[Default]), UsedName(synchronized,[Default]), UsedName(Segment,[Default]), UsedName(multipartGeneralUnmarshaller$default$2,[Default]), UsedName(RequestToSourceUnmarshaller,[Default]), UsedName(patch,[Default]), UsedName(deleteCookie$default$2,[Default]), UsedName(optionalHeaderValueByType,[Default]), UsedName(productPrefix,[Default]), UsedName(handle,[Default]), UsedName(extractRequestContext,[Default]), UsedName(authorize,[Default]), UsedName(cookie,[Default]), UsedName(handleWebSocketMessages,[Default]), UsedName(post,[Default]), UsedName(extractMethod,[Default]), UsedName(multipartFormDataUnmarshaller,[Implicit]), UsedName(hashCode,[Default]), UsedName(extractScheme,[Default]), UsedName(mapResponseEntity,[Default]), UsedName(headerValueByType,[Default]), UsedName(extractClientIP,[Default]), UsedName(extractHost,[Default]), UsedName(getFromBrowseableDirectory,[Default]), UsedName(extractStrictEntity,[Default]), UsedName(optionalHeaderValueByName,[Default]), UsedName(withoutSizeLimit,[Default]), UsedName(optionalHeaderValuePF,[Default]), UsedName(defaultMultipartGeneralUnmarshaller$default$1,[Default]), UsedName(optionalAttribute,[Default]), UsedName(onComplete,[Default]), UsedName(authenticateOAuth2Async,[Default]), UsedName(unmarshaller,[Implicit]), UsedName(extractUri,[Default]), UsedName(mapSettings,[Default]), UsedName(RemainingPath,[Default]), UsedName(authorizeAsync,[Default]), UsedName(generators,[Default]), UsedName(pathSingleSlash,[Default]), UsedName(settings,[Default]), UsedName(headerValuePF,[Default]), UsedName(defaultMultipartByteRangesUnmarshaller$default$2,[Default]), UsedName(HexLongNumber,[Default]), UsedName(encoder,[Implicit]), UsedName(selectPreferredLanguage,[Default]), UsedName(respondWithDefaultHeaders,[Default]), UsedName(notify,[Default]), UsedName(_defaultClassLoader,[Default]), UsedName(ne,[Default]), UsedName(getFromResourceDirectory,[Default]), UsedName(pathSuffix,[Default]), UsedName(multipartByteRangesUnmarshaller$default$2,[Default]), UsedName(pathEnd,[Default]), UsedName(mapResponseHeaders,[Default]), UsedName(parameterSeq,[Default]), UsedName(toString,[Default]), UsedName(tprovide,[Default]), UsedName(defaultMultipartByteRangesUnmarshaller$default$1,[Default]), UsedName(mapRouteResult,[Default]), UsedName(formFieldMap,[Default]), UsedName(reject,[Default]), UsedName(recoverRejectionsWith,[Default]), UsedName(_enhanceRouteWithConcatenation,[Implicit]), UsedName(extractParserSettings,[Default]), UsedName(handleWith,[Default]), UsedName(AuthenticationResult,[Default]), UsedName(getFromBrowseableDirectories,[Default]), UsedName(delete,[Default]), UsedName(AsyncAuthenticatorPF,[Default]), UsedName(askActor,[Default]), UsedName(delay,[Default]), UsedName(deleteCookie,[Default]), UsedName(entity,[Default]), UsedName(head,[Default]), UsedName(extractRequest,[Default]), UsedName(scheme,[Default]), UsedName(copy$default$1,[Default]), UsedName(##,[Default]), UsedName(toStrictEntity,[Default]), UsedName(withoutRequestTimeout,[Default]), UsedName(mapRouteResultPF,[Default]), UsedName(getFromResourceDirectory$default$2,[Default]), UsedName(getFromResource$default$3,[Default]), UsedName(listDirectoryContents,[Default]), UsedName(getClass,[Default]), UsedName(clone,[Default]), UsedName(HexIntNumber,[Default]), UsedName(chain,[Default]), UsedName(not,[Default]), UsedName(recoverRejections,[Default]), UsedName(redirectToNoTrailingSlashIfPresent,[Default]), UsedName(handleExceptions,[Default]), UsedName(validate,[Default]), UsedName(logger,[Default]), UsedName(Slash,[Default]), UsedName(method,[Default]), UsedName(withLog,[Default]), UsedName(Remaining,[Default]), UsedName(headerValueByName,[Default]), UsedName(respondWithHeaders,[Default]), UsedName(PathEnd,[Default]), UsedName(formFields,[Default]), UsedName(extractRequestEntity,[Default]), UsedName(extractSettings,[Default]), UsedName(unapply,[Default]), UsedName(_string2NR,[Implicit]), UsedName(pathPrefix,[Default]), UsedName(asInstanceOf,[Default]), UsedName(authenticateOrRejectWithChallenge,[Default]), UsedName(responseEncodingAccepted,[Default]), UsedName(nodeViewHolderRef,[Default]), UsedName(authenticateBasicPF,[Default]), UsedName(infoRoute,[Default]), UsedName(extractWebSocketUpgrade,[Default]), UsedName(cancelRejection,[Default]), UsedName(logRequestResult,[Default]), UsedName(getFromResource,[Default]), UsedName(fileUpload,[Default]), UsedName(AuthenticatorPF,[Default]), UsedName(defaultMultipartByteRangesUnmarshaller,[Implicit]), UsedName(mapRouteResultWithPF,[Default]), UsedName(equals,[Default]), UsedName(multipartFormDataUnmarshaller$default$1,[Default]), UsedName(extractMatchedPath,[Default]), UsedName(completeWith,[Default]), UsedName(apiKeyHeaderName,[Default]), UsedName(extractRequestTimeout,[Default]), UsedName(logResult,[Default]), UsedName(productArity,[Default]), UsedName(AsyncAuthenticator,[Default]), UsedName(handleWebSocketMessagesForProtocol,[Default]), UsedName(rawPathPrefixTest,[Default]), UsedName(DebugApiRoute,[Default]), UsedName(extractMaterializer,[Default]), UsedName(onSuccess,[Default]), UsedName(withNodeView,[Default]), UsedName(cancelRejections,[Default]), UsedName(parameterMap,[Default]), UsedName(context,[Implicit]), UsedName(formField,[Default]), UsedName(jsonMarshaller,[Implicit]), UsedName(ignoreTrailingSlash,[Default]), UsedName(getFromDirectory,[Default]), UsedName(rawPathPrefix,[Default]), UsedName(respondWithDefaultHeader,[Default]), UsedName(optionalHeaderValue,[Default]), UsedName(decodeRequest,[Default]), UsedName(finalize,[Default]), UsedName(storeUploadedFiles,[Default]), UsedName(log,[Default]), UsedName(!=,[Default]), UsedName(myblocks,[Default]), UsedName(parameters,[Default]), UsedName(_regex2PathMatcher,[Implicit]), UsedName(asSourceOf,[Default]), UsedName(multipartByteRangesUnmarshaller$default$3,[Default]), UsedName(setCookie,[Default]), UsedName(multipartGeneralUnmarshaller,[Default]), UsedName(decodeRequestWith,[Default]), UsedName(withExecutionContext,[Default]), UsedName(byteArrayUnmarshaller,[Implicit]), UsedName(defaultMultipartGeneralUnmarshaller,[Implicit]), UsedName(formFieldSeq,[Default]), UsedName(_stringExtractionPair2PathMatcher,[Implicit]), UsedName(attribute,[Default]), UsedName(deleteCookie$default$3,[Default]), UsedName(marshaller$default$2,[Default]), UsedName(options,[Default]), UsedName(redirectToTrailingSlashIfMissing,[Default]), UsedName(authenticateOAuth2PFAsync,[Default]), UsedName(pathSuffixTest,[Default]), UsedName(stringUnmarshaller,[Implicit]), UsedName(checkSameOrigin,[Default]), UsedName(wait,[Default]), UsedName(authenticateBasicAsync,[Default]), UsedName(_valueMap2PathMatcher,[Implicit]), UsedName(pathEndOrSingleSlash,[Default]), UsedName(productIterator,[Default]), UsedName(storeUploadedFile,[Default]), UsedName(getFromFile,[Default]), UsedName(printer,[Implicit]), UsedName(Segments,[Default]), UsedName(viewAsync,[Default]), UsedName(conditional,[Default]), UsedName(mapRouteResultWith,[Default]), UsedName(extractActorSystem,[Default]), UsedName(LongNumber,[Default]), UsedName(extractUnmatchedPath,[Default]), UsedName(extractDataBytes,[Default]), UsedName(DoubleNumber,[Default]), UsedName(handleRejections,[Default]), UsedName(mapResponse,[Default]), UsedName(nothingMatcher,[Default]), UsedName(authenticateBasic,[Default]), UsedName(copy,[Default]), UsedName(mapRouteResultFuture,[Default]), UsedName(IntNumber,[Default]), UsedName(canEqual,[Default]), UsedName(respondWithHeader,[Default]), UsedName(mapInnerRoute,[Default]), UsedName(_stringNameOptionReceptacle2PathMatcher,[Implicit]), UsedName(NumberMatcher,[Default]), UsedName(pass,[Default]), UsedName(optionalCookie,[Default]), UsedName(multipartByteRangesUnmarshaller,[Default]), UsedName(defaultMultipartGeneralUnmarshaller$default$2,[Default]), UsedName(byteStringUnmarshaller,[Implicit]), UsedName(jsonUnmarshaller,[Implicit]), UsedName(withRequestTimeoutResponse,[Default]))) invalidates 1 classes due to The examples.hybrid.api.http.DebugApiRoute has the following implicit definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(defaultUrlEncodedFormDataUnmarshaller,[Implicit]), UsedName(charArrayUnmarshaller,[Implicit]), UsedName(_symbol2NR,[Implicit]), UsedName(marshaller,[Implicit]), UsedName(_segmentStringToPathMatcher,[Implicit]), UsedName(timeout,[Implicit]), UsedName(multipartFormDataUnmarshaller,[Implicit]), UsedName(unmarshaller,[Implicit]), UsedName(encoder,[Implicit]), UsedName(_enhanceRouteWithConcatenation,[Implicit]), UsedName(_string2NR,[Implicit]), UsedName(defaultMultipartByteRangesUnmarshaller,[Implicit]), UsedName(context,[Implicit]), UsedName(jsonMarshaller,[Implicit]), UsedName(_regex2PathMatcher,[Implicit]), UsedName(byteArrayUnmarshaller,[Implicit]), UsedName(defaultMultipartGeneralUnmarshaller,[Implicit]), UsedName(_stringExtractionPair2PathMatcher,[Implicit]), UsedName(stringUnmarshaller,[Implicit]), UsedName(_valueMap2PathMatcher,[Implicit]), UsedName(printer,[Implicit]), UsedName(_stringNameOptionReceptacle2PathMatcher,[Implicit]), UsedName(byteStringUnmarshaller,[Implicit]), UsedName(jsonUnmarshaller,[Implicit]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(examples.hybrid.api.http.DebugApiRoute)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from examples.ZSChain.mining.PowMiner.ReceivableMessages.StopMining...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: examples.ZSChain.mining.PowMiner.ReceivableMessages.StopMining[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(examples.ZSChain.mining.PowMiner.ReceivableMessages.StopMining)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of examples.ZSChain.HLocalInterface: Set(UsedName(==,[Default]), UsedName(StopMining,[Default]), UsedName(isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(examples.ZSChain.mining.PowMiner.ReceivableMessages.StopMining,ModifiedNames(changes = UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(StopMining,[Default]), UsedName(notifyAll,[Default]), UsedName(productElement,[Default]), UsedName($init$,[Default]), UsedName(isInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(productPrefix,[Default]), UsedName(hashCode,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(##,[Default]), UsedName(getClass,[Default]), UsedName(clone,[Default]), UsedName(asInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(productArity,[Default]), UsedName(finalize,[Default]), UsedName(!=,[Default]), UsedName(wait,[Default]), UsedName(productIterator,[Default]), UsedName(canEqual,[Default]))) invalidates 2 classes due to The examples.ZSChain.mining.PowMiner.ReceivableMessages.StopMining has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(StopMining,[Default]), UsedName(notifyAll,[Default]), UsedName(productElement,[Default]), UsedName($init$,[Default]), UsedName(isInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(productPrefix,[Default]), UsedName(hashCode,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(##,[Default]), UsedName(getClass,[Default]), UsedName(clone,[Default]), UsedName(asInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(productArity,[Default]), UsedName(finalize,[Default]), UsedName(!=,[Default]), UsedName(wait,[Default]), UsedName(productIterator,[Default]), UsedName(canEqual,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(examples.ZSChain.mining.PowMiner.ReceivableMessages.StopMining)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(examples.ZSChain.HLocalInterface)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from examples.hybrid.wallet.SimpleBoxTransactionGeneratorRef...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: examples.hybrid.wallet.SimpleBoxTransactionGeneratorRef[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(examples.hybrid.wallet.SimpleBoxTransactionGeneratorRef)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(examples.hybrid.wallet.SimpleBoxTransactionGeneratorRef,ModifiedNames(changes = UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(notifyAll,[Default]), UsedName(isInstanceOf,[Default]), UsedName(apply,[Default]), UsedName(synchronized,[Default]), UsedName(hashCode,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(##,[Default]), UsedName(getClass,[Default]), UsedName(clone,[Default]), UsedName(asInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(SimpleBoxTransactionGeneratorRef,[Default]), UsedName(props,[Default]), UsedName(finalize,[Default]), UsedName(!=,[Default]), UsedName(wait,[Default]))) invalidates 1 classes due to The examples.hybrid.wallet.SimpleBoxTransactionGeneratorRef has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(notifyAll,[Default]), UsedName(isInstanceOf,[Default]), UsedName(apply,[Default]), UsedName(synchronized,[Default]), UsedName(hashCode,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(##,[Default]), UsedName(getClass,[Default]), UsedName(clone,[Default]), UsedName(asInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(SimpleBoxTransactionGeneratorRef,[Default]), UsedName(props,[Default]), UsedName(finalize,[Default]), UsedName(!=,[Default]), UsedName(wait,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(examples.hybrid.wallet.SimpleBoxTransactionGeneratorRef)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from examples.ZSChain.wallet.SimpleBoxTransactionGenerator...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: examples.ZSChain.wallet.SimpleBoxTransactionGenerator[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(examples.ZSChain.wallet.SimpleBoxTransactionGenerator)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following member ref dependencies of examples.ZSChain.wallet.SimpleBoxTransactionGenerator are invalidated:[0m
[0m[[0m[0mdebug[0m] [0m[0m	examples.ZSChain.HybridApp[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(examples.ZSChain.wallet.SimpleBoxTransactionGenerator,ModifiedNames(changes = UsedName(generate,[Default]), UsedName(postRestart,[Default]), UsedName(==,[Default]), UsedName(preStart,[Default]), UsedName(eq,[Default]), UsedName(notifyAll,[Default]), UsedName($init$,[Default]), UsedName(isInstanceOf,[Default]), UsedName(aroundReceive,[Default]), UsedName(self,[Implicit]), UsedName(SimpleBoxTransactionGenerator,[Default]), UsedName(synchronized,[Default]), UsedName(postStop,[Default]), UsedName(hashCode,[Default]), UsedName(aroundPostRestart,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(##,[Default]), UsedName(getClass,[Default]), UsedName(clone,[Default]), UsedName(logger,[Default]), UsedName(sender,[Default]), UsedName(supervisorStrategy,[Default]), UsedName(Receive,[Default]), UsedName(asInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(receive,[Default]), UsedName(context,[Implicit]), UsedName(finalize,[Default]), UsedName(log,[Default]), UsedName(!=,[Default]), UsedName(ReceivableMessages,[Default]), UsedName(examples;ZSChain;wallet;SimpleBoxTransactionGenerator;init;,[Default]), UsedName(aroundPostStop,[Default]), UsedName(wait,[Default]), UsedName(aroundPreRestart,[Default]), UsedName(preRestart,[Default]), UsedName(aroundPreStart,[Default]), UsedName(unhandled,[Default]))) invalidates 2 classes due to The examples.ZSChain.wallet.SimpleBoxTransactionGenerator has the following implicit definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(self,[Implicit]), UsedName(context,[Implicit]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(examples.ZSChain.wallet.SimpleBoxTransactionGenerator)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(examples.ZSChain.HybridApp)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from examples.ZSChain.mining.HybridMiningSettings...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: examples.ZSChain.mining.HybridMiningSettings[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(examples.ZSChain.mining.HybridMiningSettings)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of examples.ZSChain.history.HistoryStorage: Set(UsedName(initialDifficulty,[Default]), UsedName(==,[Default]), UsedName(isInstanceOf,[Default]), UsedName(apply,[Default]), UsedName(ne,[Default]), UsedName(asInstanceOf,[Default]), UsedName(HybridMiningSettings,[Default]), UsedName(GenesisParentId,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of examples.ZSChain.HybridApp: Set(UsedName(apply,[Default]), UsedName(HybridMiningSettings,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of examples.ZSChain.HLocalInterfaceRef: Set(UsedName(apply,[Default]), UsedName(HybridMiningSettings,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of examples.ZSChain.HLocalInterface: Set(UsedName(==,[Default]), UsedName(isInstanceOf,[Default]), UsedName(apply,[Default]), UsedName(asInstanceOf,[Default]), UsedName(HybridMiningSettings,[Default]), UsedName(GenesisParentId,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of examples.ZSChain.history.HybridHistory: Set(UsedName(==,[Default]), UsedName(isInstanceOf,[Default]), UsedName(apply,[Default]), UsedName(targetBlockDelay,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(asInstanceOf,[Default]), UsedName(HybridMiningSettings,[Default]), UsedName(GenesisParentId,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of examples.ZSChain.simulations.PrivateChain: Set(UsedName(==,[Default]), UsedName(isInstanceOf,[Default]), UsedName(apply,[Default]), UsedName(MaxTarget,[Default]), UsedName(ne,[Default]), UsedName(asInstanceOf,[Default]), UsedName(HybridMiningSettings,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of examples.ZSChain.mining.PowMiner: Set(UsedName(blockGenerationDelay,[Default]), UsedName(==,[Default]), UsedName(isInstanceOf,[Default]), UsedName(apply,[Default]), UsedName(ne,[Default]), UsedName(offlineGeneration,[Default]), UsedName(asInstanceOf,[Default]), UsedName(HybridMiningSettings,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of examples.ZSChain.mining.PosForger: Set(UsedName(==,[Default]), UsedName(isInstanceOf,[Default]), UsedName(apply,[Default]), UsedName(MaxTarget,[Default]), UsedName(posAttachmentSize,[Default]), UsedName(ne,[Default]), UsedName(asInstanceOf,[Default]), UsedName(HybridMiningSettings,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of examples.ZSChain.mining.PowMinerRef: Set(UsedName(apply,[Default]), UsedName(HybridMiningSettings,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of examples.ZSChain.HybridNodeViewHolder: Set(UsedName(==,[Default]), UsedName(apply,[Default]), UsedName(HybridMiningSettings,[Default]), UsedName(GenesisParentId,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of examples.ZSChain.blocks.PowBlockHeader: Set(UsedName(apply,[Default]), UsedName(MaxTarget,[Default]), UsedName(HybridMiningSettings,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of examples.ZSChain.validation.DifficultyBlockValidator: Set(UsedName(isInstanceOf,[Default]), UsedName(apply,[Default]), UsedName(MaxTarget,[Default]), UsedName(asInstanceOf,[Default]), UsedName(HybridMiningSettings,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(examples.ZSChain.mining.HybridMiningSettings,ModifiedNames(changes = UsedName(copy$default$2,[Default]), UsedName(initialDifficulty,[Default]), UsedName(blockGenerationDelay,[Default]), UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(notifyAll,[Default]), UsedName(productElement,[Default]), UsedName($init$,[Default]), UsedName(isInstanceOf,[Default]), UsedName(apply,[Default]), UsedName(targetBlockDelay,[Default]), UsedName(copy$default$6,[Default]), UsedName(synchronized,[Default]), UsedName(productPrefix,[Default]), UsedName(hashCode,[Default]), UsedName(MaxTarget,[Default]), UsedName(copy$default$4,[Default]), UsedName(posAttachmentSize,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(copy$default$3,[Default]), UsedName(toString,[Default]), UsedName(offlineGeneration,[Default]), UsedName(copy$default$1,[Default]), UsedName(##,[Default]), UsedName(getClass,[Default]), UsedName(clone,[Default]), UsedName(unapply,[Default]), UsedName(asInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(HybridMiningSettings,[Default]), UsedName(GenesisParentId,[Default]), UsedName(rParamX10,[Default]), UsedName(productArity,[Default]), UsedName(finalize,[Default]), UsedName(!=,[Default]), UsedName(examples;ZSChain;mining;HybridMiningSettings;init;,[Default]), UsedName(tupled,[Default]), UsedName(copy$default$5,[Default]), UsedName(wait,[Default]), UsedName(productIterator,[Default]), UsedName(copy,[Default]), UsedName(canEqual,[Default]), UsedName(curried,[Default]))) invalidates 13 classes due to The examples.ZSChain.mining.HybridMiningSettings has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(copy$default$2,[Default]), UsedName(initialDifficulty,[Default]), UsedName(blockGenerationDelay,[Default]), UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(notifyAll,[Default]), UsedName(productElement,[Default]), UsedName($init$,[Default]), UsedName(isInstanceOf,[Default]), UsedName(apply,[Default]), UsedName(targetBlockDelay,[Default]), UsedName(copy$default$6,[Default]), UsedName(synchronized,[Default]), UsedName(productPrefix,[Default]), UsedName(hashCode,[Default]), UsedName(MaxTarget,[Default]), UsedName(copy$default$4,[Default]), UsedName(posAttachmentSize,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(copy$default$3,[Default]), UsedName(toString,[Default]), UsedName(offlineGeneration,[Default]), UsedName(copy$default$1,[Default]), UsedName(##,[Default]), UsedName(getClass,[Default]), UsedName(clone,[Default]), UsedName(unapply,[Default]), UsedName(asInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(HybridMiningSettings,[Default]), UsedName(GenesisParentId,[Default]), UsedName(rParamX10,[Default]), UsedName(productArity,[Default]), UsedName(finalize,[Default]), UsedName(!=,[Default]), UsedName(examples;ZSChain;mining;HybridMiningSettings;init;,[Default]), UsedName(tupled,[Default]), UsedName(copy$default$5,[Default]), UsedName(wait,[Default]), UsedName(productIterator,[Default]), UsedName(copy,[Default]), UsedName(canEqual,[Default]), UsedName(curried,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(examples.ZSChain.mining.HybridMiningSettings)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(examples.ZSChain.history.HistoryStorage, examples.ZSChain.HybridApp, examples.ZSChain.HLocalInterfaceRef, examples.ZSChain.HLocalInterface, examples.ZSChain.history.HybridHistory, examples.ZSChain.simulations.PrivateChain, examples.ZSChain.mining.PowMiner, examples.ZSChain.mining.PosForger, examples.ZSChain.mining.PowMinerRef, examples.ZSChain.HybridNodeViewHolder, examples.ZSChain.blocks.PowBlockHeader, examples.ZSChain.validation.DifficultyBlockValidator)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from examples.ZSChain.api.http.StatsApiRoute...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: examples.ZSChain.api.http.StatsApiRoute[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(examples.ZSChain.api.http.StatsApiRoute)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following member ref dependencies of examples.ZSChain.api.http.StatsApiRoute are invalidated:[0m
[0m[[0m[0mdebug[0m] [0m[0m	examples.ZSChain.HybridApp[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(examples.ZSChain.api.http.StatsApiRoute,ModifiedNames(changes = UsedName(defaultUrlEncodedFormDataUnmarshaller,[Implicit]), UsedName(as,[Default]), UsedName(withAuth,[Default]), UsedName(path,[Default]), UsedName(authenticateBasicPFAsync,[Default]), UsedName(copy$default$2,[Default]), UsedName(onCompleteWithBreaker,[Default]), UsedName(extractLog,[Default]), UsedName(extractExecutionContext,[Default]), UsedName(multipartUnmarshaller$default$7,[Default]), UsedName(extract,[Default]), UsedName(handleSync,[Default]), UsedName(withSizeLimit,[Default]), UsedName(formFieldMultiMap,[Default]), UsedName(urlEncodedFormDataUnmarshaller,[Default]), UsedName(Authenticator,[Default]), UsedName(separateOnSlashes,[Default]), UsedName(charArrayUnmarshaller,[Implicit]), UsedName(requestEncodedWith,[Default]), UsedName(_symbol2NR,[Implicit]), UsedName(textract,[Default]), UsedName(marshaller,[Implicit]), UsedName(host,[Default]), UsedName(withRangeSupport,[Default]), UsedName(pathPrefixTest,[Default]), UsedName(Neutral,[Default]), UsedName(jsonMarshaller$default$1,[Default]), UsedName(==,[Default]), UsedName(get,[Default]), UsedName(extractUpgradeToWebSocket,[Default]), UsedName(parameterMultiMap,[Default]), UsedName(_segmentStringToPathMatcher,[Implicit]), UsedName(encodeResponse,[Default]), UsedName(addCorsHeaders,[Default]), UsedName(mapRequest,[Default]), UsedName(eq,[Default]), UsedName(parameter,[Default]), UsedName(multipartGeneralUnmarshaller$default$3,[Default]), UsedName(authenticateOAuth2,[Default]), UsedName(complete,[Default]), UsedName(instanceOf,[Default]), UsedName(requestEntityEmpty,[Default]), UsedName(redirect,[Default]), UsedName(withMaterializer,[Default]), UsedName(put,[Default]), UsedName(withSettings,[Default]), UsedName(logRequest,[Default]), UsedName(notifyAll,[Default]), UsedName(JavaUUID,[Default]), UsedName(handleWebSocketMessagesForOptionalProtocol,[Default]), UsedName(multipartFormDataUnmarshaller$default$2,[Default]), UsedName(productElement,[Default]), UsedName(mapRejections,[Default]), UsedName($init$,[Default]), UsedName(meanDifficulty,[Default]), UsedName(isInstanceOf,[Default]), UsedName(mediaTypes,[Default]), UsedName(withPrecompressedMediaTypeSupport,[Default]), UsedName(extractCredentials,[Default]), UsedName(requestEntityPresent,[Default]), UsedName(apply,[Default]), UsedName(mapUnmatchedPath,[Default]), UsedName(fileUploadAll,[Default]), UsedName(rejectEmptyResponse,[Default]), UsedName(overrideMethodWithParameter,[Default]), UsedName(concat,[Default]), UsedName(encodeResponseWith,[Default]), UsedName(timeout,[Implicit]), UsedName(route,[Default]), UsedName(unmarshallerContentTypes,[Default]), UsedName(multipartUnmarshaller,[Default]), UsedName(extractOfferedWsProtocols,[Default]), UsedName(mapRequestContext,[Default]), UsedName(provide,[Default]), UsedName(failWith,[Default]), UsedName(headerValue,[Default]), UsedName(multipartUnmarshaller$default$8,[Default]), UsedName(corsHandler,[Default]), UsedName(completeOrRecoverWith,[Default]), UsedName(withRequestTimeout,[Default]), UsedName(authenticateOAuth2PF,[Default]), UsedName(synchronized,[Default]), UsedName(Segment,[Default]), UsedName(multipartGeneralUnmarshaller$default$2,[Default]), UsedName(examples;ZSChain;api;http;StatsApiRoute;init;,[Default]), UsedName(RequestToSourceUnmarshaller,[Default]), UsedName(patch,[Default]), UsedName(deleteCookie$default$2,[Default]), UsedName(optionalHeaderValueByType,[Default]), UsedName(productPrefix,[Default]), UsedName(handle,[Default]), UsedName(extractRequestContext,[Default]), UsedName(authorize,[Default]), UsedName(cookie,[Default]), UsedName(handleWebSocketMessages,[Default]), UsedName(StatsApiRoute,[Default]), UsedName(post,[Default]), UsedName(extractMethod,[Default]), UsedName(multipartFormDataUnmarshaller,[Implicit]), UsedName(hashCode,[Default]), UsedName(extractScheme,[Default]), UsedName(mapResponseEntity,[Default]), UsedName(headerValueByType,[Default]), UsedName(extractClientIP,[Default]), UsedName(extractHost,[Default]), UsedName(getFromBrowseableDirectory,[Default]), UsedName(extractStrictEntity,[Default]), UsedName(optionalHeaderValueByName,[Default]), UsedName(withoutSizeLimit,[Default]), UsedName(optionalHeaderValuePF,[Default]), UsedName(defaultMultipartGeneralUnmarshaller$default$1,[Default]), UsedName(optionalAttribute,[Default]), UsedName(onComplete,[Default]), UsedName(authenticateOAuth2Async,[Default]), UsedName(unmarshaller,[Implicit]), UsedName(extractUri,[Default]), UsedName(mapSettings,[Default]), UsedName(RemainingPath,[Default]), UsedName(authorizeAsync,[Default]), UsedName(pathSingleSlash,[Default]), UsedName(settings,[Default]), UsedName(headerValuePF,[Default]), UsedName(defaultMultipartByteRangesUnmarshaller$default$2,[Default]), UsedName(HexLongNumber,[Default]), UsedName(encoder,[Implicit]), UsedName(selectPreferredLanguage,[Default]), UsedName(respondWithDefaultHeaders,[Default]), UsedName(notify,[Default]), UsedName(_defaultClassLoader,[Default]), UsedName(ne,[Default]), UsedName(getFromResourceDirectory,[Default]), UsedName(pathSuffix,[Default]), UsedName(multipartByteRangesUnmarshaller$default$2,[Default]), UsedName(pathEnd,[Default]), UsedName(mapResponseHeaders,[Default]), UsedName(parameterSeq,[Default]), UsedName(toString,[Default]), UsedName(tprovide,[Default]), UsedName(defaultMultipartByteRangesUnmarshaller$default$1,[Default]), UsedName(mapRouteResult,[Default]), UsedName(formFieldMap,[Default]), UsedName(reject,[Default]), UsedName(recoverRejectionsWith,[Default]), UsedName(_enhanceRouteWithConcatenation,[Implicit]), UsedName(extractParserSettings,[Default]), UsedName(handleWith,[Default]), UsedName(AuthenticationResult,[Default]), UsedName(getFromBrowseableDirectories,[Default]), UsedName(delete,[Default]), UsedName(AsyncAuthenticatorPF,[Default]), UsedName(askActor,[Default]), UsedName(deleteCookie,[Default]), UsedName(entity,[Default]), UsedName(head,[Default]), UsedName(extractRequest,[Default]), UsedName(scheme,[Default]), UsedName(copy$default$1,[Default]), UsedName(##,[Default]), UsedName(toStrictEntity,[Default]), UsedName(withoutRequestTimeout,[Default]), UsedName(mapRouteResultPF,[Default]), UsedName(getFromResourceDirectory$default$2,[Default]), UsedName(getFromResource$default$3,[Default]), UsedName(listDirectoryContents,[Default]), UsedName(getClass,[Default]), UsedName(clone,[Default]), UsedName(HexIntNumber,[Default]), UsedName(not,[Default]), UsedName(recoverRejections,[Default]), UsedName(redirectToNoTrailingSlashIfPresent,[Default]), UsedName(handleExceptions,[Default]), UsedName(tail,[Default]), UsedName(validate,[Default]), UsedName(logger,[Default]), UsedName(Slash,[Default]), UsedName(method,[Default]), UsedName(withLog,[Default]), UsedName(Remaining,[Default]), UsedName(headerValueByName,[Default]), UsedName(respondWithHeaders,[Default]), UsedName(PathEnd,[Default]), UsedName(formFields,[Default]), UsedName(extractRequestEntity,[Default]), UsedName(extractSettings,[Default]), UsedName(unapply,[Default]), UsedName(_string2NR,[Implicit]), UsedName(pathPrefix,[Default]), UsedName(asInstanceOf,[Default]), UsedName(authenticateOrRejectWithChallenge,[Default]), UsedName(responseEncodingAccepted,[Default]), UsedName(nodeViewHolderRef,[Default]), UsedName(authenticateBasicPF,[Default]), UsedName(extractWebSocketUpgrade,[Default]), UsedName(cancelRejection,[Default]), UsedName(logRequestResult,[Default]), UsedName(getFromResource,[Default]), UsedName(fileUpload,[Default]), UsedName(AuthenticatorPF,[Default]), UsedName(defaultMultipartByteRangesUnmarshaller,[Implicit]), UsedName(mapRouteResultWithPF,[Default]), UsedName(equals,[Default]), UsedName(multipartFormDataUnmarshaller$default$1,[Default]), UsedName(extractMatchedPath,[Default]), UsedName(completeWith,[Default]), UsedName(apiKeyHeaderName,[Default]), UsedName(extractRequestTimeout,[Default]), UsedName(logResult,[Default]), UsedName(productArity,[Default]), UsedName(AsyncAuthenticator,[Default]), UsedName(handleWebSocketMessagesForProtocol,[Default]), UsedName(rawPathPrefixTest,[Default]), UsedName(extractMaterializer,[Default]), UsedName(onSuccess,[Default]), UsedName(withNodeView,[Default]), UsedName(cancelRejections,[Default]), UsedName(parameterMap,[Default]), UsedName(context,[Implicit]), UsedName(formField,[Default]), UsedName(jsonMarshaller,[Implicit]), UsedName(ignoreTrailingSlash,[Default]), UsedName(getFromDirectory,[Default]), UsedName(rawPathPrefix,[Default]), UsedName(respondWithDefaultHeader,[Default]), UsedName(optionalHeaderValue,[Default]), UsedName(decodeRequest,[Default]), UsedName(finalize,[Default]), UsedName(storeUploadedFiles,[Default]), UsedName(log,[Default]), UsedName(!=,[Default]), UsedName(parameters,[Default]), UsedName(_regex2PathMatcher,[Implicit]), UsedName(asSourceOf,[Default]), UsedName(multipartByteRangesUnmarshaller$default$3,[Default]), UsedName(setCookie,[Default]), UsedName(multipartGeneralUnmarshaller,[Default]), UsedName(decodeRequestWith,[Default]), UsedName(withExecutionContext,[Default]), UsedName(byteArrayUnmarshaller,[Implicit]), UsedName(defaultMultipartGeneralUnmarshaller,[Implicit]), UsedName(formFieldSeq,[Default]), UsedName(_stringExtractionPair2PathMatcher,[Implicit]), UsedName(attribute,[Default]), UsedName(deleteCookie$default$3,[Default]), UsedName(marshaller$default$2,[Default]), UsedName(options,[Default]), UsedName(redirectToTrailingSlashIfMissing,[Default]), UsedName(authenticateOAuth2PFAsync,[Default]), UsedName(pathSuffixTest,[Default]), UsedName(stringUnmarshaller,[Implicit]), UsedName(checkSameOrigin,[Default]), UsedName(wait,[Default]), UsedName(authenticateBasicAsync,[Default]), UsedName(_valueMap2PathMatcher,[Implicit]), UsedName(pathEndOrSingleSlash,[Default]), UsedName(productIterator,[Default]), UsedName(storeUploadedFile,[Default]), UsedName(getFromFile,[Default]), UsedName(printer,[Implicit]), UsedName(Segments,[Default]), UsedName(viewAsync,[Default]), UsedName(conditional,[Default]), UsedName(mapRouteResultWith,[Default]), UsedName(extractActorSystem,[Default]), UsedName(LongNumber,[Default]), UsedName(extractUnmatchedPath,[Default]), UsedName(extractDataBytes,[Default]), UsedName(DoubleNumber,[Default]), UsedName(handleRejections,[Default]), UsedName(mapResponse,[Default]), UsedName(nothingMatcher,[Default]), UsedName(authenticateBasic,[Default]), UsedName(copy,[Default]), UsedName(mapRouteResultFuture,[Default]), UsedName(IntNumber,[Default]), UsedName(canEqual,[Default]), UsedName(respondWithHeader,[Default]), UsedName(mapInnerRoute,[Default]), UsedName(_stringNameOptionReceptacle2PathMatcher,[Implicit]), UsedName(NumberMatcher,[Default]), UsedName(pass,[Default]), UsedName(optionalCookie,[Default]), UsedName(multipartByteRangesUnmarshaller,[Default]), UsedName(defaultMultipartGeneralUnmarshaller$default$2,[Default]), UsedName(byteStringUnmarshaller,[Implicit]), UsedName(jsonUnmarshaller,[Implicit]), UsedName(withRequestTimeoutResponse,[Default]))) invalidates 2 classes due to The examples.ZSChain.api.http.StatsApiRoute has the following implicit definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(defaultUrlEncodedFormDataUnmarshaller,[Implicit]), UsedName(charArrayUnmarshaller,[Implicit]), UsedName(_symbol2NR,[Implicit]), UsedName(marshaller,[Implicit]), UsedName(_segmentStringToPathMatcher,[Implicit]), UsedName(timeout,[Implicit]), UsedName(multipartFormDataUnmarshaller,[Implicit]), UsedName(unmarshaller,[Implicit]), UsedName(encoder,[Implicit]), UsedName(_enhanceRouteWithConcatenation,[Implicit]), UsedName(_string2NR,[Implicit]), UsedName(defaultMultipartByteRangesUnmarshaller,[Implicit]), UsedName(context,[Implicit]), UsedName(jsonMarshaller,[Implicit]), UsedName(_regex2PathMatcher,[Implicit]), UsedName(byteArrayUnmarshaller,[Implicit]), UsedName(defaultMultipartGeneralUnmarshaller,[Implicit]), UsedName(_stringExtractionPair2PathMatcher,[Implicit]), UsedName(stringUnmarshaller,[Implicit]), UsedName(_valueMap2PathMatcher,[Implicit]), UsedName(printer,[Implicit]), UsedName(_stringNameOptionReceptacle2PathMatcher,[Implicit]), UsedName(byteStringUnmarshaller,[Implicit]), UsedName(jsonUnmarshaller,[Implicit]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(examples.ZSChain.api.http.StatsApiRoute)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(examples.ZSChain.HybridApp)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from examples.hybrid.blocks.PowBlockSerializer...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: examples.hybrid.blocks.PowBlockSerializer[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(examples.hybrid.blocks.PowBlockSerializer)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(examples.hybrid.blocks.PowBlockSerializer,ModifiedNames(changes = UsedName(brotherBytes,[Default]), UsedName(toBytes,[Default]), UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(parse,[Default]), UsedName(notifyAll,[Default]), UsedName($init$,[Default]), UsedName(isInstanceOf,[Default]), UsedName(parseBytes,[Default]), UsedName(synchronized,[Default]), UsedName(parseByteString,[Default]), UsedName(hashCode,[Default]), UsedName(PowBlockSerializer,[Default]), UsedName(parseBytesTry,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(parseByteStringTry,[Default]), UsedName(##,[Default]), UsedName(getClass,[Default]), UsedName(clone,[Default]), UsedName(asInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(serialize,[Default]), UsedName(finalize,[Default]), UsedName(!=,[Default]), UsedName(parseTry,[Default]), UsedName(wait,[Default]), UsedName(toByteString,[Default]))) invalidates 1 classes due to The examples.hybrid.blocks.PowBlockSerializer has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(brotherBytes,[Default]), UsedName(toBytes,[Default]), UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(parse,[Default]), UsedName(notifyAll,[Default]), UsedName($init$,[Default]), UsedName(isInstanceOf,[Default]), UsedName(parseBytes,[Default]), UsedName(synchronized,[Default]), UsedName(parseByteString,[Default]), UsedName(hashCode,[Default]), UsedName(PowBlockSerializer,[Default]), UsedName(parseBytesTry,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(parseByteStringTry,[Default]), UsedName(##,[Default]), UsedName(getClass,[Default]), UsedName(clone,[Default]), UsedName(asInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(serialize,[Default]), UsedName(finalize,[Default]), UsedName(!=,[Default]), UsedName(parseTry,[Default]), UsedName(wait,[Default]), UsedName(toByteString,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(examples.hybrid.blocks.PowBlockSerializer)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from examples.hybrid.api.http.WalletApiRoute...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: examples.hybrid.api.http.WalletApiRoute[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(examples.hybrid.api.http.WalletApiRoute)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(examples.hybrid.api.http.WalletApiRoute,ModifiedNames(changes = UsedName(defaultUrlEncodedFormDataUnmarshaller,[Implicit]), UsedName(as,[Default]), UsedName(withAuth,[Default]), UsedName(path,[Default]), UsedName(authenticateBasicPFAsync,[Default]), UsedName(copy$default$2,[Default]), UsedName(onCompleteWithBreaker,[Default]), UsedName(extractLog,[Default]), UsedName(extractExecutionContext,[Default]), UsedName(multipartUnmarshaller$default$7,[Default]), UsedName(extract,[Default]), UsedName(handleSync,[Default]), UsedName(withSizeLimit,[Default]), UsedName(formFieldMultiMap,[Default]), UsedName(urlEncodedFormDataUnmarshaller,[Default]), UsedName(Authenticator,[Default]), UsedName(separateOnSlashes,[Default]), UsedName(charArrayUnmarshaller,[Implicit]), UsedName(requestEncodedWith,[Default]), UsedName(_symbol2NR,[Implicit]), UsedName(textract,[Default]), UsedName(marshaller,[Implicit]), UsedName(host,[Default]), UsedName(withRangeSupport,[Default]), UsedName(pathPrefixTest,[Default]), UsedName(Neutral,[Default]), UsedName(jsonMarshaller$default$1,[Default]), UsedName(==,[Default]), UsedName(get,[Default]), UsedName(examples;hybrid;api;http;WalletApiRoute;init;,[Default]), UsedName(extractUpgradeToWebSocket,[Default]), UsedName(parameterMultiMap,[Default]), UsedName(_segmentStringToPathMatcher,[Implicit]), UsedName(encodeResponse,[Default]), UsedName(addCorsHeaders,[Default]), UsedName(mapRequest,[Default]), UsedName(eq,[Default]), UsedName(parameter,[Default]), UsedName(multipartGeneralUnmarshaller$default$3,[Default]), UsedName(authenticateOAuth2,[Default]), UsedName(complete,[Default]), UsedName(instanceOf,[Default]), UsedName(requestEntityEmpty,[Default]), UsedName(redirect,[Default]), UsedName(withMaterializer,[Default]), UsedName(put,[Default]), UsedName(withSettings,[Default]), UsedName(logRequest,[Default]), UsedName(notifyAll,[Default]), UsedName(JavaUUID,[Default]), UsedName(handleWebSocketMessagesForOptionalProtocol,[Default]), UsedName(multipartFormDataUnmarshaller$default$2,[Default]), UsedName(productElement,[Default]), UsedName(mapRejections,[Default]), UsedName($init$,[Default]), UsedName(isInstanceOf,[Default]), UsedName(mediaTypes,[Default]), UsedName(withPrecompressedMediaTypeSupport,[Default]), UsedName(extractCredentials,[Default]), UsedName(requestEntityPresent,[Default]), UsedName(apply,[Default]), UsedName(mapUnmatchedPath,[Default]), UsedName(fileUploadAll,[Default]), UsedName(rejectEmptyResponse,[Default]), UsedName(overrideMethodWithParameter,[Default]), UsedName(concat,[Default]), UsedName(encodeResponseWith,[Default]), UsedName(timeout,[Implicit]), UsedName(route,[Default]), UsedName(unmarshallerContentTypes,[Default]), UsedName(multipartUnmarshaller,[Default]), UsedName(balances,[Default]), UsedName(extractOfferedWsProtocols,[Default]), UsedName(mapRequestContext,[Default]), UsedName(provide,[Default]), UsedName(failWith,[Default]), UsedName(headerValue,[Default]), UsedName(multipartUnmarshaller$default$8,[Default]), UsedName(corsHandler,[Default]), UsedName(completeOrRecoverWith,[Default]), UsedName(withRequestTimeout,[Default]), UsedName(authenticateOAuth2PF,[Default]), UsedName(synchronized,[Default]), UsedName(Segment,[Default]), UsedName(multipartGeneralUnmarshaller$default$2,[Default]), UsedName(RequestToSourceUnmarshaller,[Default]), UsedName(patch,[Default]), UsedName(deleteCookie$default$2,[Default]), UsedName(optionalHeaderValueByType,[Default]), UsedName(productPrefix,[Default]), UsedName(handle,[Default]), UsedName(extractRequestContext,[Default]), UsedName(authorize,[Default]), UsedName(cookie,[Default]), UsedName(handleWebSocketMessages,[Default]), UsedName(post,[Default]), UsedName(extractMethod,[Default]), UsedName(multipartFormDataUnmarshaller,[Implicit]), UsedName(hashCode,[Default]), UsedName(extractScheme,[Default]), UsedName(mapResponseEntity,[Default]), UsedName(headerValueByType,[Default]), UsedName(extractClientIP,[Default]), UsedName(extractHost,[Default]), UsedName(getFromBrowseableDirectory,[Default]), UsedName(extractStrictEntity,[Default]), UsedName(optionalHeaderValueByName,[Default]), UsedName(withoutSizeLimit,[Default]), UsedName(optionalHeaderValuePF,[Default]), UsedName(defaultMultipartGeneralUnmarshaller$default$1,[Default]), UsedName(optionalAttribute,[Default]), UsedName(onComplete,[Default]), UsedName(authenticateOAuth2Async,[Default]), UsedName(unmarshaller,[Implicit]), UsedName(extractUri,[Default]), UsedName(mapSettings,[Default]), UsedName(RemainingPath,[Default]), UsedName(authorizeAsync,[Default]), UsedName(pathSingleSlash,[Default]), UsedName(settings,[Default]), UsedName(headerValuePF,[Default]), UsedName(defaultMultipartByteRangesUnmarshaller$default$2,[Default]), UsedName(HexLongNumber,[Default]), UsedName(DefaultFee,[Default]), UsedName(encoder,[Implicit]), UsedName(selectPreferredLanguage,[Default]), UsedName(respondWithDefaultHeaders,[Default]), UsedName(notify,[Default]), UsedName(_defaultClassLoader,[Default]), UsedName(ne,[Default]), UsedName(getFromResourceDirectory,[Default]), UsedName(pathSuffix,[Default]), UsedName(multipartByteRangesUnmarshaller$default$2,[Default]), UsedName(pathEnd,[Default]), UsedName(mapResponseHeaders,[Default]), UsedName(parameterSeq,[Default]), UsedName(toString,[Default]), UsedName(tprovide,[Default]), UsedName(defaultMultipartByteRangesUnmarshaller$default$1,[Default]), UsedName(mapRouteResult,[Default]), UsedName(formFieldMap,[Default]), UsedName(reject,[Default]), UsedName(recoverRejectionsWith,[Default]), UsedName(_enhanceRouteWithConcatenation,[Implicit]), UsedName(extractParserSettings,[Default]), UsedName(handleWith,[Default]), UsedName(AuthenticationResult,[Default]), UsedName(getFromBrowseableDirectories,[Default]), UsedName(delete,[Default]), UsedName(AsyncAuthenticatorPF,[Default]), UsedName(askActor,[Default]), UsedName(deleteCookie,[Default]), UsedName(entity,[Default]), UsedName(head,[Default]), UsedName(extractRequest,[Default]), UsedName(scheme,[Default]), UsedName(copy$default$1,[Default]), UsedName(##,[Default]), UsedName(toStrictEntity,[Default]), UsedName(withoutRequestTimeout,[Default]), UsedName(mapRouteResultPF,[Default]), UsedName(getFromResourceDirectory$default$2,[Default]), UsedName(getFromResource$default$3,[Default]), UsedName(listDirectoryContents,[Default]), UsedName(getClass,[Default]), UsedName(clone,[Default]), UsedName(HexIntNumber,[Default]), UsedName(not,[Default]), UsedName(recoverRejections,[Default]), UsedName(redirectToNoTrailingSlashIfPresent,[Default]), UsedName(handleExceptions,[Default]), UsedName(validate,[Default]), UsedName(logger,[Default]), UsedName(Slash,[Default]), UsedName(method,[Default]), UsedName(withLog,[Default]), UsedName(Remaining,[Default]), UsedName(headerValueByName,[Default]), UsedName(respondWithHeaders,[Default]), UsedName(PathEnd,[Default]), UsedName(formFields,[Default]), UsedName(extractRequestEntity,[Default]), UsedName(extractSettings,[Default]), UsedName(unapply,[Default]), UsedName(_string2NR,[Implicit]), UsedName(pathPrefix,[Default]), UsedName(asInstanceOf,[Default]), UsedName(authenticateOrRejectWithChallenge,[Default]), UsedName(responseEncodingAccepted,[Default]), UsedName(nodeViewHolderRef,[Default]), UsedName(authenticateBasicPF,[Default]), UsedName(extractWebSocketUpgrade,[Default]), UsedName(cancelRejection,[Default]), UsedName(logRequestResult,[Default]), UsedName(getFromResource,[Default]), UsedName(fileUpload,[Default]), UsedName(AuthenticatorPF,[Default]), UsedName(defaultMultipartByteRangesUnmarshaller,[Implicit]), UsedName(mapRouteResultWithPF,[Default]), UsedName(equals,[Default]), UsedName(multipartFormDataUnmarshaller$default$1,[Default]), UsedName(extractMatchedPath,[Default]), UsedName(completeWith,[Default]), UsedName(apiKeyHeaderName,[Default]), UsedName(extractRequestTimeout,[Default]), UsedName(logResult,[Default]), UsedName(productArity,[Default]), UsedName(AsyncAuthenticator,[Default]), UsedName(handleWebSocketMessagesForProtocol,[Default]), UsedName(rawPathPrefixTest,[Default]), UsedName(extractMaterializer,[Default]), UsedName(onSuccess,[Default]), UsedName(withNodeView,[Default]), UsedName(cancelRejections,[Default]), UsedName(parameterMap,[Default]), UsedName(context,[Implicit]), UsedName(formField,[Default]), UsedName(jsonMarshaller,[Implicit]), UsedName(ignoreTrailingSlash,[Default]), UsedName(getFromDirectory,[Default]), UsedName(rawPathPrefix,[Default]), UsedName(respondWithDefaultHeader,[Default]), UsedName(optionalHeaderValue,[Default]), UsedName(decodeRequest,[Default]), UsedName(finalize,[Default]), UsedName(storeUploadedFiles,[Default]), UsedName(log,[Default]), UsedName(!=,[Default]), UsedName(parameters,[Default]), UsedName(_regex2PathMatcher,[Implicit]), UsedName(asSourceOf,[Default]), UsedName(multipartByteRangesUnmarshaller$default$3,[Default]), UsedName(setCookie,[Default]), UsedName(multipartGeneralUnmarshaller,[Default]), UsedName(decodeRequestWith,[Default]), UsedName(withExecutionContext,[Default]), UsedName(byteArrayUnmarshaller,[Implicit]), UsedName(defaultMultipartGeneralUnmarshaller,[Implicit]), UsedName(formFieldSeq,[Default]), UsedName(_stringExtractionPair2PathMatcher,[Implicit]), UsedName(attribute,[Default]), UsedName(deleteCookie$default$3,[Default]), UsedName(marshaller$default$2,[Default]), UsedName(options,[Default]), UsedName(redirectToTrailingSlashIfMissing,[Default]), UsedName(authenticateOAuth2PFAsync,[Default]), UsedName(pathSuffixTest,[Default]), UsedName(stringUnmarshaller,[Implicit]), UsedName(checkSameOrigin,[Default]), UsedName(wait,[Default]), UsedName(authenticateBasicAsync,[Default]), UsedName(transfer,[Default]), UsedName(_valueMap2PathMatcher,[Implicit]), UsedName(pathEndOrSingleSlash,[Default]), UsedName(productIterator,[Default]), UsedName(storeUploadedFile,[Default]), UsedName(getFromFile,[Default]), UsedName(printer,[Implicit]), UsedName(Segments,[Default]), UsedName(viewAsync,[Default]), UsedName(conditional,[Default]), UsedName(mapRouteResultWith,[Default]), UsedName(extractActorSystem,[Default]), UsedName(LongNumber,[Default]), UsedName(extractUnmatchedPath,[Default]), UsedName(extractDataBytes,[Default]), UsedName(DoubleNumber,[Default]), UsedName(handleRejections,[Default]), UsedName(mapResponse,[Default]), UsedName(nothingMatcher,[Default]), UsedName(authenticateBasic,[Default]), UsedName(copy,[Default]), UsedName(mapRouteResultFuture,[Default]), UsedName(WalletApiRoute,[Default]), UsedName(IntNumber,[Default]), UsedName(canEqual,[Default]), UsedName(respondWithHeader,[Default]), UsedName(mapInnerRoute,[Default]), UsedName(_stringNameOptionReceptacle2PathMatcher,[Implicit]), UsedName(NumberMatcher,[Default]), UsedName(pass,[Default]), UsedName(optionalCookie,[Default]), UsedName(multipartByteRangesUnmarshaller,[Default]), UsedName(defaultMultipartGeneralUnmarshaller$default$2,[Default]), UsedName(byteStringUnmarshaller,[Implicit]), UsedName(jsonUnmarshaller,[Implicit]), UsedName(withRequestTimeoutResponse,[Default]))) invalidates 1 classes due to The examples.hybrid.api.http.WalletApiRoute has the following implicit definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(defaultUrlEncodedFormDataUnmarshaller,[Implicit]), UsedName(charArrayUnmarshaller,[Implicit]), UsedName(_symbol2NR,[Implicit]), UsedName(marshaller,[Implicit]), UsedName(_segmentStringToPathMatcher,[Implicit]), UsedName(timeout,[Implicit]), UsedName(multipartFormDataUnmarshaller,[Implicit]), UsedName(unmarshaller,[Implicit]), UsedName(encoder,[Implicit]), UsedName(_enhanceRouteWithConcatenation,[Implicit]), UsedName(_string2NR,[Implicit]), UsedName(defaultMultipartByteRangesUnmarshaller,[Implicit]), UsedName(context,[Implicit]), UsedName(jsonMarshaller,[Implicit]), UsedName(_regex2PathMatcher,[Implicit]), UsedName(byteArrayUnmarshaller,[Implicit]), UsedName(defaultMultipartGeneralUnmarshaller,[Implicit]), UsedName(_stringExtractionPair2PathMatcher,[Implicit]), UsedName(stringUnmarshaller,[Implicit]), UsedName(_valueMap2PathMatcher,[Implicit]), UsedName(printer,[Implicit]), UsedName(_stringNameOptionReceptacle2PathMatcher,[Implicit]), UsedName(byteStringUnmarshaller,[Implicit]), UsedName(jsonUnmarshaller,[Implicit]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(examples.hybrid.api.http.WalletApiRoute)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from examples.ZSChain.util.FileFunctions...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: examples.ZSChain.util.FileFunctions[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(examples.ZSChain.util.FileFunctions)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of examples.ZSChain.simulations.PrivateChain: Set(UsedName(==,[Default]), UsedName(isInstanceOf,[Default]), UsedName(FileFunctions,[Default]), UsedName(ne,[Default]), UsedName(asInstanceOf,[Default]), UsedName(append,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(examples.ZSChain.util.FileFunctions,ModifiedNames(changes = UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(notifyAll,[Default]), UsedName(isInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(hashCode,[Default]), UsedName(FileFunctions,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(##,[Default]), UsedName(getClass,[Default]), UsedName(clone,[Default]), UsedName(asInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(finalize,[Default]), UsedName(!=,[Default]), UsedName(append,[Default]), UsedName(wait,[Default]))) invalidates 2 classes due to The examples.ZSChain.util.FileFunctions has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(notifyAll,[Default]), UsedName(isInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(hashCode,[Default]), UsedName(FileFunctions,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(##,[Default]), UsedName(getClass,[Default]), UsedName(clone,[Default]), UsedName(asInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(finalize,[Default]), UsedName(!=,[Default]), UsedName(append,[Default]), UsedName(wait,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(examples.ZSChain.util.FileFunctions)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(examples.ZSChain.simulations.PrivateChain)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from examples.hybrid.wallet.GenesisStateGenerator...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: examples.hybrid.wallet.GenesisStateGenerator[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(examples.hybrid.wallet.GenesisStateGenerator)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(examples.hybrid.wallet.GenesisStateGenerator,ModifiedNames(changes = UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(notifyAll,[Default]), UsedName($init$,[Default]), UsedName(isInstanceOf,[Default]), UsedName(delayedInit,[Default]), UsedName(GenesisStateGenerator,[Default]), UsedName(synchronized,[Default]), UsedName(hashCode,[Default]), UsedName(encoder,[Implicit]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(executionStart,[Default]), UsedName(toString,[Default]), UsedName(##,[Default]), UsedName(args,[Default]), UsedName(getClass,[Default]), UsedName(clone,[Default]), UsedName(asInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(finalize,[Default]), UsedName(!=,[Default]), UsedName(pks,[Default]), UsedName(wait,[Default]), UsedName(main,[Default]))) invalidates 1 classes due to The examples.hybrid.wallet.GenesisStateGenerator has the following implicit definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(encoder,[Implicit]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(examples.hybrid.wallet.GenesisStateGenerator)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from examples.ZSChain.mining.PosForger.ReceivableMessages.PosForgingInfo...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: examples.ZSChain.mining.PosForger.ReceivableMessages.PosForgingInfo[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(examples.ZSChain.mining.PosForger.ReceivableMessages.PosForgingInfo)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(examples.ZSChain.mining.PosForger.ReceivableMessages.PosForgingInfo,ModifiedNames(changes = UsedName(bestPosBlock,[Default]), UsedName(examples;ZSChain;mining;PosForger;ReceivableMessages;PosForgingInfo;init;,[Default]), UsedName(copy$default$2,[Default]), UsedName(txsToInclude,[Default]), UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(notifyAll,[Default]), UsedName(productElement,[Default]), UsedName($init$,[Default]), UsedName(isInstanceOf,[Default]), UsedName(apply,[Default]), UsedName(copy$default$6,[Default]), UsedName(synchronized,[Default]), UsedName(PosForgingInfo,[Default]), UsedName(productPrefix,[Default]), UsedName(hashCode,[Default]), UsedName(copy$default$4,[Default]), UsedName(boxKeys,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(copy$default$3,[Default]), UsedName(toString,[Default]), UsedName(copy$default$1,[Default]), UsedName(##,[Default]), UsedName(getClass,[Default]), UsedName(clone,[Default]), UsedName(unapply,[Default]), UsedName(asInstanceOf,[Default]), UsedName(bestPowBlock,[Default]), UsedName(equals,[Default]), UsedName(productArity,[Default]), UsedName(finalize,[Default]), UsedName(!=,[Default]), UsedName(tupled,[Default]), UsedName(copy$default$5,[Default]), UsedName(wait,[Default]), UsedName(productIterator,[Default]), UsedName(diff,[Default]), UsedName(copy,[Default]), UsedName(canEqual,[Default]), UsedName(curried,[Default]), UsedName(pairCompleted,[Default]))) invalidates 1 classes due to The examples.ZSChain.mining.PosForger.ReceivableMessages.PosForgingInfo has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(bestPosBlock,[Default]), UsedName(examples;ZSChain;mining;PosForger;ReceivableMessages;PosForgingInfo;init;,[Default]), UsedName(copy$default$2,[Default]), UsedName(txsToInclude,[Default]), UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(notifyAll,[Default]), UsedName(productElement,[Default]), UsedName($init$,[Default]), UsedName(isInstanceOf,[Default]), UsedName(apply,[Default]), UsedName(copy$default$6,[Default]), UsedName(synchronized,[Default]), UsedName(PosForgingInfo,[Default]), UsedName(productPrefix,[Default]), UsedName(hashCode,[Default]), UsedName(copy$default$4,[Default]), UsedName(boxKeys,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(copy$default$3,[Default]), UsedName(toString,[Default]), UsedName(copy$default$1,[Default]), UsedName(##,[Default]), UsedName(getClass,[Default]), UsedName(clone,[Default]), UsedName(unapply,[Default]), UsedName(asInstanceOf,[Default]), UsedName(bestPowBlock,[Default]), UsedName(equals,[Default]), UsedName(productArity,[Default]), UsedName(finalize,[Default]), UsedName(!=,[Default]), UsedName(tupled,[Default]), UsedName(copy$default$5,[Default]), UsedName(wait,[Default]), UsedName(productIterator,[Default]), UsedName(diff,[Default]), UsedName(copy,[Default]), UsedName(canEqual,[Default]), UsedName(curried,[Default]), UsedName(pairCompleted,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(examples.ZSChain.mining.PosForger.ReceivableMessages.PosForgingInfo)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from examples.hybrid.blocks.PowBlockHeaderSerializer...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: examples.hybrid.blocks.PowBlockHeaderSerializer[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(examples.hybrid.blocks.PowBlockHeaderSerializer)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(examples.hybrid.blocks.PowBlockHeaderSerializer,ModifiedNames(changes = UsedName(toBytes,[Default]), UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(PowBlockHeaderSerializer,[Default]), UsedName(parse,[Default]), UsedName(notifyAll,[Default]), UsedName($init$,[Default]), UsedName(isInstanceOf,[Default]), UsedName(parseBytes,[Default]), UsedName(synchronized,[Default]), UsedName(parseByteString,[Default]), UsedName(hashCode,[Default]), UsedName(parseBytesTry,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(parseByteStringTry,[Default]), UsedName(##,[Default]), UsedName(getClass,[Default]), UsedName(clone,[Default]), UsedName(asInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(serialize,[Default]), UsedName(finalize,[Default]), UsedName(!=,[Default]), UsedName(parseTry,[Default]), UsedName(wait,[Default]), UsedName(toByteString,[Default]))) invalidates 1 classes due to The examples.hybrid.blocks.PowBlockHeaderSerializer has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(toBytes,[Default]), UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(PowBlockHeaderSerializer,[Default]), UsedName(parse,[Default]), UsedName(notifyAll,[Default]), UsedName($init$,[Default]), UsedName(isInstanceOf,[Default]), UsedName(parseBytes,[Default]), UsedName(synchronized,[Default]), UsedName(parseByteString,[Default]), UsedName(hashCode,[Default]), UsedName(parseBytesTry,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(parseByteStringTry,[Default]), UsedName(##,[Default]), UsedName(getClass,[Default]), UsedName(clone,[Default]), UsedName(asInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(serialize,[Default]), UsedName(finalize,[Default]), UsedName(!=,[Default]), UsedName(parseTry,[Default]), UsedName(wait,[Default]), UsedName(toByteString,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(examples.hybrid.blocks.PowBlockHeaderSerializer)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from examples.ZSChain.wallet.SimpleBoxTransactionGenerator.ReceivableMessages...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: examples.ZSChain.wallet.SimpleBoxTransactionGenerator.ReceivableMessages[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(examples.ZSChain.wallet.SimpleBoxTransactionGenerator.ReceivableMessages)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of examples.ZSChain.HybridApp: Set(UsedName(StartGeneration,[Default]), UsedName(ReceivableMessages,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(examples.ZSChain.wallet.SimpleBoxTransactionGenerator.ReceivableMessages,ModifiedNames(changes = UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(notifyAll,[Default]), UsedName(isInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(hashCode,[Default]), UsedName(GeneratorInfo,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(##,[Default]), UsedName(getClass,[Default]), UsedName(clone,[Default]), UsedName(asInstanceOf,[Default]), UsedName(StartGeneration,[Default]), UsedName(equals,[Default]), UsedName(finalize,[Default]), UsedName(!=,[Default]), UsedName(ReceivableMessages,[Default]), UsedName(wait,[Default]))) invalidates 2 classes due to The examples.ZSChain.wallet.SimpleBoxTransactionGenerator.ReceivableMessages has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(notifyAll,[Default]), UsedName(isInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(hashCode,[Default]), UsedName(GeneratorInfo,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(##,[Default]), UsedName(getClass,[Default]), UsedName(clone,[Default]), UsedName(asInstanceOf,[Default]), UsedName(StartGeneration,[Default]), UsedName(equals,[Default]), UsedName(finalize,[Default]), UsedName(!=,[Default]), UsedName(ReceivableMessages,[Default]), UsedName(wait,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(examples.ZSChain.wallet.SimpleBoxTransactionGenerator.ReceivableMessages)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(examples.ZSChain.HybridApp)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from examples.ZSChain.wallet.HBoxWallet...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: examples.ZSChain.wallet.HBoxWallet[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(examples.ZSChain.wallet.HBoxWallet)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following member ref dependencies of examples.ZSChain.wallet.HBoxWallet are invalidated:[0m
[0m[[0m[0mdebug[0m] [0m[0m	examples.ZSChain.HybridNodeViewHolder[0m
[0m[[0m[0mdebug[0m] [0m[0m	examples.ZSChain.api.http.DebugApiRoute[0m
[0m[[0m[0mdebug[0m] [0m[0m	examples.ZSChain.api.http.StatsApiRoute[0m
[0m[[0m[0mdebug[0m] [0m[0m	examples.ZSChain.api.http.WalletApiRoute[0m
[0m[[0m[0mdebug[0m] [0m[0m	examples.ZSChain.mining.PosForger[0m
[0m[[0m[0mdebug[0m] [0m[0m	examples.ZSChain.mining.PowMiner[0m
[0m[[0m[0mdebug[0m] [0m[0m	examples.ZSChain.simulations.PrivateChain[0m
[0m[[0m[0mdebug[0m] [0m[0m	examples.ZSChain.wallet.SimpleBoxTransactionGenerator[0m
[0m[[0m[0mdebug[0m] [0m[0m	examples.commons.SimpleBoxTransaction[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(examples.ZSChain.wallet.HBoxWallet,ModifiedNames(changes = UsedName(scanPersistent,[Default]), UsedName(copy$default$2,[Default]), UsedName(==,[Default]), UsedName(boxIds,[Default]), UsedName(exists,[Default]), UsedName(S,[Default]), UsedName(getReader,[Default]), UsedName(eq,[Default]), UsedName(store,[Default]), UsedName(boxes,[Default]), UsedName(notifyAll,[Default]), UsedName(productElement,[Default]), UsedName($init$,[Default]), UsedName(isInstanceOf,[Default]), UsedName(apply,[Default]), UsedName(rollback,[Default]), UsedName(scanOffchain,[Default]), UsedName(synchronized,[Default]), UsedName(productPrefix,[Default]), UsedName(walletFile,[Default]), UsedName(genesisWallet,[Default]), UsedName(hashCode,[Default]), UsedName(secretByPublicImage,[Default]), UsedName(encoder,[Implicit]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(readOrGenerate,[Default]), UsedName(toString,[Default]), UsedName(copy$default$1,[Default]), UsedName(##,[Default]), UsedName(getClass,[Default]), UsedName(clone,[Default]), UsedName(PI,[Default]), UsedName(logger,[Default]), UsedName(seed,[Default]), UsedName(unapply,[Default]), UsedName(asInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(productArity,[Default]), UsedName(NVCT,[Default]), UsedName(examples;ZSChain;wallet;HBoxWallet;init;,[Default]), UsedName(publicKeys,[Default]), UsedName(finalize,[Default]), UsedName(log,[Default]), UsedName(!=,[Default]), UsedName(secrets,[Default]), UsedName(HBoxWallet,[Default]), UsedName(wait,[Default]), UsedName(productIterator,[Default]), UsedName(generateNewSecret,[Default]), UsedName(copy,[Default]), UsedName(canEqual,[Default]), UsedName(historyTransactions,[Default]))) invalidates 10 classes due to The examples.ZSChain.wallet.HBoxWallet has the following implicit definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(encoder,[Implicit]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(examples.ZSChain.wallet.HBoxWallet)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(examples.commons.SimpleBoxTransaction, examples.ZSChain.api.http.DebugApiRoute, examples.ZSChain.api.http.StatsApiRoute, examples.ZSChain.simulations.PrivateChain, examples.ZSChain.api.http.WalletApiRoute, examples.ZSChain.wallet.SimpleBoxTransactionGenerator, examples.ZSChain.mining.PowMiner, examples.ZSChain.mining.PosForger, examples.ZSChain.HybridNodeViewHolder)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from examples.hybrid.simulations.PrivateChain...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: examples.hybrid.simulations.PrivateChain[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(examples.hybrid.simulations.PrivateChain)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(examples.hybrid.simulations.PrivateChain,ModifiedNames(changes = UsedName(genesisState,[Default]), UsedName(settings,[Implicit]), UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(notifyAll,[Default]), UsedName($init$,[Default]), UsedName(isInstanceOf,[Default]), UsedName(delayedInit,[Default]), UsedName(proposition,[Default]), UsedName(synchronized,[Default]), UsedName(honestAvg,[Default]), UsedName(generatePow,[Default]), UsedName(hashCode,[Default]), UsedName(experiment,[Default]), UsedName(encoder,[Implicit]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(executionStart,[Default]), UsedName(toString,[Default]), UsedName(##,[Default]), UsedName(args,[Default]), UsedName(getClass,[Default]), UsedName(clone,[Default]), UsedName(logger,[Default]), UsedName(honestHashesPerSecond,[Default]), UsedName(asInstanceOf,[Default]), UsedName(PrivateChain,[Default]), UsedName(experiments,[Default]), UsedName(equals,[Default]), UsedName(finalize,[Default]), UsedName(miningSettings,[Default]), UsedName(log,[Default]), UsedName(!=,[Default]), UsedName(timeSpent,[Default]), UsedName(wait,[Default]), UsedName(main,[Default]))) invalidates 1 classes due to The examples.hybrid.simulations.PrivateChain has the following implicit definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(settings,[Implicit]), UsedName(encoder,[Implicit]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(examples.hybrid.simulations.PrivateChain)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from examples.ZSChain.blocks.PowBlockHeaderSerializer...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: examples.ZSChain.blocks.PowBlockHeaderSerializer[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(examples.ZSChain.blocks.PowBlockHeaderSerializer)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(examples.ZSChain.blocks.PowBlockHeaderSerializer,ModifiedNames(changes = UsedName(toBytes,[Default]), UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(PowBlockHeaderSerializer,[Default]), UsedName(parse,[Default]), UsedName(notifyAll,[Default]), UsedName($init$,[Default]), UsedName(isInstanceOf,[Default]), UsedName(parseBytes,[Default]), UsedName(synchronized,[Default]), UsedName(parseByteString,[Default]), UsedName(hashCode,[Default]), UsedName(parseBytesTry,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(parseByteStringTry,[Default]), UsedName(##,[Default]), UsedName(getClass,[Default]), UsedName(clone,[Default]), UsedName(asInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(serialize,[Default]), UsedName(finalize,[Default]), UsedName(!=,[Default]), UsedName(parseTry,[Default]), UsedName(wait,[Default]), UsedName(toByteString,[Default]))) invalidates 1 classes due to The examples.ZSChain.blocks.PowBlockHeaderSerializer has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(toBytes,[Default]), UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(PowBlockHeaderSerializer,[Default]), UsedName(parse,[Default]), UsedName(notifyAll,[Default]), UsedName($init$,[Default]), UsedName(isInstanceOf,[Default]), UsedName(parseBytes,[Default]), UsedName(synchronized,[Default]), UsedName(parseByteString,[Default]), UsedName(hashCode,[Default]), UsedName(parseBytesTry,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(parseByteStringTry,[Default]), UsedName(##,[Default]), UsedName(getClass,[Default]), UsedName(clone,[Default]), UsedName(asInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(serialize,[Default]), UsedName(finalize,[Default]), UsedName(!=,[Default]), UsedName(parseTry,[Default]), UsedName(wait,[Default]), UsedName(toByteString,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(examples.ZSChain.blocks.PowBlockHeaderSerializer)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from examples.hybrid.validation.DifficultyBlockValidator...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: examples.hybrid.validation.DifficultyBlockValidator[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(examples.hybrid.validation.DifficultyBlockValidator)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(examples.hybrid.validation.DifficultyBlockValidator,ModifiedNames(changes = UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(examples;hybrid;validation;DifficultyBlockValidator;init;,[Default]), UsedName(notifyAll,[Default]), UsedName($init$,[Default]), UsedName(isInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(hashCode,[Default]), UsedName(encoder,[Implicit]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(##,[Default]), UsedName(getClass,[Default]), UsedName(clone,[Default]), UsedName(validate,[Default]), UsedName(asInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(finalize,[Default]), UsedName(!=,[Default]), UsedName(wait,[Default]), UsedName(DifficultyBlockValidator,[Default]))) invalidates 1 classes due to The examples.hybrid.validation.DifficultyBlockValidator has the following implicit definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(encoder,[Implicit]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(examples.hybrid.validation.DifficultyBlockValidator)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from examples.hybrid.wallet.HBoxWallet...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: examples.hybrid.wallet.HBoxWallet[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(examples.hybrid.wallet.HBoxWallet)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(examples.hybrid.wallet.HBoxWallet,ModifiedNames(changes = UsedName(scanPersistent,[Default]), UsedName(copy$default$2,[Default]), UsedName(==,[Default]), UsedName(boxIds,[Default]), UsedName(exists,[Default]), UsedName(S,[Default]), UsedName(getReader,[Default]), UsedName(eq,[Default]), UsedName(store,[Default]), UsedName(boxes,[Default]), UsedName(notifyAll,[Default]), UsedName(productElement,[Default]), UsedName($init$,[Default]), UsedName(isInstanceOf,[Default]), UsedName(apply,[Default]), UsedName(rollback,[Default]), UsedName(scanOffchain,[Default]), UsedName(synchronized,[Default]), UsedName(productPrefix,[Default]), UsedName(walletFile,[Default]), UsedName(genesisWallet,[Default]), UsedName(hashCode,[Default]), UsedName(secretByPublicImage,[Default]), UsedName(encoder,[Implicit]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(examples;hybrid;wallet;HBoxWallet;init;,[Default]), UsedName(readOrGenerate,[Default]), UsedName(toString,[Default]), UsedName(copy$default$1,[Default]), UsedName(##,[Default]), UsedName(getClass,[Default]), UsedName(clone,[Default]), UsedName(PI,[Default]), UsedName(logger,[Default]), UsedName(seed,[Default]), UsedName(unapply,[Default]), UsedName(asInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(productArity,[Default]), UsedName(NVCT,[Default]), UsedName(publicKeys,[Default]), UsedName(finalize,[Default]), UsedName(log,[Default]), UsedName(!=,[Default]), UsedName(secrets,[Default]), UsedName(HBoxWallet,[Default]), UsedName(wait,[Default]), UsedName(productIterator,[Default]), UsedName(generateNewSecret,[Default]), UsedName(copy,[Default]), UsedName(canEqual,[Default]), UsedName(historyTransactions,[Default]))) invalidates 1 classes due to The examples.hybrid.wallet.HBoxWallet has the following implicit definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(encoder,[Implicit]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(examples.hybrid.wallet.HBoxWallet)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from examples.hybrid.HLocalInterface...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: examples.hybrid.HLocalInterface[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(examples.hybrid.HLocalInterface)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(examples.hybrid.HLocalInterface,ModifiedNames(changes = UsedName(postRestart,[Default]), UsedName(==,[Default]), UsedName(preStart,[Default]), UsedName(eq,[Default]), UsedName(HLocalInterface,[Default]), UsedName(notifyAll,[Default]), UsedName($init$,[Default]), UsedName(isInstanceOf,[Default]), UsedName(aroundReceive,[Default]), UsedName(self,[Implicit]), UsedName(synchronized,[Default]), UsedName(postStop,[Default]), UsedName(hashCode,[Default]), UsedName(aroundPostRestart,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(##,[Default]), UsedName(examples;hybrid;HLocalInterface;init;,[Default]), UsedName(getClass,[Default]), UsedName(clone,[Default]), UsedName(logger,[Default]), UsedName(sender,[Default]), UsedName(supervisorStrategy,[Default]), UsedName(Receive,[Default]), UsedName(asInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(receive,[Default]), UsedName(context,[Implicit]), UsedName(finalize,[Default]), UsedName(log,[Default]), UsedName(!=,[Default]), UsedName(aroundPostStop,[Default]), UsedName(wait,[Default]), UsedName(aroundPreRestart,[Default]), UsedName(preRestart,[Default]), UsedName(aroundPreStart,[Default]), UsedName(unhandled,[Default]))) invalidates 1 classes due to The examples.hybrid.HLocalInterface has the following implicit definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(self,[Implicit]), UsedName(context,[Implicit]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(examples.hybrid.HLocalInterface)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from examples.ZSChain.HLocalInterface...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: examples.ZSChain.HLocalInterface[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(examples.ZSChain.HLocalInterface)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(examples.ZSChain.HLocalInterface,ModifiedNames(changes = UsedName(postRestart,[Default]), UsedName(==,[Default]), UsedName(preStart,[Default]), UsedName(eq,[Default]), UsedName(HLocalInterface,[Default]), UsedName(notifyAll,[Default]), UsedName($init$,[Default]), UsedName(isInstanceOf,[Default]), UsedName(aroundReceive,[Default]), UsedName(self,[Implicit]), UsedName(synchronized,[Default]), UsedName(postStop,[Default]), UsedName(hashCode,[Default]), UsedName(aroundPostRestart,[Default]), UsedName(examples;ZSChain;HLocalInterface;init;,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(##,[Default]), UsedName(getClass,[Default]), UsedName(clone,[Default]), UsedName(logger,[Default]), UsedName(sender,[Default]), UsedName(supervisorStrategy,[Default]), UsedName(Receive,[Default]), UsedName(asInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(receive,[Default]), UsedName(context,[Implicit]), UsedName(finalize,[Default]), UsedName(log,[Default]), UsedName(!=,[Default]), UsedName(aroundPostStop,[Default]), UsedName(wait,[Default]), UsedName(aroundPreRestart,[Default]), UsedName(preRestart,[Default]), UsedName(aroundPreStart,[Default]), UsedName(unhandled,[Default]))) invalidates 1 classes due to The examples.ZSChain.HLocalInterface has the following implicit definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(self,[Implicit]), UsedName(context,[Implicit]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(examples.ZSChain.HLocalInterface)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from examples.ZSChain.mining.PowMinerRef...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: examples.ZSChain.mining.PowMinerRef[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(examples.ZSChain.mining.PowMinerRef)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of examples.ZSChain.HybridApp: Set(UsedName(apply,[Default]), UsedName(PowMinerRef,[Default]), UsedName(props,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(examples.ZSChain.mining.PowMinerRef,ModifiedNames(changes = UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(notifyAll,[Default]), UsedName(isInstanceOf,[Default]), UsedName(apply,[Default]), UsedName(synchronized,[Default]), UsedName(hashCode,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(PowMinerRef,[Default]), UsedName(##,[Default]), UsedName(getClass,[Default]), UsedName(clone,[Default]), UsedName(asInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(props,[Default]), UsedName(finalize,[Default]), UsedName(!=,[Default]), UsedName(wait,[Default]))) invalidates 2 classes due to The examples.ZSChain.mining.PowMinerRef has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(notifyAll,[Default]), UsedName(isInstanceOf,[Default]), UsedName(apply,[Default]), UsedName(synchronized,[Default]), UsedName(hashCode,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(PowMinerRef,[Default]), UsedName(##,[Default]), UsedName(getClass,[Default]), UsedName(clone,[Default]), UsedName(asInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(props,[Default]), UsedName(finalize,[Default]), UsedName(!=,[Default]), UsedName(wait,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(examples.ZSChain.mining.PowMinerRef)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(examples.ZSChain.HybridApp)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from examples.hybrid.validation.ParentBlockValidator...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: examples.hybrid.validation.ParentBlockValidator[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(examples.hybrid.validation.ParentBlockValidator)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(examples.hybrid.validation.ParentBlockValidator,ModifiedNames(changes = UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(notifyAll,[Default]), UsedName($init$,[Default]), UsedName(isInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(hashCode,[Default]), UsedName(ParentBlockValidator,[Default]), UsedName(encoder,[Implicit]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(examples;hybrid;validation;ParentBlockValidator;init;,[Default]), UsedName(##,[Default]), UsedName(getClass,[Default]), UsedName(clone,[Default]), UsedName(validate,[Default]), UsedName(asInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(finalize,[Default]), UsedName(!=,[Default]), UsedName(wait,[Default]))) invalidates 1 classes due to The examples.hybrid.validation.ParentBlockValidator has the following implicit definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(encoder,[Implicit]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(examples.hybrid.validation.ParentBlockValidator)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from examples.hybrid.mining.PowMiner.ReceivableMessages.PowMiningInfo...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: examples.hybrid.mining.PowMiner.ReceivableMessages.PowMiningInfo[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(examples.hybrid.mining.PowMiner.ReceivableMessages.PowMiningInfo)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(examples.hybrid.mining.PowMiner.ReceivableMessages.PowMiningInfo,ModifiedNames(changes = UsedName(powDifficulty,[Default]), UsedName(copy$default$2,[Default]), UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(notifyAll,[Default]), UsedName(productElement,[Default]), UsedName($init$,[Default]), UsedName(isInstanceOf,[Default]), UsedName(apply,[Default]), UsedName(synchronized,[Default]), UsedName(productPrefix,[Default]), UsedName(hashCode,[Default]), UsedName(copy$default$4,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(copy$default$3,[Default]), UsedName(toString,[Default]), UsedName(copy$default$1,[Default]), UsedName(##,[Default]), UsedName(getClass,[Default]), UsedName(pubkey,[Default]), UsedName(clone,[Default]), UsedName(unapply,[Default]), UsedName(asInstanceOf,[Default]), UsedName(bestPowBlock,[Default]), UsedName(equals,[Default]), UsedName(productArity,[Default]), UsedName(PowMiningInfo,[Default]), UsedName(finalize,[Default]), UsedName(!=,[Default]), UsedName(tupled,[Default]), UsedName(copy$default$5,[Default]), UsedName(bestPosId,[Default]), UsedName(wait,[Default]), UsedName(examples;hybrid;mining;PowMiner;ReceivableMessages;PowMiningInfo;init;,[Default]), UsedName(productIterator,[Default]), UsedName(copy,[Default]), UsedName(canEqual,[Default]), UsedName(curried,[Default]), UsedName(pairCompleted,[Default]))) invalidates 1 classes due to The examples.hybrid.mining.PowMiner.ReceivableMessages.PowMiningInfo has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(powDifficulty,[Default]), UsedName(copy$default$2,[Default]), UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(notifyAll,[Default]), UsedName(productElement,[Default]), UsedName($init$,[Default]), UsedName(isInstanceOf,[Default]), UsedName(apply,[Default]), UsedName(synchronized,[Default]), UsedName(productPrefix,[Default]), UsedName(hashCode,[Default]), UsedName(copy$default$4,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(copy$default$3,[Default]), UsedName(toString,[Default]), UsedName(copy$default$1,[Default]), UsedName(##,[Default]), UsedName(getClass,[Default]), UsedName(pubkey,[Default]), UsedName(clone,[Default]), UsedName(unapply,[Default]), UsedName(asInstanceOf,[Default]), UsedName(bestPowBlock,[Default]), UsedName(equals,[Default]), UsedName(productArity,[Default]), UsedName(PowMiningInfo,[Default]), UsedName(finalize,[Default]), UsedName(!=,[Default]), UsedName(tupled,[Default]), UsedName(copy$default$5,[Default]), UsedName(bestPosId,[Default]), UsedName(wait,[Default]), UsedName(examples;hybrid;mining;PowMiner;ReceivableMessages;PowMiningInfo;init;,[Default]), UsedName(productIterator,[Default]), UsedName(copy,[Default]), UsedName(canEqual,[Default]), UsedName(curried,[Default]), UsedName(pairCompleted,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(examples.hybrid.mining.PowMiner.ReceivableMessages.PowMiningInfo)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from examples.ZSChain.history.HybridSyncInfo...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: examples.ZSChain.history.HybridSyncInfo[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(examples.ZSChain.history.HybridSyncInfo)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of examples.ZSChain.HybridNodeViewHolder: Set(UsedName(==,[Default]), UsedName(apply,[Default]), UsedName(HybridSyncInfo,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of examples.ZSChain.history.HybridHistory: Set(UsedName(==,[Default]), UsedName(startingPoints,[Default]), UsedName(isInstanceOf,[Default]), UsedName(apply,[Default]), UsedName(HybridSyncInfo,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(lastPowBlockIds,[Default]), UsedName(asInstanceOf,[Default]), UsedName(lastPosBlockId,[Default]), UsedName(MaxLastPowBlocks,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of examples.ZSChain.HybridApp: Set(UsedName(apply,[Default]), UsedName(HybridSyncInfo,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(examples.ZSChain.history.HybridSyncInfo,ModifiedNames(changes = UsedName(copy$default$2,[Default]), UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(notifyAll,[Default]), UsedName(startingPoints,[Default]), UsedName(productElement,[Default]), UsedName($init$,[Default]), UsedName(isInstanceOf,[Default]), UsedName(apply,[Default]), UsedName(examples;ZSChain;history;HybridSyncInfo;init;,[Default]), UsedName(synchronized,[Default]), UsedName(productPrefix,[Default]), UsedName(HybridSyncInfo,[Default]), UsedName(hashCode,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(copy$default$3,[Default]), UsedName(toString,[Default]), UsedName(copy$default$1,[Default]), UsedName(##,[Default]), UsedName(getClass,[Default]), UsedName(serializer,[Default]), UsedName(lastPowBlockIds,[Default]), UsedName(clone,[Default]), UsedName(unapply,[Default]), UsedName(asInstanceOf,[Default]), UsedName(bytes,[Default]), UsedName(equals,[Default]), UsedName(productArity,[Default]), UsedName(lastPosBlockId,[Default]), UsedName(finalize,[Default]), UsedName(!=,[Default]), UsedName(answer,[Default]), UsedName(M,[Default]), UsedName(wait,[Default]), UsedName(productIterator,[Default]), UsedName(copy,[Default]), UsedName(canEqual,[Default]), UsedName(MaxLastPowBlocks,[Default]))) invalidates 4 classes due to The examples.ZSChain.history.HybridSyncInfo has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(copy$default$2,[Default]), UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(notifyAll,[Default]), UsedName(startingPoints,[Default]), UsedName(productElement,[Default]), UsedName($init$,[Default]), UsedName(isInstanceOf,[Default]), UsedName(apply,[Default]), UsedName(examples;ZSChain;history;HybridSyncInfo;init;,[Default]), UsedName(synchronized,[Default]), UsedName(productPrefix,[Default]), UsedName(HybridSyncInfo,[Default]), UsedName(hashCode,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(copy$default$3,[Default]), UsedName(toString,[Default]), UsedName(copy$default$1,[Default]), UsedName(##,[Default]), UsedName(getClass,[Default]), UsedName(serializer,[Default]), UsedName(lastPowBlockIds,[Default]), UsedName(clone,[Default]), UsedName(unapply,[Default]), UsedName(asInstanceOf,[Default]), UsedName(bytes,[Default]), UsedName(equals,[Default]), UsedName(productArity,[Default]), UsedName(lastPosBlockId,[Default]), UsedName(finalize,[Default]), UsedName(!=,[Default]), UsedName(answer,[Default]), UsedName(M,[Default]), UsedName(wait,[Default]), UsedName(productIterator,[Default]), UsedName(copy,[Default]), UsedName(canEqual,[Default]), UsedName(MaxLastPowBlocks,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(examples.ZSChain.history.HybridSyncInfo)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(examples.ZSChain.HybridNodeViewHolder, examples.ZSChain.history.HybridHistory, examples.ZSChain.HybridApp)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from examples.hybrid.blocks.PosBlockSerializer...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: examples.hybrid.blocks.PosBlockSerializer[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(examples.hybrid.blocks.PosBlockSerializer)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(examples.hybrid.blocks.PosBlockSerializer,ModifiedNames(changes = UsedName(toBytes,[Default]), UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(parse,[Default]), UsedName(notifyAll,[Default]), UsedName($init$,[Default]), UsedName(isInstanceOf,[Default]), UsedName(parseBytes,[Default]), UsedName(synchronized,[Default]), UsedName(parseByteString,[Default]), UsedName(hashCode,[Default]), UsedName(parseBytesTry,[Default]), UsedName(encoder,[Implicit]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(PosBlockSerializer,[Default]), UsedName(toString,[Default]), UsedName(parseByteStringTry,[Default]), UsedName(##,[Default]), UsedName(getClass,[Default]), UsedName(clone,[Default]), UsedName(asInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(serialize,[Default]), UsedName(finalize,[Default]), UsedName(!=,[Default]), UsedName(parseTry,[Default]), UsedName(wait,[Default]), UsedName(toByteString,[Default]))) invalidates 1 classes due to The examples.hybrid.blocks.PosBlockSerializer has the following implicit definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(encoder,[Implicit]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(examples.hybrid.blocks.PosBlockSerializer)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from examples.hybrid.mining.PowMiner.ReceivableMessages.StartMining...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: examples.hybrid.mining.PowMiner.ReceivableMessages.StartMining[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(examples.hybrid.mining.PowMiner.ReceivableMessages.StartMining)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(examples.hybrid.mining.PowMiner.ReceivableMessages.StartMining,ModifiedNames(changes = UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(notifyAll,[Default]), UsedName(productElement,[Default]), UsedName($init$,[Default]), UsedName(isInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(productPrefix,[Default]), UsedName(hashCode,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(StartMining,[Default]), UsedName(##,[Default]), UsedName(getClass,[Default]), UsedName(clone,[Default]), UsedName(asInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(productArity,[Default]), UsedName(finalize,[Default]), UsedName(!=,[Default]), UsedName(wait,[Default]), UsedName(productIterator,[Default]), UsedName(canEqual,[Default]))) invalidates 1 classes due to The examples.hybrid.mining.PowMiner.ReceivableMessages.StartMining has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(notifyAll,[Default]), UsedName(productElement,[Default]), UsedName($init$,[Default]), UsedName(isInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(productPrefix,[Default]), UsedName(hashCode,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(StartMining,[Default]), UsedName(##,[Default]), UsedName(getClass,[Default]), UsedName(clone,[Default]), UsedName(asInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(productArity,[Default]), UsedName(finalize,[Default]), UsedName(!=,[Default]), UsedName(wait,[Default]), UsedName(productIterator,[Default]), UsedName(canEqual,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(examples.hybrid.mining.PowMiner.ReceivableMessages.StartMining)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from examples.ZSChain.api.http.WalletApiRoute...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: examples.ZSChain.api.http.WalletApiRoute[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(examples.ZSChain.api.http.WalletApiRoute)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following member ref dependencies of examples.ZSChain.api.http.WalletApiRoute are invalidated:[0m
[0m[[0m[0mdebug[0m] [0m[0m	examples.ZSChain.HybridApp[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(examples.ZSChain.api.http.WalletApiRoute,ModifiedNames(changes = UsedName(defaultUrlEncodedFormDataUnmarshaller,[Implicit]), UsedName(as,[Default]), UsedName(withAuth,[Default]), UsedName(path,[Default]), UsedName(authenticateBasicPFAsync,[Default]), UsedName(copy$default$2,[Default]), UsedName(onCompleteWithBreaker,[Default]), UsedName(extractLog,[Default]), UsedName(extractExecutionContext,[Default]), UsedName(multipartUnmarshaller$default$7,[Default]), UsedName(extract,[Default]), UsedName(handleSync,[Default]), UsedName(withSizeLimit,[Default]), UsedName(formFieldMultiMap,[Default]), UsedName(urlEncodedFormDataUnmarshaller,[Default]), UsedName(Authenticator,[Default]), UsedName(separateOnSlashes,[Default]), UsedName(charArrayUnmarshaller,[Implicit]), UsedName(requestEncodedWith,[Default]), UsedName(_symbol2NR,[Implicit]), UsedName(textract,[Default]), UsedName(marshaller,[Implicit]), UsedName(host,[Default]), UsedName(withRangeSupport,[Default]), UsedName(pathPrefixTest,[Default]), UsedName(Neutral,[Default]), UsedName(jsonMarshaller$default$1,[Default]), UsedName(==,[Default]), UsedName(get,[Default]), UsedName(extractUpgradeToWebSocket,[Default]), UsedName(parameterMultiMap,[Default]), UsedName(_segmentStringToPathMatcher,[Implicit]), UsedName(encodeResponse,[Default]), UsedName(addCorsHeaders,[Default]), UsedName(mapRequest,[Default]), UsedName(eq,[Default]), UsedName(parameter,[Default]), UsedName(multipartGeneralUnmarshaller$default$3,[Default]), UsedName(authenticateOAuth2,[Default]), UsedName(complete,[Default]), UsedName(instanceOf,[Default]), UsedName(requestEntityEmpty,[Default]), UsedName(redirect,[Default]), UsedName(withMaterializer,[Default]), UsedName(put,[Default]), UsedName(withSettings,[Default]), UsedName(logRequest,[Default]), UsedName(notifyAll,[Default]), UsedName(JavaUUID,[Default]), UsedName(handleWebSocketMessagesForOptionalProtocol,[Default]), UsedName(multipartFormDataUnmarshaller$default$2,[Default]), UsedName(productElement,[Default]), UsedName(mapRejections,[Default]), UsedName($init$,[Default]), UsedName(isInstanceOf,[Default]), UsedName(mediaTypes,[Default]), UsedName(withPrecompressedMediaTypeSupport,[Default]), UsedName(extractCredentials,[Default]), UsedName(requestEntityPresent,[Default]), UsedName(apply,[Default]), UsedName(mapUnmatchedPath,[Default]), UsedName(fileUploadAll,[Default]), UsedName(rejectEmptyResponse,[Default]), UsedName(overrideMethodWithParameter,[Default]), UsedName(concat,[Default]), UsedName(encodeResponseWith,[Default]), UsedName(timeout,[Implicit]), UsedName(route,[Default]), UsedName(unmarshallerContentTypes,[Default]), UsedName(multipartUnmarshaller,[Default]), UsedName(balances,[Default]), UsedName(extractOfferedWsProtocols,[Default]), UsedName(mapRequestContext,[Default]), UsedName(provide,[Default]), UsedName(failWith,[Default]), UsedName(headerValue,[Default]), UsedName(multipartUnmarshaller$default$8,[Default]), UsedName(corsHandler,[Default]), UsedName(completeOrRecoverWith,[Default]), UsedName(withRequestTimeout,[Default]), UsedName(authenticateOAuth2PF,[Default]), UsedName(synchronized,[Default]), UsedName(Segment,[Default]), UsedName(multipartGeneralUnmarshaller$default$2,[Default]), UsedName(RequestToSourceUnmarshaller,[Default]), UsedName(patch,[Default]), UsedName(deleteCookie$default$2,[Default]), UsedName(optionalHeaderValueByType,[Default]), UsedName(productPrefix,[Default]), UsedName(handle,[Default]), UsedName(extractRequestContext,[Default]), UsedName(authorize,[Default]), UsedName(cookie,[Default]), UsedName(handleWebSocketMessages,[Default]), UsedName(post,[Default]), UsedName(extractMethod,[Default]), UsedName(multipartFormDataUnmarshaller,[Implicit]), UsedName(hashCode,[Default]), UsedName(extractScheme,[Default]), UsedName(mapResponseEntity,[Default]), UsedName(headerValueByType,[Default]), UsedName(extractClientIP,[Default]), UsedName(extractHost,[Default]), UsedName(getFromBrowseableDirectory,[Default]), UsedName(extractStrictEntity,[Default]), UsedName(optionalHeaderValueByName,[Default]), UsedName(withoutSizeLimit,[Default]), UsedName(optionalHeaderValuePF,[Default]), UsedName(defaultMultipartGeneralUnmarshaller$default$1,[Default]), UsedName(optionalAttribute,[Default]), UsedName(onComplete,[Default]), UsedName(authenticateOAuth2Async,[Default]), UsedName(unmarshaller,[Implicit]), UsedName(extractUri,[Default]), UsedName(mapSettings,[Default]), UsedName(RemainingPath,[Default]), UsedName(authorizeAsync,[Default]), UsedName(pathSingleSlash,[Default]), UsedName(settings,[Default]), UsedName(headerValuePF,[Default]), UsedName(defaultMultipartByteRangesUnmarshaller$default$2,[Default]), UsedName(HexLongNumber,[Default]), UsedName(DefaultFee,[Default]), UsedName(encoder,[Implicit]), UsedName(selectPreferredLanguage,[Default]), UsedName(respondWithDefaultHeaders,[Default]), UsedName(notify,[Default]), UsedName(_defaultClassLoader,[Default]), UsedName(ne,[Default]), UsedName(getFromResourceDirectory,[Default]), UsedName(pathSuffix,[Default]), UsedName(multipartByteRangesUnmarshaller$default$2,[Default]), UsedName(pathEnd,[Default]), UsedName(mapResponseHeaders,[Default]), UsedName(parameterSeq,[Default]), UsedName(toString,[Default]), UsedName(tprovide,[Default]), UsedName(defaultMultipartByteRangesUnmarshaller$default$1,[Default]), UsedName(mapRouteResult,[Default]), UsedName(formFieldMap,[Default]), UsedName(reject,[Default]), UsedName(recoverRejectionsWith,[Default]), UsedName(_enhanceRouteWithConcatenation,[Implicit]), UsedName(extractParserSettings,[Default]), UsedName(handleWith,[Default]), UsedName(AuthenticationResult,[Default]), UsedName(getFromBrowseableDirectories,[Default]), UsedName(delete,[Default]), UsedName(AsyncAuthenticatorPF,[Default]), UsedName(askActor,[Default]), UsedName(deleteCookie,[Default]), UsedName(entity,[Default]), UsedName(head,[Default]), UsedName(extractRequest,[Default]), UsedName(scheme,[Default]), UsedName(copy$default$1,[Default]), UsedName(##,[Default]), UsedName(toStrictEntity,[Default]), UsedName(withoutRequestTimeout,[Default]), UsedName(mapRouteResultPF,[Default]), UsedName(getFromResourceDirectory$default$2,[Default]), UsedName(getFromResource$default$3,[Default]), UsedName(listDirectoryContents,[Default]), UsedName(getClass,[Default]), UsedName(clone,[Default]), UsedName(HexIntNumber,[Default]), UsedName(not,[Default]), UsedName(recoverRejections,[Default]), UsedName(redirectToNoTrailingSlashIfPresent,[Default]), UsedName(handleExceptions,[Default]), UsedName(validate,[Default]), UsedName(logger,[Default]), UsedName(Slash,[Default]), UsedName(method,[Default]), UsedName(withLog,[Default]), UsedName(Remaining,[Default]), UsedName(headerValueByName,[Default]), UsedName(respondWithHeaders,[Default]), UsedName(PathEnd,[Default]), UsedName(formFields,[Default]), UsedName(extractRequestEntity,[Default]), UsedName(extractSettings,[Default]), UsedName(unapply,[Default]), UsedName(_string2NR,[Implicit]), UsedName(pathPrefix,[Default]), UsedName(asInstanceOf,[Default]), UsedName(authenticateOrRejectWithChallenge,[Default]), UsedName(responseEncodingAccepted,[Default]), UsedName(nodeViewHolderRef,[Default]), UsedName(authenticateBasicPF,[Default]), UsedName(extractWebSocketUpgrade,[Default]), UsedName(cancelRejection,[Default]), UsedName(logRequestResult,[Default]), UsedName(getFromResource,[Default]), UsedName(fileUpload,[Default]), UsedName(AuthenticatorPF,[Default]), UsedName(defaultMultipartByteRangesUnmarshaller,[Implicit]), UsedName(mapRouteResultWithPF,[Default]), UsedName(equals,[Default]), UsedName(multipartFormDataUnmarshaller$default$1,[Default]), UsedName(extractMatchedPath,[Default]), UsedName(completeWith,[Default]), UsedName(apiKeyHeaderName,[Default]), UsedName(extractRequestTimeout,[Default]), UsedName(logResult,[Default]), UsedName(productArity,[Default]), UsedName(AsyncAuthenticator,[Default]), UsedName(handleWebSocketMessagesForProtocol,[Default]), UsedName(rawPathPrefixTest,[Default]), UsedName(extractMaterializer,[Default]), UsedName(onSuccess,[Default]), UsedName(withNodeView,[Default]), UsedName(cancelRejections,[Default]), UsedName(parameterMap,[Default]), UsedName(context,[Implicit]), UsedName(formField,[Default]), UsedName(jsonMarshaller,[Implicit]), UsedName(ignoreTrailingSlash,[Default]), UsedName(getFromDirectory,[Default]), UsedName(rawPathPrefix,[Default]), UsedName(respondWithDefaultHeader,[Default]), UsedName(optionalHeaderValue,[Default]), UsedName(decodeRequest,[Default]), UsedName(finalize,[Default]), UsedName(storeUploadedFiles,[Default]), UsedName(log,[Default]), UsedName(!=,[Default]), UsedName(parameters,[Default]), UsedName(_regex2PathMatcher,[Implicit]), UsedName(asSourceOf,[Default]), UsedName(multipartByteRangesUnmarshaller$default$3,[Default]), UsedName(setCookie,[Default]), UsedName(multipartGeneralUnmarshaller,[Default]), UsedName(decodeRequestWith,[Default]), UsedName(withExecutionContext,[Default]), UsedName(byteArrayUnmarshaller,[Implicit]), UsedName(defaultMultipartGeneralUnmarshaller,[Implicit]), UsedName(formFieldSeq,[Default]), UsedName(_stringExtractionPair2PathMatcher,[Implicit]), UsedName(attribute,[Default]), UsedName(deleteCookie$default$3,[Default]), UsedName(marshaller$default$2,[Default]), UsedName(options,[Default]), UsedName(redirectToTrailingSlashIfMissing,[Default]), UsedName(authenticateOAuth2PFAsync,[Default]), UsedName(pathSuffixTest,[Default]), UsedName(stringUnmarshaller,[Implicit]), UsedName(checkSameOrigin,[Default]), UsedName(wait,[Default]), UsedName(authenticateBasicAsync,[Default]), UsedName(transfer,[Default]), UsedName(_valueMap2PathMatcher,[Implicit]), UsedName(pathEndOrSingleSlash,[Default]), UsedName(productIterator,[Default]), UsedName(storeUploadedFile,[Default]), UsedName(getFromFile,[Default]), UsedName(printer,[Implicit]), UsedName(Segments,[Default]), UsedName(viewAsync,[Default]), UsedName(conditional,[Default]), UsedName(mapRouteResultWith,[Default]), UsedName(extractActorSystem,[Default]), UsedName(LongNumber,[Default]), UsedName(extractUnmatchedPath,[Default]), UsedName(extractDataBytes,[Default]), UsedName(DoubleNumber,[Default]), UsedName(handleRejections,[Default]), UsedName(mapResponse,[Default]), UsedName(nothingMatcher,[Default]), UsedName(authenticateBasic,[Default]), UsedName(copy,[Default]), UsedName(mapRouteResultFuture,[Default]), UsedName(WalletApiRoute,[Default]), UsedName(IntNumber,[Default]), UsedName(examples;ZSChain;api;http;WalletApiRoute;init;,[Default]), UsedName(canEqual,[Default]), UsedName(respondWithHeader,[Default]), UsedName(mapInnerRoute,[Default]), UsedName(_stringNameOptionReceptacle2PathMatcher,[Implicit]), UsedName(NumberMatcher,[Default]), UsedName(pass,[Default]), UsedName(optionalCookie,[Default]), UsedName(multipartByteRangesUnmarshaller,[Default]), UsedName(defaultMultipartGeneralUnmarshaller$default$2,[Default]), UsedName(byteStringUnmarshaller,[Implicit]), UsedName(jsonUnmarshaller,[Implicit]), UsedName(withRequestTimeoutResponse,[Default]))) invalidates 2 classes due to The examples.ZSChain.api.http.WalletApiRoute has the following implicit definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(defaultUrlEncodedFormDataUnmarshaller,[Implicit]), UsedName(charArrayUnmarshaller,[Implicit]), UsedName(_symbol2NR,[Implicit]), UsedName(marshaller,[Implicit]), UsedName(_segmentStringToPathMatcher,[Implicit]), UsedName(timeout,[Implicit]), UsedName(multipartFormDataUnmarshaller,[Implicit]), UsedName(unmarshaller,[Implicit]), UsedName(encoder,[Implicit]), UsedName(_enhanceRouteWithConcatenation,[Implicit]), UsedName(_string2NR,[Implicit]), UsedName(defaultMultipartByteRangesUnmarshaller,[Implicit]), UsedName(context,[Implicit]), UsedName(jsonMarshaller,[Implicit]), UsedName(_regex2PathMatcher,[Implicit]), UsedName(byteArrayUnmarshaller,[Implicit]), UsedName(defaultMultipartGeneralUnmarshaller,[Implicit]), UsedName(_stringExtractionPair2PathMatcher,[Implicit]), UsedName(stringUnmarshaller,[Implicit]), UsedName(_valueMap2PathMatcher,[Implicit]), UsedName(printer,[Implicit]), UsedName(_stringNameOptionReceptacle2PathMatcher,[Implicit]), UsedName(byteStringUnmarshaller,[Implicit]), UsedName(jsonUnmarshaller,[Implicit]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(examples.ZSChain.api.http.WalletApiRoute)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(examples.ZSChain.HybridApp)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from examples.ZSChain.mining.WalletSettings...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: examples.ZSChain.mining.WalletSettings[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(examples.ZSChain.mining.WalletSettings)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of examples.ZSChain.HybridNodeViewHolder: Set(UsedName(==,[Default]), UsedName(apply,[Default]), UsedName(WalletSettings,[Default]), UsedName(seed,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of examples.ZSChain.wallet.HBoxWallet: Set(UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(isInstanceOf,[Default]), UsedName(apply,[Default]), UsedName(WalletSettings,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(seed,[Default]), UsedName(asInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(walletDir,[Default]), UsedName(canEqual,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(examples.ZSChain.mining.WalletSettings,ModifiedNames(changes = UsedName(copy$default$2,[Default]), UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(notifyAll,[Default]), UsedName(productElement,[Default]), UsedName($init$,[Default]), UsedName(isInstanceOf,[Default]), UsedName(apply,[Default]), UsedName(WalletSettings,[Default]), UsedName(synchronized,[Default]), UsedName(productPrefix,[Default]), UsedName(hashCode,[Default]), UsedName(password,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(copy$default$3,[Default]), UsedName(toString,[Default]), UsedName(copy$default$1,[Default]), UsedName(##,[Default]), UsedName(getClass,[Default]), UsedName(clone,[Default]), UsedName(seed,[Default]), UsedName(unapply,[Default]), UsedName(asInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(productArity,[Default]), UsedName(finalize,[Default]), UsedName(!=,[Default]), UsedName(tupled,[Default]), UsedName(wait,[Default]), UsedName(productIterator,[Default]), UsedName(examples;ZSChain;mining;WalletSettings;init;,[Default]), UsedName(walletDir,[Default]), UsedName(copy,[Default]), UsedName(canEqual,[Default]), UsedName(curried,[Default]))) invalidates 3 classes due to The examples.ZSChain.mining.WalletSettings has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(copy$default$2,[Default]), UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(notifyAll,[Default]), UsedName(productElement,[Default]), UsedName($init$,[Default]), UsedName(isInstanceOf,[Default]), UsedName(apply,[Default]), UsedName(WalletSettings,[Default]), UsedName(synchronized,[Default]), UsedName(productPrefix,[Default]), UsedName(hashCode,[Default]), UsedName(password,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(copy$default$3,[Default]), UsedName(toString,[Default]), UsedName(copy$default$1,[Default]), UsedName(##,[Default]), UsedName(getClass,[Default]), UsedName(clone,[Default]), UsedName(seed,[Default]), UsedName(unapply,[Default]), UsedName(asInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(productArity,[Default]), UsedName(finalize,[Default]), UsedName(!=,[Default]), UsedName(tupled,[Default]), UsedName(wait,[Default]), UsedName(productIterator,[Default]), UsedName(examples;ZSChain;mining;WalletSettings;init;,[Default]), UsedName(walletDir,[Default]), UsedName(copy,[Default]), UsedName(canEqual,[Default]), UsedName(curried,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(examples.ZSChain.mining.WalletSettings)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(examples.ZSChain.HybridNodeViewHolder, examples.ZSChain.wallet.HBoxWallet)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from examples.ZSChain.mining.PowMiner.ReceivableMessages...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: examples.ZSChain.mining.PowMiner.ReceivableMessages[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(examples.ZSChain.mining.PowMiner.ReceivableMessages)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of examples.ZSChain.HLocalInterface: Set(UsedName(==,[Default]), UsedName(StopMining,[Default]), UsedName(isInstanceOf,[Default]), UsedName(StartMining,[Default]), UsedName(asInstanceOf,[Default]), UsedName(ReceivableMessages,[Default]), UsedName(MineBlock,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(examples.ZSChain.mining.PowMiner.ReceivableMessages,ModifiedNames(changes = UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(StopMining,[Default]), UsedName(notifyAll,[Default]), UsedName(isInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(hashCode,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(StartMining,[Default]), UsedName(##,[Default]), UsedName(getClass,[Default]), UsedName(clone,[Default]), UsedName(asInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(PowMiningInfo,[Default]), UsedName(finalize,[Default]), UsedName(!=,[Default]), UsedName(ReceivableMessages,[Default]), UsedName(wait,[Default]), UsedName(MineBlock,[Default]))) invalidates 2 classes due to The examples.ZSChain.mining.PowMiner.ReceivableMessages has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(StopMining,[Default]), UsedName(notifyAll,[Default]), UsedName(isInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(hashCode,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(StartMining,[Default]), UsedName(##,[Default]), UsedName(getClass,[Default]), UsedName(clone,[Default]), UsedName(asInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(PowMiningInfo,[Default]), UsedName(finalize,[Default]), UsedName(!=,[Default]), UsedName(ReceivableMessages,[Default]), UsedName(wait,[Default]), UsedName(MineBlock,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(examples.ZSChain.mining.PowMiner.ReceivableMessages)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(examples.ZSChain.HLocalInterface)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from examples.hybrid.util.FileFunctions...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: examples.hybrid.util.FileFunctions[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(examples.hybrid.util.FileFunctions)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(examples.hybrid.util.FileFunctions,ModifiedNames(changes = UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(notifyAll,[Default]), UsedName(isInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(hashCode,[Default]), UsedName(FileFunctions,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(##,[Default]), UsedName(getClass,[Default]), UsedName(clone,[Default]), UsedName(asInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(finalize,[Default]), UsedName(!=,[Default]), UsedName(append,[Default]), UsedName(wait,[Default]))) invalidates 1 classes due to The examples.hybrid.util.FileFunctions has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(notifyAll,[Default]), UsedName(isInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(hashCode,[Default]), UsedName(FileFunctions,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(##,[Default]), UsedName(getClass,[Default]), UsedName(clone,[Default]), UsedName(asInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(finalize,[Default]), UsedName(!=,[Default]), UsedName(append,[Default]), UsedName(wait,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(examples.hybrid.util.FileFunctions)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from examples.hybrid.HLocalInterfaceRef...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: examples.hybrid.HLocalInterfaceRef[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(examples.hybrid.HLocalInterfaceRef)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(examples.hybrid.HLocalInterfaceRef,ModifiedNames(changes = UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(notifyAll,[Default]), UsedName(isInstanceOf,[Default]), UsedName(apply,[Default]), UsedName(synchronized,[Default]), UsedName(hashCode,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(##,[Default]), UsedName(getClass,[Default]), UsedName(clone,[Default]), UsedName(asInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(props,[Default]), UsedName(finalize,[Default]), UsedName(!=,[Default]), UsedName(wait,[Default]), UsedName(HLocalInterfaceRef,[Default]))) invalidates 1 classes due to The examples.hybrid.HLocalInterfaceRef has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(notifyAll,[Default]), UsedName(isInstanceOf,[Default]), UsedName(apply,[Default]), UsedName(synchronized,[Default]), UsedName(hashCode,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(##,[Default]), UsedName(getClass,[Default]), UsedName(clone,[Default]), UsedName(asInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(props,[Default]), UsedName(finalize,[Default]), UsedName(!=,[Default]), UsedName(wait,[Default]), UsedName(HLocalInterfaceRef,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(examples.hybrid.HLocalInterfaceRef)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from examples.hybrid.util.CancellableStatus...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: examples.hybrid.util.CancellableStatus[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(examples.hybrid.util.CancellableStatus)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(examples.hybrid.util.CancellableStatus,ModifiedNames(changes = UsedName(nonCancelled,[Default]), UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(notifyAll,[Default]), UsedName($init$,[Default]), UsedName(isInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(hashCode,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(##,[Default]), UsedName(getClass,[Default]), UsedName(clone,[Default]), UsedName(asInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(finalize,[Default]), UsedName(!=,[Default]), UsedName(wait,[Default]), UsedName(CancellableStatus,[Default]), UsedName(isCancelled,[Default]))) invalidates 1 classes due to The examples.hybrid.util.CancellableStatus has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(nonCancelled,[Default]), UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(notifyAll,[Default]), UsedName($init$,[Default]), UsedName(isInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(hashCode,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(##,[Default]), UsedName(getClass,[Default]), UsedName(clone,[Default]), UsedName(asInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(finalize,[Default]), UsedName(!=,[Default]), UsedName(wait,[Default]), UsedName(CancellableStatus,[Default]), UsedName(isCancelled,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(examples.hybrid.util.CancellableStatus)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from examples.hybrid.wallet.SimpleBoxTransactionGenerator...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: examples.hybrid.wallet.SimpleBoxTransactionGenerator[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(examples.hybrid.wallet.SimpleBoxTransactionGenerator)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(examples.hybrid.wallet.SimpleBoxTransactionGenerator,ModifiedNames(changes = UsedName(generate,[Default]), UsedName(postRestart,[Default]), UsedName(==,[Default]), UsedName(preStart,[Default]), UsedName(eq,[Default]), UsedName(notifyAll,[Default]), UsedName($init$,[Default]), UsedName(isInstanceOf,[Default]), UsedName(aroundReceive,[Default]), UsedName(self,[Implicit]), UsedName(SimpleBoxTransactionGenerator,[Default]), UsedName(synchronized,[Default]), UsedName(postStop,[Default]), UsedName(hashCode,[Default]), UsedName(aroundPostRestart,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(##,[Default]), UsedName(getClass,[Default]), UsedName(clone,[Default]), UsedName(logger,[Default]), UsedName(sender,[Default]), UsedName(supervisorStrategy,[Default]), UsedName(Receive,[Default]), UsedName(asInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(receive,[Default]), UsedName(context,[Implicit]), UsedName(finalize,[Default]), UsedName(log,[Default]), UsedName(!=,[Default]), UsedName(examples;hybrid;wallet;SimpleBoxTransactionGenerator;init;,[Default]), UsedName(ReceivableMessages,[Default]), UsedName(aroundPostStop,[Default]), UsedName(wait,[Default]), UsedName(aroundPreRestart,[Default]), UsedName(preRestart,[Default]), UsedName(aroundPreStart,[Default]), UsedName(unhandled,[Default]))) invalidates 1 classes due to The examples.hybrid.wallet.SimpleBoxTransactionGenerator has the following implicit definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(self,[Implicit]), UsedName(context,[Implicit]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(examples.hybrid.wallet.SimpleBoxTransactionGenerator)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from examples.ZSChain.wallet.SimpleBoxTransactionGenerator.ReceivableMessages.GeneratorInfo...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: examples.ZSChain.wallet.SimpleBoxTransactionGenerator.ReceivableMessages.GeneratorInfo[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(examples.ZSChain.wallet.SimpleBoxTransactionGenerator.ReceivableMessages.GeneratorInfo)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(examples.ZSChain.wallet.SimpleBoxTransactionGenerator.ReceivableMessages.GeneratorInfo,ModifiedNames(changes = UsedName(compose,[Default]), UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(andThen,[Default]), UsedName(notifyAll,[Default]), UsedName(productElement,[Default]), UsedName($init$,[Default]), UsedName(isInstanceOf,[Default]), UsedName(apply,[Default]), UsedName(synchronized,[Default]), UsedName(productPrefix,[Default]), UsedName(hashCode,[Default]), UsedName(examples;ZSChain;wallet;SimpleBoxTransactionGenerator;ReceivableMessages;GeneratorInfo;init;,[Default]), UsedName(GeneratorInfo,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(tx,[Default]), UsedName(copy$default$1,[Default]), UsedName(##,[Default]), UsedName(getClass,[Default]), UsedName(clone,[Default]), UsedName(unapply,[Default]), UsedName(asInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(productArity,[Default]), UsedName(finalize,[Default]), UsedName(!=,[Default]), UsedName(wait,[Default]), UsedName(productIterator,[Default]), UsedName(copy,[Default]), UsedName(canEqual,[Default]))) invalidates 1 classes due to The examples.ZSChain.wallet.SimpleBoxTransactionGenerator.ReceivableMessages.GeneratorInfo has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(compose,[Default]), UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(andThen,[Default]), UsedName(notifyAll,[Default]), UsedName(productElement,[Default]), UsedName($init$,[Default]), UsedName(isInstanceOf,[Default]), UsedName(apply,[Default]), UsedName(synchronized,[Default]), UsedName(productPrefix,[Default]), UsedName(hashCode,[Default]), UsedName(examples;ZSChain;wallet;SimpleBoxTransactionGenerator;ReceivableMessages;GeneratorInfo;init;,[Default]), UsedName(GeneratorInfo,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(tx,[Default]), UsedName(copy$default$1,[Default]), UsedName(##,[Default]), UsedName(getClass,[Default]), UsedName(clone,[Default]), UsedName(unapply,[Default]), UsedName(asInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(productArity,[Default]), UsedName(finalize,[Default]), UsedName(!=,[Default]), UsedName(wait,[Default]), UsedName(productIterator,[Default]), UsedName(copy,[Default]), UsedName(canEqual,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(examples.ZSChain.wallet.SimpleBoxTransactionGenerator.ReceivableMessages.GeneratorInfo)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from examples.hybrid.blocks.HybridBlock...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: examples.hybrid.blocks.HybridBlock[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(examples.hybrid.blocks.HybridBlock)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(examples.hybrid.blocks.HybridBlock,ModifiedNames(changes = UsedName(version,[Default]), UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(id,[Default]), UsedName(transactions,[Default]), UsedName(notifyAll,[Default]), UsedName($init$,[Default]), UsedName(isInstanceOf,[Default]), UsedName(parentId,[Default]), UsedName(synchronized,[Default]), UsedName(hashCode,[Default]), UsedName(encoder,[Implicit]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(timestamp,[Default]), UsedName(HybridBlock,[Default]), UsedName(##,[Default]), UsedName(getClass,[Default]), UsedName(serializer,[Default]), UsedName(clone,[Default]), UsedName(modifierTypeId,[Default]), UsedName(asInstanceOf,[Default]), UsedName(bytes,[Default]), UsedName(equals,[Default]), UsedName(finalize,[Default]), UsedName(!=,[Default]), UsedName(M,[Default]), UsedName(wait,[Default]), UsedName(encodedId,[Default]))) invalidates 1 classes due to The examples.hybrid.blocks.HybridBlock has the following implicit definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(encoder,[Implicit]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(examples.hybrid.blocks.HybridBlock)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from examples.hybrid.state.HBoxStoredState...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: examples.hybrid.state.HBoxStoredState[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(examples.hybrid.state.HBoxStoredState)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(examples.hybrid.state.HBoxStoredState,ModifiedNames(changes = UsedName(semanticValidity,[Default]), UsedName(copy$default$2,[Default]), UsedName(version,[Default]), UsedName(genesisState,[Default]), UsedName(changes,[Default]), UsedName(==,[Default]), UsedName(getReader,[Default]), UsedName(eq,[Default]), UsedName(store,[Default]), UsedName(filterValid,[Default]), UsedName(notifyAll,[Default]), UsedName(productElement,[Default]), UsedName($init$,[Default]), UsedName(isInstanceOf,[Default]), UsedName(apply,[Default]), UsedName(applyModifier,[Default]), UsedName(synchronized,[Default]), UsedName(productPrefix,[Default]), UsedName(maxRollbackDepth,[Default]), UsedName(hashCode,[Default]), UsedName(encoder,[Implicit]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(examples;hybrid;state;HBoxStoredState;init;,[Default]), UsedName(readOrGenerate,[Default]), UsedName(HPMOD,[Default]), UsedName(toString,[Default]), UsedName(boxesOf,[Default]), UsedName(copy$default$1,[Default]), UsedName(##,[Default]), UsedName(rollbackTo,[Default]), UsedName(getClass,[Default]), UsedName(clone,[Default]), UsedName(validate,[Default]), UsedName(logger,[Default]), UsedName(HBoxStoredState,[Default]), UsedName(unapply,[Default]), UsedName(asInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(productArity,[Default]), UsedName(NVCT,[Default]), UsedName(closedBox,[Default]), UsedName(finalize,[Default]), UsedName(isValid,[Default]), UsedName(log,[Default]), UsedName(!=,[Default]), UsedName(applyChanges,[Default]), UsedName(wait,[Default]), UsedName(productIterator,[Default]), UsedName(copy,[Default]), UsedName(canEqual,[Default]))) invalidates 1 classes due to The examples.hybrid.state.HBoxStoredState has the following implicit definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(encoder,[Implicit]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(examples.hybrid.state.HBoxStoredState)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from examples.hybrid.mining.PosForger.ReceivableMessages...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: examples.hybrid.mining.PosForger.ReceivableMessages[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(examples.hybrid.mining.PosForger.ReceivableMessages)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(examples.hybrid.mining.PosForger.ReceivableMessages,ModifiedNames(changes = UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(notifyAll,[Default]), UsedName(isInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(PosForgingInfo,[Default]), UsedName(hashCode,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(##,[Default]), UsedName(getClass,[Default]), UsedName(clone,[Default]), UsedName(asInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(finalize,[Default]), UsedName(!=,[Default]), UsedName(ReceivableMessages,[Default]), UsedName(StopForging,[Default]), UsedName(StartForging,[Default]), UsedName(wait,[Default]))) invalidates 1 classes due to The examples.hybrid.mining.PosForger.ReceivableMessages has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(notifyAll,[Default]), UsedName(isInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(PosForgingInfo,[Default]), UsedName(hashCode,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(##,[Default]), UsedName(getClass,[Default]), UsedName(clone,[Default]), UsedName(asInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(finalize,[Default]), UsedName(!=,[Default]), UsedName(ReceivableMessages,[Default]), UsedName(StopForging,[Default]), UsedName(StartForging,[Default]), UsedName(wait,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(examples.hybrid.mining.PosForger.ReceivableMessages)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from examples.ZSChain.validation.ParentBlockValidator...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: examples.ZSChain.validation.ParentBlockValidator[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(examples.ZSChain.validation.ParentBlockValidator)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following member ref dependencies of examples.ZSChain.validation.ParentBlockValidator are invalidated:[0m
[0m[[0m[0mdebug[0m] [0m[0m	examples.ZSChain.history.HybridHistory[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(examples.ZSChain.validation.ParentBlockValidator,ModifiedNames(changes = UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(notifyAll,[Default]), UsedName($init$,[Default]), UsedName(isInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(hashCode,[Default]), UsedName(ParentBlockValidator,[Default]), UsedName(encoder,[Implicit]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(examples;ZSChain;validation;ParentBlockValidator;init;,[Default]), UsedName(toString,[Default]), UsedName(##,[Default]), UsedName(getClass,[Default]), UsedName(clone,[Default]), UsedName(validate,[Default]), UsedName(asInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(finalize,[Default]), UsedName(!=,[Default]), UsedName(wait,[Default]))) invalidates 2 classes due to The examples.ZSChain.validation.ParentBlockValidator has the following implicit definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(encoder,[Implicit]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(examples.ZSChain.validation.ParentBlockValidator)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(examples.ZSChain.history.HybridHistory)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from examples.ZSChain.mining.HybridSettings...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: examples.ZSChain.mining.HybridSettings[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(examples.ZSChain.mining.HybridSettings)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following member ref dependencies of examples.ZSChain.mining.HybridSettings are invalidated:[0m
[0m[[0m[0mdebug[0m] [0m[0m	examples.ZSChain.HybridApp[0m
[0m[[0m[0mdebug[0m] [0m[0m	examples.ZSChain.HybridNodeViewHolder[0m
[0m[[0m[0mdebug[0m] [0m[0m	examples.ZSChain.HybridNodeViewHolderRef[0m
[0m[[0m[0mdebug[0m] [0m[0m	examples.ZSChain.mining.PosForger[0m
[0m[[0m[0mdebug[0m] [0m[0m	examples.ZSChain.mining.PosForgerRef[0m
[0m[[0m[0mdebug[0m] [0m[0m	examples.ZSChain.simulations.PrivateChain[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(examples.ZSChain.mining.HybridSettings,ModifiedNames(changes = UsedName(copy$default$2,[Default]), UsedName(read,[Default]), UsedName(walletSettings,[Default]), UsedName(inetSocketAddressReader,[Implicit]), UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(notifyAll,[Default]), UsedName(scorexSettings,[Default]), UsedName(productElement,[Default]), UsedName($init$,[Default]), UsedName(isInstanceOf,[Default]), UsedName(apply,[Default]), UsedName(synchronized,[Default]), UsedName(productPrefix,[Default]), UsedName(hashCode,[Default]), UsedName(byteValueReader,[Implicit]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(copy$default$3,[Default]), UsedName(toString,[Default]), UsedName(HybridSettings,[Default]), UsedName(copy$default$1,[Default]), UsedName(##,[Default]), UsedName(getClass,[Default]), UsedName(clone,[Default]), UsedName(logger,[Default]), UsedName(unapply,[Default]), UsedName(asInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(networkSettingsValueReader,[Implicit]), UsedName(productArity,[Default]), UsedName(finalize,[Default]), UsedName(log,[Default]), UsedName(!=,[Default]), UsedName(mining,[Default]), UsedName(examples;ZSChain;mining;HybridSettings;init;,[Default]), UsedName(fileReader,[Implicit]), UsedName(wait,[Default]), UsedName(productIterator,[Default]), UsedName(copy,[Default]), UsedName(canEqual,[Default]))) invalidates 7 classes due to The examples.ZSChain.mining.HybridSettings has the following implicit definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(inetSocketAddressReader,[Implicit]), UsedName(byteValueReader,[Implicit]), UsedName(networkSettingsValueReader,[Implicit]), UsedName(fileReader,[Implicit]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(examples.ZSChain.mining.HybridSettings)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(examples.ZSChain.HybridApp, examples.ZSChain.simulations.PrivateChain, examples.ZSChain.HybridNodeViewHolderRef, examples.ZSChain.mining.PosForger, examples.ZSChain.mining.PosForgerRef, examples.ZSChain.HybridNodeViewHolder)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from examples.ZSChain.validation.SemanticBlockValidator...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: examples.ZSChain.validation.SemanticBlockValidator[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(examples.ZSChain.validation.SemanticBlockValidator)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of examples.ZSChain.history.HybridHistory: Set(UsedName(==,[Default]), UsedName(examples;ZSChain;validation;SemanticBlockValidator;init;,[Default]), UsedName(isInstanceOf,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(validate,[Default]), UsedName(asInstanceOf,[Default]), UsedName(SemanticBlockValidator,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(examples.ZSChain.validation.SemanticBlockValidator,ModifiedNames(changes = UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(notifyAll,[Default]), UsedName(examples;ZSChain;validation;SemanticBlockValidator;init;,[Default]), UsedName(isInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(hashCode,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(##,[Default]), UsedName(getClass,[Default]), UsedName(clone,[Default]), UsedName(validate,[Default]), UsedName(asInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(finalize,[Default]), UsedName(!=,[Default]), UsedName(wait,[Default]), UsedName(SemanticBlockValidator,[Default]))) invalidates 2 classes due to The examples.ZSChain.validation.SemanticBlockValidator has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(notifyAll,[Default]), UsedName(examples;ZSChain;validation;SemanticBlockValidator;init;,[Default]), UsedName(isInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(hashCode,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(##,[Default]), UsedName(getClass,[Default]), UsedName(clone,[Default]), UsedName(validate,[Default]), UsedName(asInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(finalize,[Default]), UsedName(!=,[Default]), UsedName(wait,[Default]), UsedName(SemanticBlockValidator,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(examples.ZSChain.validation.SemanticBlockValidator)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(examples.ZSChain.history.HybridHistory)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from examples.hybrid.mining.PowMiner.ReceivableMessages.MineBlock...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: examples.hybrid.mining.PowMiner.ReceivableMessages.MineBlock[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(examples.hybrid.mining.PowMiner.ReceivableMessages.MineBlock)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(examples.hybrid.mining.PowMiner.ReceivableMessages.MineBlock,ModifiedNames(changes = UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(notifyAll,[Default]), UsedName(productElement,[Default]), UsedName($init$,[Default]), UsedName(isInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(productPrefix,[Default]), UsedName(hashCode,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(##,[Default]), UsedName(getClass,[Default]), UsedName(clone,[Default]), UsedName(asInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(productArity,[Default]), UsedName(finalize,[Default]), UsedName(!=,[Default]), UsedName(wait,[Default]), UsedName(productIterator,[Default]), UsedName(MineBlock,[Default]), UsedName(canEqual,[Default]))) invalidates 1 classes due to The examples.hybrid.mining.PowMiner.ReceivableMessages.MineBlock has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(notifyAll,[Default]), UsedName(productElement,[Default]), UsedName($init$,[Default]), UsedName(isInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(productPrefix,[Default]), UsedName(hashCode,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(##,[Default]), UsedName(getClass,[Default]), UsedName(clone,[Default]), UsedName(asInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(productArity,[Default]), UsedName(finalize,[Default]), UsedName(!=,[Default]), UsedName(wait,[Default]), UsedName(productIterator,[Default]), UsedName(MineBlock,[Default]), UsedName(canEqual,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(examples.hybrid.mining.PowMiner.ReceivableMessages.MineBlock)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from examples.ZSChain.api.http.DebugApiRoute...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: examples.ZSChain.api.http.DebugApiRoute[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(examples.ZSChain.api.http.DebugApiRoute)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following member ref dependencies of examples.ZSChain.api.http.DebugApiRoute are invalidated:[0m
[0m[[0m[0mdebug[0m] [0m[0m	examples.ZSChain.HybridApp[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(examples.ZSChain.api.http.DebugApiRoute,ModifiedNames(changes = UsedName(defaultUrlEncodedFormDataUnmarshaller,[Implicit]), UsedName(as,[Default]), UsedName(withAuth,[Default]), UsedName(path,[Default]), UsedName(authenticateBasicPFAsync,[Default]), UsedName(copy$default$2,[Default]), UsedName(onCompleteWithBreaker,[Default]), UsedName(extractLog,[Default]), UsedName(extractExecutionContext,[Default]), UsedName(multipartUnmarshaller$default$7,[Default]), UsedName(extract,[Default]), UsedName(handleSync,[Default]), UsedName(withSizeLimit,[Default]), UsedName(formFieldMultiMap,[Default]), UsedName(urlEncodedFormDataUnmarshaller,[Default]), UsedName(Authenticator,[Default]), UsedName(separateOnSlashes,[Default]), UsedName(charArrayUnmarshaller,[Implicit]), UsedName(requestEncodedWith,[Default]), UsedName(_symbol2NR,[Implicit]), UsedName(textract,[Default]), UsedName(marshaller,[Implicit]), UsedName(host,[Default]), UsedName(withRangeSupport,[Default]), UsedName(pathPrefixTest,[Default]), UsedName(Neutral,[Default]), UsedName(jsonMarshaller$default$1,[Default]), UsedName(==,[Default]), UsedName(get,[Default]), UsedName(extractUpgradeToWebSocket,[Default]), UsedName(parameterMultiMap,[Default]), UsedName(_segmentStringToPathMatcher,[Implicit]), UsedName(encodeResponse,[Default]), UsedName(addCorsHeaders,[Default]), UsedName(mapRequest,[Default]), UsedName(eq,[Default]), UsedName(parameter,[Default]), UsedName(multipartGeneralUnmarshaller$default$3,[Default]), UsedName(authenticateOAuth2,[Default]), UsedName(complete,[Default]), UsedName(instanceOf,[Default]), UsedName(requestEntityEmpty,[Default]), UsedName(redirect,[Default]), UsedName(withMaterializer,[Default]), UsedName(put,[Default]), UsedName(withSettings,[Default]), UsedName(logRequest,[Default]), UsedName(notifyAll,[Default]), UsedName(JavaUUID,[Default]), UsedName(handleWebSocketMessagesForOptionalProtocol,[Default]), UsedName(multipartFormDataUnmarshaller$default$2,[Default]), UsedName(productElement,[Default]), UsedName(mapRejections,[Default]), UsedName($init$,[Default]), UsedName(isInstanceOf,[Default]), UsedName(mediaTypes,[Default]), UsedName(withPrecompressedMediaTypeSupport,[Default]), UsedName(extractCredentials,[Default]), UsedName(requestEntityPresent,[Default]), UsedName(apply,[Default]), UsedName(mapUnmatchedPath,[Default]), UsedName(fileUploadAll,[Default]), UsedName(rejectEmptyResponse,[Default]), UsedName(overrideMethodWithParameter,[Default]), UsedName(concat,[Default]), UsedName(encodeResponseWith,[Default]), UsedName(timeout,[Implicit]), UsedName(route,[Default]), UsedName(unmarshallerContentTypes,[Default]), UsedName(multipartUnmarshaller,[Default]), UsedName(extractOfferedWsProtocols,[Default]), UsedName(mapRequestContext,[Default]), UsedName(provide,[Default]), UsedName(failWith,[Default]), UsedName(headerValue,[Default]), UsedName(multipartUnmarshaller$default$8,[Default]), UsedName(corsHandler,[Default]), UsedName(completeOrRecoverWith,[Default]), UsedName(withRequestTimeout,[Default]), UsedName(authenticateOAuth2PF,[Default]), UsedName(synchronized,[Default]), UsedName(Segment,[Default]), UsedName(multipartGeneralUnmarshaller$default$2,[Default]), UsedName(RequestToSourceUnmarshaller,[Default]), UsedName(patch,[Default]), UsedName(deleteCookie$default$2,[Default]), UsedName(optionalHeaderValueByType,[Default]), UsedName(productPrefix,[Default]), UsedName(handle,[Default]), UsedName(extractRequestContext,[Default]), UsedName(authorize,[Default]), UsedName(cookie,[Default]), UsedName(handleWebSocketMessages,[Default]), UsedName(post,[Default]), UsedName(extractMethod,[Default]), UsedName(multipartFormDataUnmarshaller,[Implicit]), UsedName(hashCode,[Default]), UsedName(extractScheme,[Default]), UsedName(mapResponseEntity,[Default]), UsedName(headerValueByType,[Default]), UsedName(extractClientIP,[Default]), UsedName(extractHost,[Default]), UsedName(getFromBrowseableDirectory,[Default]), UsedName(extractStrictEntity,[Default]), UsedName(optionalHeaderValueByName,[Default]), UsedName(withoutSizeLimit,[Default]), UsedName(optionalHeaderValuePF,[Default]), UsedName(defaultMultipartGeneralUnmarshaller$default$1,[Default]), UsedName(optionalAttribute,[Default]), UsedName(onComplete,[Default]), UsedName(authenticateOAuth2Async,[Default]), UsedName(unmarshaller,[Implicit]), UsedName(extractUri,[Default]), UsedName(mapSettings,[Default]), UsedName(RemainingPath,[Default]), UsedName(authorizeAsync,[Default]), UsedName(generators,[Default]), UsedName(pathSingleSlash,[Default]), UsedName(settings,[Default]), UsedName(headerValuePF,[Default]), UsedName(defaultMultipartByteRangesUnmarshaller$default$2,[Default]), UsedName(HexLongNumber,[Default]), UsedName(encoder,[Implicit]), UsedName(selectPreferredLanguage,[Default]), UsedName(respondWithDefaultHeaders,[Default]), UsedName(notify,[Default]), UsedName(_defaultClassLoader,[Default]), UsedName(ne,[Default]), UsedName(getFromResourceDirectory,[Default]), UsedName(pathSuffix,[Default]), UsedName(multipartByteRangesUnmarshaller$default$2,[Default]), UsedName(pathEnd,[Default]), UsedName(mapResponseHeaders,[Default]), UsedName(parameterSeq,[Default]), UsedName(toString,[Default]), UsedName(tprovide,[Default]), UsedName(defaultMultipartByteRangesUnmarshaller$default$1,[Default]), UsedName(mapRouteResult,[Default]), UsedName(formFieldMap,[Default]), UsedName(reject,[Default]), UsedName(recoverRejectionsWith,[Default]), UsedName(_enhanceRouteWithConcatenation,[Implicit]), UsedName(extractParserSettings,[Default]), UsedName(handleWith,[Default]), UsedName(AuthenticationResult,[Default]), UsedName(getFromBrowseableDirectories,[Default]), UsedName(delete,[Default]), UsedName(AsyncAuthenticatorPF,[Default]), UsedName(askActor,[Default]), UsedName(delay,[Default]), UsedName(deleteCookie,[Default]), UsedName(entity,[Default]), UsedName(head,[Default]), UsedName(extractRequest,[Default]), UsedName(scheme,[Default]), UsedName(copy$default$1,[Default]), UsedName(##,[Default]), UsedName(toStrictEntity,[Default]), UsedName(withoutRequestTimeout,[Default]), UsedName(mapRouteResultPF,[Default]), UsedName(getFromResourceDirectory$default$2,[Default]), UsedName(getFromResource$default$3,[Default]), UsedName(listDirectoryContents,[Default]), UsedName(getClass,[Default]), UsedName(clone,[Default]), UsedName(HexIntNumber,[Default]), UsedName(chain,[Default]), UsedName(not,[Default]), UsedName(recoverRejections,[Default]), UsedName(redirectToNoTrailingSlashIfPresent,[Default]), UsedName(handleExceptions,[Default]), UsedName(validate,[Default]), UsedName(logger,[Default]), UsedName(Slash,[Default]), UsedName(method,[Default]), UsedName(withLog,[Default]), UsedName(Remaining,[Default]), UsedName(headerValueByName,[Default]), UsedName(respondWithHeaders,[Default]), UsedName(PathEnd,[Default]), UsedName(formFields,[Default]), UsedName(extractRequestEntity,[Default]), UsedName(extractSettings,[Default]), UsedName(unapply,[Default]), UsedName(_string2NR,[Implicit]), UsedName(pathPrefix,[Default]), UsedName(asInstanceOf,[Default]), UsedName(authenticateOrRejectWithChallenge,[Default]), UsedName(responseEncodingAccepted,[Default]), UsedName(nodeViewHolderRef,[Default]), UsedName(authenticateBasicPF,[Default]), UsedName(infoRoute,[Default]), UsedName(extractWebSocketUpgrade,[Default]), UsedName(cancelRejection,[Default]), UsedName(logRequestResult,[Default]), UsedName(getFromResource,[Default]), UsedName(fileUpload,[Default]), UsedName(AuthenticatorPF,[Default]), UsedName(defaultMultipartByteRangesUnmarshaller,[Implicit]), UsedName(mapRouteResultWithPF,[Default]), UsedName(equals,[Default]), UsedName(multipartFormDataUnmarshaller$default$1,[Default]), UsedName(extractMatchedPath,[Default]), UsedName(completeWith,[Default]), UsedName(apiKeyHeaderName,[Default]), UsedName(extractRequestTimeout,[Default]), UsedName(logResult,[Default]), UsedName(productArity,[Default]), UsedName(AsyncAuthenticator,[Default]), UsedName(handleWebSocketMessagesForProtocol,[Default]), UsedName(rawPathPrefixTest,[Default]), UsedName(DebugApiRoute,[Default]), UsedName(extractMaterializer,[Default]), UsedName(onSuccess,[Default]), UsedName(withNodeView,[Default]), UsedName(cancelRejections,[Default]), UsedName(parameterMap,[Default]), UsedName(context,[Implicit]), UsedName(formField,[Default]), UsedName(jsonMarshaller,[Implicit]), UsedName(ignoreTrailingSlash,[Default]), UsedName(getFromDirectory,[Default]), UsedName(rawPathPrefix,[Default]), UsedName(respondWithDefaultHeader,[Default]), UsedName(optionalHeaderValue,[Default]), UsedName(decodeRequest,[Default]), UsedName(finalize,[Default]), UsedName(storeUploadedFiles,[Default]), UsedName(log,[Default]), UsedName(!=,[Default]), UsedName(myblocks,[Default]), UsedName(parameters,[Default]), UsedName(_regex2PathMatcher,[Implicit]), UsedName(asSourceOf,[Default]), UsedName(multipartByteRangesUnmarshaller$default$3,[Default]), UsedName(setCookie,[Default]), UsedName(multipartGeneralUnmarshaller,[Default]), UsedName(decodeRequestWith,[Default]), UsedName(withExecutionContext,[Default]), UsedName(byteArrayUnmarshaller,[Implicit]), UsedName(defaultMultipartGeneralUnmarshaller,[Implicit]), UsedName(formFieldSeq,[Default]), UsedName(_stringExtractionPair2PathMatcher,[Implicit]), UsedName(attribute,[Default]), UsedName(deleteCookie$default$3,[Default]), UsedName(marshaller$default$2,[Default]), UsedName(options,[Default]), UsedName(redirectToTrailingSlashIfMissing,[Default]), UsedName(authenticateOAuth2PFAsync,[Default]), UsedName(pathSuffixTest,[Default]), UsedName(stringUnmarshaller,[Implicit]), UsedName(checkSameOrigin,[Default]), UsedName(wait,[Default]), UsedName(authenticateBasicAsync,[Default]), UsedName(_valueMap2PathMatcher,[Implicit]), UsedName(pathEndOrSingleSlash,[Default]), UsedName(productIterator,[Default]), UsedName(storeUploadedFile,[Default]), UsedName(getFromFile,[Default]), UsedName(printer,[Implicit]), UsedName(Segments,[Default]), UsedName(viewAsync,[Default]), UsedName(conditional,[Default]), UsedName(mapRouteResultWith,[Default]), UsedName(extractActorSystem,[Default]), UsedName(LongNumber,[Default]), UsedName(extractUnmatchedPath,[Default]), UsedName(extractDataBytes,[Default]), UsedName(DoubleNumber,[Default]), UsedName(handleRejections,[Default]), UsedName(mapResponse,[Default]), UsedName(nothingMatcher,[Default]), UsedName(authenticateBasic,[Default]), UsedName(copy,[Default]), UsedName(mapRouteResultFuture,[Default]), UsedName(IntNumber,[Default]), UsedName(canEqual,[Default]), UsedName(respondWithHeader,[Default]), UsedName(mapInnerRoute,[Default]), UsedName(_stringNameOptionReceptacle2PathMatcher,[Implicit]), UsedName(examples;ZSChain;api;http;DebugApiRoute;init;,[Default]), UsedName(NumberMatcher,[Default]), UsedName(pass,[Default]), UsedName(optionalCookie,[Default]), UsedName(multipartByteRangesUnmarshaller,[Default]), UsedName(defaultMultipartGeneralUnmarshaller$default$2,[Default]), UsedName(byteStringUnmarshaller,[Implicit]), UsedName(jsonUnmarshaller,[Implicit]), UsedName(withRequestTimeoutResponse,[Default]))) invalidates 2 classes due to The examples.ZSChain.api.http.DebugApiRoute has the following implicit definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(defaultUrlEncodedFormDataUnmarshaller,[Implicit]), UsedName(charArrayUnmarshaller,[Implicit]), UsedName(_symbol2NR,[Implicit]), UsedName(marshaller,[Implicit]), UsedName(_segmentStringToPathMatcher,[Implicit]), UsedName(timeout,[Implicit]), UsedName(multipartFormDataUnmarshaller,[Implicit]), UsedName(unmarshaller,[Implicit]), UsedName(encoder,[Implicit]), UsedName(_enhanceRouteWithConcatenation,[Implicit]), UsedName(_string2NR,[Implicit]), UsedName(defaultMultipartByteRangesUnmarshaller,[Implicit]), UsedName(context,[Implicit]), UsedName(jsonMarshaller,[Implicit]), UsedName(_regex2PathMatcher,[Implicit]), UsedName(byteArrayUnmarshaller,[Implicit]), UsedName(defaultMultipartGeneralUnmarshaller,[Implicit]), UsedName(_stringExtractionPair2PathMatcher,[Implicit]), UsedName(stringUnmarshaller,[Implicit]), UsedName(_valueMap2PathMatcher,[Implicit]), UsedName(printer,[Implicit]), UsedName(_stringNameOptionReceptacle2PathMatcher,[Implicit]), UsedName(byteStringUnmarshaller,[Implicit]), UsedName(jsonUnmarshaller,[Implicit]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(examples.ZSChain.api.http.DebugApiRoute)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(examples.ZSChain.HybridApp)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from examples.ZSChain.simulations.PrivateChain...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: examples.ZSChain.simulations.PrivateChain[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(examples.ZSChain.simulations.PrivateChain)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(examples.ZSChain.simulations.PrivateChain,ModifiedNames(changes = UsedName(genesisState,[Default]), UsedName(settings,[Implicit]), UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(notifyAll,[Default]), UsedName($init$,[Default]), UsedName(isInstanceOf,[Default]), UsedName(delayedInit,[Default]), UsedName(proposition,[Default]), UsedName(synchronized,[Default]), UsedName(honestAvg,[Default]), UsedName(generatePow,[Default]), UsedName(hashCode,[Default]), UsedName(experiment,[Default]), UsedName(encoder,[Implicit]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(executionStart,[Default]), UsedName(toString,[Default]), UsedName(##,[Default]), UsedName(args,[Default]), UsedName(getClass,[Default]), UsedName(clone,[Default]), UsedName(logger,[Default]), UsedName(honestHashesPerSecond,[Default]), UsedName(asInstanceOf,[Default]), UsedName(PrivateChain,[Default]), UsedName(experiments,[Default]), UsedName(equals,[Default]), UsedName(finalize,[Default]), UsedName(miningSettings,[Default]), UsedName(log,[Default]), UsedName(!=,[Default]), UsedName(timeSpent,[Default]), UsedName(wait,[Default]), UsedName(main,[Default]))) invalidates 1 classes due to The examples.ZSChain.simulations.PrivateChain has the following implicit definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(settings,[Implicit]), UsedName(encoder,[Implicit]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(examples.ZSChain.simulations.PrivateChain)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from examples.ZSChain.util.CancellableStatus...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: examples.ZSChain.util.CancellableStatus[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(examples.ZSChain.util.CancellableStatus)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidate by local inheritance: examples.ZSChain.util.CancellableStatus -> Set(examples.ZSChain.util.Cancellable)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of examples.ZSChain.mining.PowMiner: Set(UsedName(nonCancelled,[Default]), UsedName(==,[Default]), UsedName(isInstanceOf,[Default]), UsedName(ne,[Default]), UsedName(asInstanceOf,[Default]), UsedName(CancellableStatus,[Default]), UsedName(isCancelled,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(examples.ZSChain.util.CancellableStatus,ModifiedNames(changes = UsedName(nonCancelled,[Default]), UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(notifyAll,[Default]), UsedName($init$,[Default]), UsedName(isInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(hashCode,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(##,[Default]), UsedName(getClass,[Default]), UsedName(clone,[Default]), UsedName(asInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(finalize,[Default]), UsedName(!=,[Default]), UsedName(wait,[Default]), UsedName(CancellableStatus,[Default]), UsedName(isCancelled,[Default]))) invalidates 3 classes due to The examples.ZSChain.util.CancellableStatus has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(nonCancelled,[Default]), UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(notifyAll,[Default]), UsedName($init$,[Default]), UsedName(isInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(hashCode,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(##,[Default]), UsedName(getClass,[Default]), UsedName(clone,[Default]), UsedName(asInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(finalize,[Default]), UsedName(!=,[Default]), UsedName(wait,[Default]), UsedName(CancellableStatus,[Default]), UsedName(isCancelled,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(examples.ZSChain.util.CancellableStatus)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by local inheritance: Set(examples.ZSChain.util.Cancellable)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(examples.ZSChain.mining.PowMiner)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from examples.hybrid.mining.PosForger.ReceivableMessages.StartForging...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: examples.hybrid.mining.PosForger.ReceivableMessages.StartForging[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(examples.hybrid.mining.PosForger.ReceivableMessages.StartForging)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(examples.hybrid.mining.PosForger.ReceivableMessages.StartForging,ModifiedNames(changes = UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(notifyAll,[Default]), UsedName(productElement,[Default]), UsedName($init$,[Default]), UsedName(isInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(productPrefix,[Default]), UsedName(hashCode,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(##,[Default]), UsedName(getClass,[Default]), UsedName(clone,[Default]), UsedName(asInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(productArity,[Default]), UsedName(finalize,[Default]), UsedName(!=,[Default]), UsedName(StartForging,[Default]), UsedName(wait,[Default]), UsedName(productIterator,[Default]), UsedName(canEqual,[Default]))) invalidates 1 classes due to The examples.hybrid.mining.PosForger.ReceivableMessages.StartForging has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(notifyAll,[Default]), UsedName(productElement,[Default]), UsedName($init$,[Default]), UsedName(isInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(productPrefix,[Default]), UsedName(hashCode,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(##,[Default]), UsedName(getClass,[Default]), UsedName(clone,[Default]), UsedName(asInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(productArity,[Default]), UsedName(finalize,[Default]), UsedName(!=,[Default]), UsedName(StartForging,[Default]), UsedName(wait,[Default]), UsedName(productIterator,[Default]), UsedName(canEqual,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(examples.hybrid.mining.PosForger.ReceivableMessages.StartForging)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from examples.ZSChain.mining.PosForger.ReceivableMessages.StartForging...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: examples.ZSChain.mining.PosForger.ReceivableMessages.StartForging[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(examples.ZSChain.mining.PosForger.ReceivableMessages.StartForging)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of examples.ZSChain.HLocalInterface: Set(UsedName(==,[Default]), UsedName(isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName(StartForging,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(examples.ZSChain.mining.PosForger.ReceivableMessages.StartForging,ModifiedNames(changes = UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(notifyAll,[Default]), UsedName(productElement,[Default]), UsedName($init$,[Default]), UsedName(isInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(productPrefix,[Default]), UsedName(hashCode,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(##,[Default]), UsedName(getClass,[Default]), UsedName(clone,[Default]), UsedName(asInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(productArity,[Default]), UsedName(finalize,[Default]), UsedName(!=,[Default]), UsedName(StartForging,[Default]), UsedName(wait,[Default]), UsedName(productIterator,[Default]), UsedName(canEqual,[Default]))) invalidates 2 classes due to The examples.ZSChain.mining.PosForger.ReceivableMessages.StartForging has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(notifyAll,[Default]), UsedName(productElement,[Default]), UsedName($init$,[Default]), UsedName(isInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(productPrefix,[Default]), UsedName(hashCode,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(##,[Default]), UsedName(getClass,[Default]), UsedName(clone,[Default]), UsedName(asInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(productArity,[Default]), UsedName(finalize,[Default]), UsedName(!=,[Default]), UsedName(StartForging,[Default]), UsedName(wait,[Default]), UsedName(productIterator,[Default]), UsedName(canEqual,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(examples.ZSChain.mining.PosForger.ReceivableMessages.StartForging)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(examples.ZSChain.HLocalInterface)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from examples.hybrid.blocks.PowBlockHeader...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: examples.hybrid.blocks.PowBlockHeader[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(examples.hybrid.blocks.PowBlockHeader)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(examples.hybrid.blocks.PowBlockHeader,ModifiedNames(changes = UsedName(prevPosId,[Default]), UsedName(==,[Default]), UsedName(brothersCount,[Default]), UsedName(eq,[Default]), UsedName(id,[Default]), UsedName(notifyAll,[Default]), UsedName($init$,[Default]), UsedName(isInstanceOf,[Default]), UsedName(PowBlockHeader,[Default]), UsedName(parentId,[Default]), UsedName(synchronized,[Default]), UsedName(brothersHash,[Default]), UsedName(nonce,[Default]), UsedName(hashCode,[Default]), UsedName(correctWork,[Default]), UsedName(encoder,[Implicit]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(timestamp,[Default]), UsedName(##,[Default]), UsedName(getClass,[Default]), UsedName(clone,[Default]), UsedName(asInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(finalize,[Default]), UsedName(!=,[Default]), UsedName(generatorProposition,[Default]), UsedName(wait,[Default]), UsedName(examples;hybrid;blocks;PowBlockHeader;init;,[Default]), UsedName(correctWorkDone,[Default]))) invalidates 1 classes due to The examples.hybrid.blocks.PowBlockHeader has the following implicit definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(encoder,[Implicit]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(examples.hybrid.blocks.PowBlockHeader)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from examples.hybrid.wallet.SimpleBoxTransactionGenerator.ReceivableMessages...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: examples.hybrid.wallet.SimpleBoxTransactionGenerator.ReceivableMessages[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(examples.hybrid.wallet.SimpleBoxTransactionGenerator.ReceivableMessages)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(examples.hybrid.wallet.SimpleBoxTransactionGenerator.ReceivableMessages,ModifiedNames(changes = UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(notifyAll,[Default]), UsedName(isInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(hashCode,[Default]), UsedName(GeneratorInfo,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(##,[Default]), UsedName(getClass,[Default]), UsedName(clone,[Default]), UsedName(asInstanceOf,[Default]), UsedName(StartGeneration,[Default]), UsedName(equals,[Default]), UsedName(finalize,[Default]), UsedName(!=,[Default]), UsedName(ReceivableMessages,[Default]), UsedName(wait,[Default]))) invalidates 1 classes due to The examples.hybrid.wallet.SimpleBoxTransactionGenerator.ReceivableMessages has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(notifyAll,[Default]), UsedName(isInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(hashCode,[Default]), UsedName(GeneratorInfo,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(##,[Default]), UsedName(getClass,[Default]), UsedName(clone,[Default]), UsedName(asInstanceOf,[Default]), UsedName(StartGeneration,[Default]), UsedName(equals,[Default]), UsedName(finalize,[Default]), UsedName(!=,[Default]), UsedName(ReceivableMessages,[Default]), UsedName(wait,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(examples.hybrid.wallet.SimpleBoxTransactionGenerator.ReceivableMessages)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from examples.ZSChain.blocks.PosBlock...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: examples.ZSChain.blocks.PosBlock[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(examples.ZSChain.blocks.PosBlock)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following member ref dependencies of examples.ZSChain.blocks.PosBlock are invalidated:[0m
[0m[[0m[0mdebug[0m] [0m[0m	examples.ZSChain.HLocalInterface[0m
[0m[[0m[0mdebug[0m] [0m[0m	examples.ZSChain.HybridApp[0m
[0m[[0m[0mdebug[0m] [0m[0m	examples.ZSChain.HybridNodeViewHolder[0m
[0m[[0m[0mdebug[0m] [0m[0m	examples.ZSChain.api.http.DebugApiRoute[0m
[0m[[0m[0mdebug[0m] [0m[0m	examples.ZSChain.history.HistoryStorage[0m
[0m[[0m[0mdebug[0m] [0m[0m	examples.ZSChain.history.HybridHistory[0m
[0m[[0m[0mdebug[0m] [0m[0m	examples.ZSChain.history.HybridSyncInfo[0m
[0m[[0m[0mdebug[0m] [0m[0m	examples.ZSChain.mining.PosForger[0m
[0m[[0m[0mdebug[0m] [0m[0m	examples.ZSChain.mining.PosForger.ReceivableMessages.PosForgingInfo[0m
[0m[[0m[0mdebug[0m] [0m[0m	examples.ZSChain.simulations.PrivateChain[0m
[0m[[0m[0mdebug[0m] [0m[0m	examples.ZSChain.state.HBoxStoredState[0m
[0m[[0m[0mdebug[0m] [0m[0m	examples.ZSChain.validation.DifficultyBlockValidator[0m
[0m[[0m[0mdebug[0m] [0m[0m	examples.ZSChain.validation.ParentBlockValidator[0m
[0m[[0m[0mdebug[0m] [0m[0m	examples.ZSChain.validation.SemanticBlockValidator[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(examples.ZSChain.blocks.PosBlock,ModifiedNames(changes = UsedName(copy$default$2,[Default]), UsedName(version,[Default]), UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(id,[Default]), UsedName(transactions,[Default]), UsedName(notifyAll,[Default]), UsedName(productElement,[Default]), UsedName($init$,[Default]), UsedName(isInstanceOf,[Default]), UsedName(apply,[Default]), UsedName(ModifierTypeId,[Default]), UsedName(copy$default$6,[Default]), UsedName(parentId,[Default]), UsedName(synchronized,[Default]), UsedName(productPrefix,[Default]), UsedName(hashCode,[Default]), UsedName(randBeacon,[Default]), UsedName(generatorBox,[Default]), UsedName(copy$default$4,[Default]), UsedName(posBlockEncoder,[Implicit]), UsedName(encoder,[Implicit]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(copy$default$3,[Default]), UsedName(toString,[Default]), UsedName(timestamp,[Default]), UsedName(signatureValid,[Default]), UsedName(copy$default$1,[Default]), UsedName(##,[Default]), UsedName(getClass,[Default]), UsedName(serializer,[Default]), UsedName(clone,[Default]), UsedName(logger,[Default]), UsedName(modifierTypeId,[Default]), UsedName(unapply,[Default]), UsedName(asInstanceOf,[Default]), UsedName(bytes,[Default]), UsedName(equals,[Default]), UsedName(productArity,[Default]), UsedName(PosBlock,[Default]), UsedName(finalize,[Default]), UsedName(log,[Default]), UsedName(!=,[Default]), UsedName(copy$default$7,[Default]), UsedName(copy$default$5,[Default]), UsedName(M,[Default]), UsedName(signature,[Default]), UsedName(wait,[Default]), UsedName(productIterator,[Default]), UsedName(examples;ZSChain;blocks;PosBlock;init;,[Default]), UsedName(copy,[Default]), UsedName(MaxBlockSize,[Default]), UsedName(attachment,[Default]), UsedName(canEqual,[Default]), UsedName(encodedId,[Default]), UsedName(create,[Default]))) invalidates 15 classes due to The examples.ZSChain.blocks.PosBlock has the following implicit definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(posBlockEncoder,[Implicit]), UsedName(encoder,[Implicit]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(examples.ZSChain.blocks.PosBlock)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(examples.ZSChain.history.HistoryStorage, examples.ZSChain.HybridApp, examples.ZSChain.api.http.DebugApiRoute, examples.ZSChain.HLocalInterface, examples.ZSChain.history.HybridHistory, examples.ZSChain.validation.ParentBlockValidator, examples.ZSChain.simulations.PrivateChain, examples.ZSChain.validation.SemanticBlockValidator, examples.ZSChain.history.HybridSyncInfo, examples.ZSChain.mining.PosForger, examples.ZSChain.state.HBoxStoredState, examples.ZSChain.HybridNodeViewHolder, examples.ZSChain.mining.PosForger.ReceivableMessages.PosForgingInfo, examples.ZSChain.validation.DifficultyBlockValidator)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from examples.hybrid.HybridNodeViewHolderRef...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: examples.hybrid.HybridNodeViewHolderRef[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(examples.hybrid.HybridNodeViewHolderRef)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(examples.hybrid.HybridNodeViewHolderRef,ModifiedNames(changes = UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(notifyAll,[Default]), UsedName(isInstanceOf,[Default]), UsedName(apply,[Default]), UsedName(HybridNodeViewHolderRef,[Default]), UsedName(synchronized,[Default]), UsedName(hashCode,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(##,[Default]), UsedName(getClass,[Default]), UsedName(clone,[Default]), UsedName(asInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(props,[Default]), UsedName(finalize,[Default]), UsedName(!=,[Default]), UsedName(wait,[Default]))) invalidates 1 classes due to The examples.hybrid.HybridNodeViewHolderRef has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(notifyAll,[Default]), UsedName(isInstanceOf,[Default]), UsedName(apply,[Default]), UsedName(HybridNodeViewHolderRef,[Default]), UsedName(synchronized,[Default]), UsedName(hashCode,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(##,[Default]), UsedName(getClass,[Default]), UsedName(clone,[Default]), UsedName(asInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(props,[Default]), UsedName(finalize,[Default]), UsedName(!=,[Default]), UsedName(wait,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(examples.hybrid.HybridNodeViewHolderRef)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from examples.hybrid.mining.PowMiner...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: examples.hybrid.mining.PowMiner[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(examples.hybrid.mining.PowMiner)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(examples.hybrid.mining.PowMiner,ModifiedNames(changes = UsedName(postRestart,[Default]), UsedName(==,[Default]), UsedName(preStart,[Default]), UsedName(eq,[Default]), UsedName(notifyAll,[Default]), UsedName($init$,[Default]), UsedName(isInstanceOf,[Default]), UsedName(delayedInit,[Default]), UsedName(aroundReceive,[Default]), UsedName(self,[Implicit]), UsedName(synchronized,[Default]), UsedName(postStop,[Default]), UsedName(hashCode,[Default]), UsedName(aroundPostRestart,[Default]), UsedName(encoder,[Implicit]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(executionStart,[Default]), UsedName(PowMiner,[Default]), UsedName(toString,[Default]), UsedName(##,[Default]), UsedName(args,[Default]), UsedName(getClass,[Default]), UsedName(clone,[Default]), UsedName(logger,[Default]), UsedName(sender,[Default]), UsedName(supervisorStrategy,[Default]), UsedName(Receive,[Default]), UsedName(asInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(receive,[Default]), UsedName(context,[Implicit]), UsedName(finalize,[Default]), UsedName(log,[Default]), UsedName(!=,[Default]), UsedName(powIteration,[Default]), UsedName(ReceivableMessages,[Default]), UsedName(aroundPostStop,[Default]), UsedName(wait,[Default]), UsedName(examples;hybrid;mining;PowMiner;init;,[Default]), UsedName(aroundPreRestart,[Default]), UsedName(preRestart,[Default]), UsedName(aroundPreStart,[Default]), UsedName(unhandled,[Default]), UsedName(main,[Default]))) invalidates 1 classes due to The examples.hybrid.mining.PowMiner has the following implicit definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(self,[Implicit]), UsedName(encoder,[Implicit]), UsedName(context,[Implicit]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(examples.hybrid.mining.PowMiner)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from examples.hybrid.HybridNodeViewHolder...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: examples.hybrid.HybridNodeViewHolder[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(examples.hybrid.HybridNodeViewHolder)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(examples.hybrid.HybridNodeViewHolder,ModifiedNames(changes = UsedName(postRestart,[Default]), UsedName(memoryPool,[Default]), UsedName(updateNodeView$default$2,[Default]), UsedName(genesisState,[Default]), UsedName(minimalState,[Default]), UsedName(==,[Default]), UsedName(preStart,[Default]), UsedName(txModify,[Default]), UsedName(updateNodeView$default$4,[Default]), UsedName(eq,[Default]), UsedName(HIS,[Default]), UsedName(UpdateInformation,[Default]), UsedName(notifyAll,[Default]), UsedName(scorexSettings,[Default]), UsedName($init$,[Default]), UsedName(modifiersCache,[Default]), UsedName(isInstanceOf,[Default]), UsedName(MP,[Default]), UsedName(aroundReceive,[Default]), UsedName(self,[Implicit]), UsedName(examples;hybrid;HybridNodeViewHolder;init;,[Default]), UsedName(processLocallyGeneratedModifiers,[Default]), UsedName(vault,[Default]), UsedName(synchronized,[Default]), UsedName(postStop,[Default]), UsedName(updateNodeView$default$1,[Default]), UsedName(transactionsProcessing,[Default]), UsedName(hashCode,[Default]), UsedName(NodeView,[Default]), UsedName(aroundPostRestart,[Default]), UsedName(extractTransactions,[Default]), UsedName(MS,[Default]), UsedName(encoder,[Implicit]), UsedName(notify,[Default]), UsedName(generateGenesisState,[Default]), UsedName(ne,[Default]), UsedName(updateMemPool,[Default]), UsedName(updateNodeView,[Default]), UsedName(SI,[Default]), UsedName(processRemoteModifiers,[Default]), UsedName(toString,[Default]), UsedName(##,[Default]), UsedName(getClass,[Default]), UsedName(clone,[Default]), UsedName(logger,[Default]), UsedName(updateNodeView$default$3,[Default]), UsedName(VL,[Default]), UsedName(sender,[Default]), UsedName(supervisorStrategy,[Default]), UsedName(Receive,[Default]), UsedName(asInstanceOf,[Default]), UsedName(restoreState,[Default]), UsedName(equals,[Default]), UsedName(getCurrentInfo,[Default]), UsedName(receive,[Default]), UsedName(context,[Implicit]), UsedName(finalize,[Default]), UsedName(log,[Default]), UsedName(HybridNodeViewHolder,[Default]), UsedName(!=,[Default]), UsedName(applyState,[Default]), UsedName(pmodModify,[Default]), UsedName(aroundPostStop,[Default]), UsedName(wait,[Default]), UsedName(aroundPreRestart,[Default]), UsedName(preRestart,[Default]), UsedName(aroundPreStart,[Default]), UsedName(unhandled,[Default]), UsedName(getNodeViewChanges,[Default]), UsedName(history,[Default]))) invalidates 1 classes due to The examples.hybrid.HybridNodeViewHolder has the following implicit definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(self,[Implicit]), UsedName(encoder,[Implicit]), UsedName(context,[Implicit]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(examples.hybrid.HybridNodeViewHolder)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from examples.hybrid.validation.SemanticBlockValidator...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: examples.hybrid.validation.SemanticBlockValidator[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(examples.hybrid.validation.SemanticBlockValidator)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(examples.hybrid.validation.SemanticBlockValidator,ModifiedNames(changes = UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(notifyAll,[Default]), UsedName(isInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(examples;hybrid;validation;SemanticBlockValidator;init;,[Default]), UsedName(hashCode,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(##,[Default]), UsedName(getClass,[Default]), UsedName(clone,[Default]), UsedName(validate,[Default]), UsedName(asInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(finalize,[Default]), UsedName(!=,[Default]), UsedName(wait,[Default]), UsedName(SemanticBlockValidator,[Default]))) invalidates 1 classes due to The examples.hybrid.validation.SemanticBlockValidator has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(notifyAll,[Default]), UsedName(isInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(examples;hybrid;validation;SemanticBlockValidator;init;,[Default]), UsedName(hashCode,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(##,[Default]), UsedName(getClass,[Default]), UsedName(clone,[Default]), UsedName(validate,[Default]), UsedName(asInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(finalize,[Default]), UsedName(!=,[Default]), UsedName(wait,[Default]), UsedName(SemanticBlockValidator,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(examples.hybrid.validation.SemanticBlockValidator)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from examples.hybrid.mining.PosForgerRef...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: examples.hybrid.mining.PosForgerRef[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(examples.hybrid.mining.PosForgerRef)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(examples.hybrid.mining.PosForgerRef,ModifiedNames(changes = UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(notifyAll,[Default]), UsedName(isInstanceOf,[Default]), UsedName(apply,[Default]), UsedName(synchronized,[Default]), UsedName(PosForgerRef,[Default]), UsedName(hashCode,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(##,[Default]), UsedName(getClass,[Default]), UsedName(clone,[Default]), UsedName(asInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(props,[Default]), UsedName(finalize,[Default]), UsedName(!=,[Default]), UsedName(wait,[Default]))) invalidates 1 classes due to The examples.hybrid.mining.PosForgerRef has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(notifyAll,[Default]), UsedName(isInstanceOf,[Default]), UsedName(apply,[Default]), UsedName(synchronized,[Default]), UsedName(PosForgerRef,[Default]), UsedName(hashCode,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(##,[Default]), UsedName(getClass,[Default]), UsedName(clone,[Default]), UsedName(asInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(props,[Default]), UsedName(finalize,[Default]), UsedName(!=,[Default]), UsedName(wait,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(examples.hybrid.mining.PosForgerRef)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from examples.ZSChain.wallet.SimpleBoxTransactionGenerator.ReceivableMessages.StartGeneration...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: examples.ZSChain.wallet.SimpleBoxTransactionGenerator.ReceivableMessages.StartGeneration[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(examples.ZSChain.wallet.SimpleBoxTransactionGenerator.ReceivableMessages.StartGeneration)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of examples.ZSChain.HybridApp: Set(UsedName(apply,[Default]), UsedName(StartGeneration,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(examples.ZSChain.wallet.SimpleBoxTransactionGenerator.ReceivableMessages.StartGeneration,ModifiedNames(changes = UsedName(compose,[Default]), UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(andThen,[Default]), UsedName(notifyAll,[Default]), UsedName(productElement,[Default]), UsedName($init$,[Default]), UsedName(isInstanceOf,[Default]), UsedName(apply,[Default]), UsedName(synchronized,[Default]), UsedName(productPrefix,[Default]), UsedName(examples;ZSChain;wallet;SimpleBoxTransactionGenerator;ReceivableMessages;StartGeneration;init;,[Default]), UsedName(hashCode,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(delay,[Default]), UsedName(copy$default$1,[Default]), UsedName(##,[Default]), UsedName(getClass,[Default]), UsedName(clone,[Default]), UsedName(unapply,[Default]), UsedName(asInstanceOf,[Default]), UsedName(StartGeneration,[Default]), UsedName(equals,[Default]), UsedName(productArity,[Default]), UsedName(finalize,[Default]), UsedName(!=,[Default]), UsedName(wait,[Default]), UsedName(productIterator,[Default]), UsedName(copy,[Default]), UsedName(canEqual,[Default]))) invalidates 2 classes due to The examples.ZSChain.wallet.SimpleBoxTransactionGenerator.ReceivableMessages.StartGeneration has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(compose,[Default]), UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(andThen,[Default]), UsedName(notifyAll,[Default]), UsedName(productElement,[Default]), UsedName($init$,[Default]), UsedName(isInstanceOf,[Default]), UsedName(apply,[Default]), UsedName(synchronized,[Default]), UsedName(productPrefix,[Default]), UsedName(examples;ZSChain;wallet;SimpleBoxTransactionGenerator;ReceivableMessages;StartGeneration;init;,[Default]), UsedName(hashCode,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(delay,[Default]), UsedName(copy$default$1,[Default]), UsedName(##,[Default]), UsedName(getClass,[Default]), UsedName(clone,[Default]), UsedName(unapply,[Default]), UsedName(asInstanceOf,[Default]), UsedName(StartGeneration,[Default]), UsedName(equals,[Default]), UsedName(productArity,[Default]), UsedName(finalize,[Default]), UsedName(!=,[Default]), UsedName(wait,[Default]), UsedName(productIterator,[Default]), UsedName(copy,[Default]), UsedName(canEqual,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(examples.ZSChain.wallet.SimpleBoxTransactionGenerator.ReceivableMessages.StartGeneration)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(examples.ZSChain.HybridApp)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from examples.ZSChain.mining.PowMiner.ReceivableMessages.StartMining...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: examples.ZSChain.mining.PowMiner.ReceivableMessages.StartMining[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(examples.ZSChain.mining.PowMiner.ReceivableMessages.StartMining)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of examples.ZSChain.HLocalInterface: Set(UsedName(==,[Default]), UsedName(isInstanceOf,[Default]), UsedName(StartMining,[Default]), UsedName(asInstanceOf,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(examples.ZSChain.mining.PowMiner.ReceivableMessages.StartMining,ModifiedNames(changes = UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(notifyAll,[Default]), UsedName(productElement,[Default]), UsedName($init$,[Default]), UsedName(isInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(productPrefix,[Default]), UsedName(hashCode,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(StartMining,[Default]), UsedName(##,[Default]), UsedName(getClass,[Default]), UsedName(clone,[Default]), UsedName(asInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(productArity,[Default]), UsedName(finalize,[Default]), UsedName(!=,[Default]), UsedName(wait,[Default]), UsedName(productIterator,[Default]), UsedName(canEqual,[Default]))) invalidates 2 classes due to The examples.ZSChain.mining.PowMiner.ReceivableMessages.StartMining has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(notifyAll,[Default]), UsedName(productElement,[Default]), UsedName($init$,[Default]), UsedName(isInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(productPrefix,[Default]), UsedName(hashCode,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(StartMining,[Default]), UsedName(##,[Default]), UsedName(getClass,[Default]), UsedName(clone,[Default]), UsedName(asInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(productArity,[Default]), UsedName(finalize,[Default]), UsedName(!=,[Default]), UsedName(wait,[Default]), UsedName(productIterator,[Default]), UsedName(canEqual,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(examples.ZSChain.mining.PowMiner.ReceivableMessages.StartMining)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(examples.ZSChain.HLocalInterface)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from examples.ZSChain.mining.PosForgerRef...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: examples.ZSChain.mining.PosForgerRef[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(examples.ZSChain.mining.PosForgerRef)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of examples.ZSChain.HybridApp: Set(UsedName(apply,[Default]), UsedName(PosForgerRef,[Default]), UsedName(props,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(examples.ZSChain.mining.PosForgerRef,ModifiedNames(changes = UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(notifyAll,[Default]), UsedName(isInstanceOf,[Default]), UsedName(apply,[Default]), UsedName(synchronized,[Default]), UsedName(PosForgerRef,[Default]), UsedName(hashCode,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(##,[Default]), UsedName(getClass,[Default]), UsedName(clone,[Default]), UsedName(asInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(props,[Default]), UsedName(finalize,[Default]), UsedName(!=,[Default]), UsedName(wait,[Default]))) invalidates 2 classes due to The examples.ZSChain.mining.PosForgerRef has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(notifyAll,[Default]), UsedName(isInstanceOf,[Default]), UsedName(apply,[Default]), UsedName(synchronized,[Default]), UsedName(PosForgerRef,[Default]), UsedName(hashCode,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(##,[Default]), UsedName(getClass,[Default]), UsedName(clone,[Default]), UsedName(asInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(props,[Default]), UsedName(finalize,[Default]), UsedName(!=,[Default]), UsedName(wait,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(examples.ZSChain.mining.PosForgerRef)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(examples.ZSChain.HybridApp)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from examples.hybrid.mining.HybridMiningSettings...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: examples.hybrid.mining.HybridMiningSettings[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(examples.hybrid.mining.HybridMiningSettings)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(examples.hybrid.mining.HybridMiningSettings,ModifiedNames(changes = UsedName(copy$default$2,[Default]), UsedName(initialDifficulty,[Default]), UsedName(blockGenerationDelay,[Default]), UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(notifyAll,[Default]), UsedName(productElement,[Default]), UsedName($init$,[Default]), UsedName(isInstanceOf,[Default]), UsedName(apply,[Default]), UsedName(targetBlockDelay,[Default]), UsedName(copy$default$6,[Default]), UsedName(synchronized,[Default]), UsedName(productPrefix,[Default]), UsedName(hashCode,[Default]), UsedName(MaxTarget,[Default]), UsedName(copy$default$4,[Default]), UsedName(posAttachmentSize,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(copy$default$3,[Default]), UsedName(toString,[Default]), UsedName(offlineGeneration,[Default]), UsedName(copy$default$1,[Default]), UsedName(##,[Default]), UsedName(getClass,[Default]), UsedName(clone,[Default]), UsedName(examples;hybrid;mining;HybridMiningSettings;init;,[Default]), UsedName(unapply,[Default]), UsedName(asInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(HybridMiningSettings,[Default]), UsedName(GenesisParentId,[Default]), UsedName(rParamX10,[Default]), UsedName(productArity,[Default]), UsedName(finalize,[Default]), UsedName(!=,[Default]), UsedName(tupled,[Default]), UsedName(copy$default$5,[Default]), UsedName(wait,[Default]), UsedName(productIterator,[Default]), UsedName(copy,[Default]), UsedName(canEqual,[Default]), UsedName(curried,[Default]))) invalidates 1 classes due to The examples.hybrid.mining.HybridMiningSettings has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(copy$default$2,[Default]), UsedName(initialDifficulty,[Default]), UsedName(blockGenerationDelay,[Default]), UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(notifyAll,[Default]), UsedName(productElement,[Default]), UsedName($init$,[Default]), UsedName(isInstanceOf,[Default]), UsedName(apply,[Default]), UsedName(targetBlockDelay,[Default]), UsedName(copy$default$6,[Default]), UsedName(synchronized,[Default]), UsedName(productPrefix,[Default]), UsedName(hashCode,[Default]), UsedName(MaxTarget,[Default]), UsedName(copy$default$4,[Default]), UsedName(posAttachmentSize,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(copy$default$3,[Default]), UsedName(toString,[Default]), UsedName(offlineGeneration,[Default]), UsedName(copy$default$1,[Default]), UsedName(##,[Default]), UsedName(getClass,[Default]), UsedName(clone,[Default]), UsedName(examples;hybrid;mining;HybridMiningSettings;init;,[Default]), UsedName(unapply,[Default]), UsedName(asInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(HybridMiningSettings,[Default]), UsedName(GenesisParentId,[Default]), UsedName(rParamX10,[Default]), UsedName(productArity,[Default]), UsedName(finalize,[Default]), UsedName(!=,[Default]), UsedName(tupled,[Default]), UsedName(copy$default$5,[Default]), UsedName(wait,[Default]), UsedName(productIterator,[Default]), UsedName(copy,[Default]), UsedName(canEqual,[Default]), UsedName(curried,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(examples.hybrid.mining.HybridMiningSettings)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from examples.ZSChain.HybridNodeViewHolderRef...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: examples.ZSChain.HybridNodeViewHolderRef[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(examples.ZSChain.HybridNodeViewHolderRef)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of examples.ZSChain.HybridApp: Set(UsedName(apply,[Default]), UsedName(HybridNodeViewHolderRef,[Default]), UsedName(props,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(examples.ZSChain.HybridNodeViewHolderRef,ModifiedNames(changes = UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(notifyAll,[Default]), UsedName(isInstanceOf,[Default]), UsedName(apply,[Default]), UsedName(HybridNodeViewHolderRef,[Default]), UsedName(synchronized,[Default]), UsedName(hashCode,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(##,[Default]), UsedName(getClass,[Default]), UsedName(clone,[Default]), UsedName(asInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(props,[Default]), UsedName(finalize,[Default]), UsedName(!=,[Default]), UsedName(wait,[Default]))) invalidates 2 classes due to The examples.ZSChain.HybridNodeViewHolderRef has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(notifyAll,[Default]), UsedName(isInstanceOf,[Default]), UsedName(apply,[Default]), UsedName(HybridNodeViewHolderRef,[Default]), UsedName(synchronized,[Default]), UsedName(hashCode,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(##,[Default]), UsedName(getClass,[Default]), UsedName(clone,[Default]), UsedName(asInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(props,[Default]), UsedName(finalize,[Default]), UsedName(!=,[Default]), UsedName(wait,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(examples.ZSChain.HybridNodeViewHolderRef)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(examples.ZSChain.HybridApp)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from examples.ZSChain.mining.PowMiner...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: examples.ZSChain.mining.PowMiner[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(examples.ZSChain.mining.PowMiner)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following member ref dependencies of examples.ZSChain.mining.PowMiner are invalidated:[0m
[0m[[0m[0mdebug[0m] [0m[0m	examples.ZSChain.HLocalInterface[0m
[0m[[0m[0mdebug[0m] [0m[0m	examples.ZSChain.simulations.PrivateChain[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(examples.ZSChain.mining.PowMiner,ModifiedNames(changes = UsedName(postRestart,[Default]), UsedName(==,[Default]), UsedName(preStart,[Default]), UsedName(eq,[Default]), UsedName(notifyAll,[Default]), UsedName($init$,[Default]), UsedName(isInstanceOf,[Default]), UsedName(delayedInit,[Default]), UsedName(aroundReceive,[Default]), UsedName(self,[Implicit]), UsedName(synchronized,[Default]), UsedName(postStop,[Default]), UsedName(hashCode,[Default]), UsedName(aroundPostRestart,[Default]), UsedName(encoder,[Implicit]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(executionStart,[Default]), UsedName(PowMiner,[Default]), UsedName(toString,[Default]), UsedName(##,[Default]), UsedName(args,[Default]), UsedName(getClass,[Default]), UsedName(clone,[Default]), UsedName(logger,[Default]), UsedName(sender,[Default]), UsedName(supervisorStrategy,[Default]), UsedName(Receive,[Default]), UsedName(asInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(receive,[Default]), UsedName(examples;ZSChain;mining;PowMiner;init;,[Default]), UsedName(context,[Implicit]), UsedName(finalize,[Default]), UsedName(log,[Default]), UsedName(!=,[Default]), UsedName(powIteration,[Default]), UsedName(ReceivableMessages,[Default]), UsedName(aroundPostStop,[Default]), UsedName(wait,[Default]), UsedName(aroundPreRestart,[Default]), UsedName(preRestart,[Default]), UsedName(aroundPreStart,[Default]), UsedName(unhandled,[Default]), UsedName(main,[Default]))) invalidates 3 classes due to The examples.ZSChain.mining.PowMiner has the following implicit definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(self,[Implicit]), UsedName(encoder,[Implicit]), UsedName(context,[Implicit]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(examples.ZSChain.mining.PowMiner)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(examples.ZSChain.HLocalInterface, examples.ZSChain.simulations.PrivateChain)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from examples.ZSChain.blocks.PowBlockSerializer...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: examples.ZSChain.blocks.PowBlockSerializer[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(examples.ZSChain.blocks.PowBlockSerializer)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of examples.ZSChain.mining.PowMiner: Set(UsedName(brotherBytes,[Default]), UsedName(==,[Default]), UsedName(isInstanceOf,[Default]), UsedName(PowBlockSerializer,[Default]), UsedName(ne,[Default]), UsedName(asInstanceOf,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of examples.ZSChain.HybridApp: Set(UsedName(PowBlockSerializer,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of examples.ZSChain.history.HistoryStorage: Set(UsedName(toBytes,[Default]), UsedName(==,[Default]), UsedName(isInstanceOf,[Default]), UsedName(parseBytes,[Default]), UsedName(PowBlockSerializer,[Default]), UsedName(ne,[Default]), UsedName(asInstanceOf,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(examples.ZSChain.blocks.PowBlockSerializer,ModifiedNames(changes = UsedName(brotherBytes,[Default]), UsedName(toBytes,[Default]), UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(parse,[Default]), UsedName(notifyAll,[Default]), UsedName($init$,[Default]), UsedName(isInstanceOf,[Default]), UsedName(parseBytes,[Default]), UsedName(synchronized,[Default]), UsedName(parseByteString,[Default]), UsedName(hashCode,[Default]), UsedName(PowBlockSerializer,[Default]), UsedName(parseBytesTry,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(parseByteStringTry,[Default]), UsedName(##,[Default]), UsedName(getClass,[Default]), UsedName(clone,[Default]), UsedName(asInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(serialize,[Default]), UsedName(finalize,[Default]), UsedName(!=,[Default]), UsedName(parseTry,[Default]), UsedName(wait,[Default]), UsedName(toByteString,[Default]))) invalidates 4 classes due to The examples.ZSChain.blocks.PowBlockSerializer has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(brotherBytes,[Default]), UsedName(toBytes,[Default]), UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(parse,[Default]), UsedName(notifyAll,[Default]), UsedName($init$,[Default]), UsedName(isInstanceOf,[Default]), UsedName(parseBytes,[Default]), UsedName(synchronized,[Default]), UsedName(parseByteString,[Default]), UsedName(hashCode,[Default]), UsedName(PowBlockSerializer,[Default]), UsedName(parseBytesTry,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(parseByteStringTry,[Default]), UsedName(##,[Default]), UsedName(getClass,[Default]), UsedName(clone,[Default]), UsedName(asInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(serialize,[Default]), UsedName(finalize,[Default]), UsedName(!=,[Default]), UsedName(parseTry,[Default]), UsedName(wait,[Default]), UsedName(toByteString,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(examples.ZSChain.blocks.PowBlockSerializer)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(examples.ZSChain.mining.PowMiner, examples.ZSChain.HybridApp, examples.ZSChain.history.HistoryStorage)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from examples.hybrid.wallet.SimpleBoxTransactionGenerator.ReceivableMessages.StartGeneration...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: examples.hybrid.wallet.SimpleBoxTransactionGenerator.ReceivableMessages.StartGeneration[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(examples.hybrid.wallet.SimpleBoxTransactionGenerator.ReceivableMessages.StartGeneration)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(examples.hybrid.wallet.SimpleBoxTransactionGenerator.ReceivableMessages.StartGeneration,ModifiedNames(changes = UsedName(compose,[Default]), UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(andThen,[Default]), UsedName(notifyAll,[Default]), UsedName(productElement,[Default]), UsedName($init$,[Default]), UsedName(isInstanceOf,[Default]), UsedName(apply,[Default]), UsedName(synchronized,[Default]), UsedName(productPrefix,[Default]), UsedName(hashCode,[Default]), UsedName(notify,[Default]), UsedName(examples;hybrid;wallet;SimpleBoxTransactionGenerator;ReceivableMessages;StartGeneration;init;,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(delay,[Default]), UsedName(copy$default$1,[Default]), UsedName(##,[Default]), UsedName(getClass,[Default]), UsedName(clone,[Default]), UsedName(unapply,[Default]), UsedName(asInstanceOf,[Default]), UsedName(StartGeneration,[Default]), UsedName(equals,[Default]), UsedName(productArity,[Default]), UsedName(finalize,[Default]), UsedName(!=,[Default]), UsedName(wait,[Default]), UsedName(productIterator,[Default]), UsedName(copy,[Default]), UsedName(canEqual,[Default]))) invalidates 1 classes due to The examples.hybrid.wallet.SimpleBoxTransactionGenerator.ReceivableMessages.StartGeneration has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(compose,[Default]), UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(andThen,[Default]), UsedName(notifyAll,[Default]), UsedName(productElement,[Default]), UsedName($init$,[Default]), UsedName(isInstanceOf,[Default]), UsedName(apply,[Default]), UsedName(synchronized,[Default]), UsedName(productPrefix,[Default]), UsedName(hashCode,[Default]), UsedName(notify,[Default]), UsedName(examples;hybrid;wallet;SimpleBoxTransactionGenerator;ReceivableMessages;StartGeneration;init;,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(delay,[Default]), UsedName(copy$default$1,[Default]), UsedName(##,[Default]), UsedName(getClass,[Default]), UsedName(clone,[Default]), UsedName(unapply,[Default]), UsedName(asInstanceOf,[Default]), UsedName(StartGeneration,[Default]), UsedName(equals,[Default]), UsedName(productArity,[Default]), UsedName(finalize,[Default]), UsedName(!=,[Default]), UsedName(wait,[Default]), UsedName(productIterator,[Default]), UsedName(copy,[Default]), UsedName(canEqual,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(examples.hybrid.wallet.SimpleBoxTransactionGenerator.ReceivableMessages.StartGeneration)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from examples.hybrid.mining.PowMinerRef...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: examples.hybrid.mining.PowMinerRef[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(examples.hybrid.mining.PowMinerRef)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(examples.hybrid.mining.PowMinerRef,ModifiedNames(changes = UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(notifyAll,[Default]), UsedName(isInstanceOf,[Default]), UsedName(apply,[Default]), UsedName(synchronized,[Default]), UsedName(hashCode,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(PowMinerRef,[Default]), UsedName(##,[Default]), UsedName(getClass,[Default]), UsedName(clone,[Default]), UsedName(asInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(props,[Default]), UsedName(finalize,[Default]), UsedName(!=,[Default]), UsedName(wait,[Default]))) invalidates 1 classes due to The examples.hybrid.mining.PowMinerRef has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(notifyAll,[Default]), UsedName(isInstanceOf,[Default]), UsedName(apply,[Default]), UsedName(synchronized,[Default]), UsedName(hashCode,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(PowMinerRef,[Default]), UsedName(##,[Default]), UsedName(getClass,[Default]), UsedName(clone,[Default]), UsedName(asInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(props,[Default]), UsedName(finalize,[Default]), UsedName(!=,[Default]), UsedName(wait,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(examples.hybrid.mining.PowMinerRef)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from examples.hybrid.mining.PowMiner.ReceivableMessages.StopMining...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: examples.hybrid.mining.PowMiner.ReceivableMessages.StopMining[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(examples.hybrid.mining.PowMiner.ReceivableMessages.StopMining)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(examples.hybrid.mining.PowMiner.ReceivableMessages.StopMining,ModifiedNames(changes = UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(StopMining,[Default]), UsedName(notifyAll,[Default]), UsedName(productElement,[Default]), UsedName($init$,[Default]), UsedName(isInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(productPrefix,[Default]), UsedName(hashCode,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(##,[Default]), UsedName(getClass,[Default]), UsedName(clone,[Default]), UsedName(asInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(productArity,[Default]), UsedName(finalize,[Default]), UsedName(!=,[Default]), UsedName(wait,[Default]), UsedName(productIterator,[Default]), UsedName(canEqual,[Default]))) invalidates 1 classes due to The examples.hybrid.mining.PowMiner.ReceivableMessages.StopMining has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(StopMining,[Default]), UsedName(notifyAll,[Default]), UsedName(productElement,[Default]), UsedName($init$,[Default]), UsedName(isInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(productPrefix,[Default]), UsedName(hashCode,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(##,[Default]), UsedName(getClass,[Default]), UsedName(clone,[Default]), UsedName(asInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(productArity,[Default]), UsedName(finalize,[Default]), UsedName(!=,[Default]), UsedName(wait,[Default]), UsedName(productIterator,[Default]), UsedName(canEqual,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(examples.hybrid.mining.PowMiner.ReceivableMessages.StopMining)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from examples.hybrid.history.HistoryStorage...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: examples.hybrid.history.HistoryStorage[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(examples.hybrid.history.HistoryStorage)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(examples.hybrid.history.HistoryStorage,ModifiedNames(changes = UsedName(bestPosBlock,[Default]), UsedName(semanticValidity,[Default]), UsedName(updateValidity,[Default]), UsedName(==,[Default]), UsedName(HistoryStorage,[Default]), UsedName(eq,[Default]), UsedName(getPoSDifficulty,[Default]), UsedName(examples;hybrid;history;HistoryStorage;init;,[Default]), UsedName(notifyAll,[Default]), UsedName($init$,[Default]), UsedName(isInstanceOf,[Default]), UsedName(update,[Default]), UsedName(parentId,[Default]), UsedName(synchronized,[Default]), UsedName(bestPowId,[Default]), UsedName(hashCode,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(##,[Default]), UsedName(getClass,[Default]), UsedName(isGenesis,[Default]), UsedName(clone,[Default]), UsedName(logger,[Default]), UsedName(parentHeight,[Default]), UsedName(asInstanceOf,[Default]), UsedName(bestPowBlock,[Default]), UsedName(equals,[Default]), UsedName(height,[Default]), UsedName(modifierById,[Default]), UsedName(finalize,[Default]), UsedName(log,[Default]), UsedName(bestChainScore,[Default]), UsedName(!=,[Default]), UsedName(getPoWDifficulty,[Default]), UsedName(bestPosId,[Default]), UsedName(wait,[Default]), UsedName(heightOf,[Default]))) invalidates 1 classes due to The examples.hybrid.history.HistoryStorage has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(bestPosBlock,[Default]), UsedName(semanticValidity,[Default]), UsedName(updateValidity,[Default]), UsedName(==,[Default]), UsedName(HistoryStorage,[Default]), UsedName(eq,[Default]), UsedName(getPoSDifficulty,[Default]), UsedName(examples;hybrid;history;HistoryStorage;init;,[Default]), UsedName(notifyAll,[Default]), UsedName($init$,[Default]), UsedName(isInstanceOf,[Default]), UsedName(update,[Default]), UsedName(parentId,[Default]), UsedName(synchronized,[Default]), UsedName(bestPowId,[Default]), UsedName(hashCode,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(##,[Default]), UsedName(getClass,[Default]), UsedName(isGenesis,[Default]), UsedName(clone,[Default]), UsedName(logger,[Default]), UsedName(parentHeight,[Default]), UsedName(asInstanceOf,[Default]), UsedName(bestPowBlock,[Default]), UsedName(equals,[Default]), UsedName(height,[Default]), UsedName(modifierById,[Default]), UsedName(finalize,[Default]), UsedName(log,[Default]), UsedName(bestChainScore,[Default]), UsedName(!=,[Default]), UsedName(getPoWDifficulty,[Default]), UsedName(bestPosId,[Default]), UsedName(wait,[Default]), UsedName(heightOf,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(examples.hybrid.history.HistoryStorage)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from examples.ZSChain.blocks.PosBlockSerializer...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: examples.ZSChain.blocks.PosBlockSerializer[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(examples.ZSChain.blocks.PosBlockSerializer)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following member ref dependencies of examples.ZSChain.blocks.PosBlockSerializer are invalidated:[0m
[0m[[0m[0mdebug[0m] [0m[0m	examples.ZSChain.HybridApp[0m
[0m[[0m[0mdebug[0m] [0m[0m	examples.ZSChain.history.HistoryStorage[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(examples.ZSChain.blocks.PosBlockSerializer,ModifiedNames(changes = UsedName(toBytes,[Default]), UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(parse,[Default]), UsedName(notifyAll,[Default]), UsedName($init$,[Default]), UsedName(isInstanceOf,[Default]), UsedName(parseBytes,[Default]), UsedName(synchronized,[Default]), UsedName(parseByteString,[Default]), UsedName(hashCode,[Default]), UsedName(parseBytesTry,[Default]), UsedName(encoder,[Implicit]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(PosBlockSerializer,[Default]), UsedName(toString,[Default]), UsedName(parseByteStringTry,[Default]), UsedName(##,[Default]), UsedName(getClass,[Default]), UsedName(clone,[Default]), UsedName(asInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(serialize,[Default]), UsedName(finalize,[Default]), UsedName(!=,[Default]), UsedName(parseTry,[Default]), UsedName(wait,[Default]), UsedName(toByteString,[Default]))) invalidates 3 classes due to The examples.ZSChain.blocks.PosBlockSerializer has the following implicit definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(encoder,[Implicit]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(examples.ZSChain.blocks.PosBlockSerializer)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(examples.ZSChain.HybridApp, examples.ZSChain.history.HistoryStorage)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from examples.hybrid.history.HybridSyncInfoSerializer...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: examples.hybrid.history.HybridSyncInfoSerializer[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(examples.hybrid.history.HybridSyncInfoSerializer)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(examples.hybrid.history.HybridSyncInfoSerializer,ModifiedNames(changes = UsedName(toBytes,[Default]), UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(parse,[Default]), UsedName(notifyAll,[Default]), UsedName($init$,[Default]), UsedName(isInstanceOf,[Default]), UsedName(parseBytes,[Default]), UsedName(synchronized,[Default]), UsedName(parseByteString,[Default]), UsedName(hashCode,[Default]), UsedName(parseBytesTry,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(parseByteStringTry,[Default]), UsedName(##,[Default]), UsedName(getClass,[Default]), UsedName(clone,[Default]), UsedName(asInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(serialize,[Default]), UsedName(finalize,[Default]), UsedName(!=,[Default]), UsedName(parseTry,[Default]), UsedName(HybridSyncInfoSerializer,[Default]), UsedName(wait,[Default]), UsedName(toByteString,[Default]))) invalidates 1 classes due to The examples.hybrid.history.HybridSyncInfoSerializer has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(toBytes,[Default]), UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(parse,[Default]), UsedName(notifyAll,[Default]), UsedName($init$,[Default]), UsedName(isInstanceOf,[Default]), UsedName(parseBytes,[Default]), UsedName(synchronized,[Default]), UsedName(parseByteString,[Default]), UsedName(hashCode,[Default]), UsedName(parseBytesTry,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(parseByteStringTry,[Default]), UsedName(##,[Default]), UsedName(getClass,[Default]), UsedName(clone,[Default]), UsedName(asInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(serialize,[Default]), UsedName(finalize,[Default]), UsedName(!=,[Default]), UsedName(parseTry,[Default]), UsedName(HybridSyncInfoSerializer,[Default]), UsedName(wait,[Default]), UsedName(toByteString,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(examples.hybrid.history.HybridSyncInfoSerializer)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from examples.hybrid.mining.WalletSettings...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: examples.hybrid.mining.WalletSettings[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(examples.hybrid.mining.WalletSettings)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(examples.hybrid.mining.WalletSettings,ModifiedNames(changes = UsedName(copy$default$2,[Default]), UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(notifyAll,[Default]), UsedName(productElement,[Default]), UsedName($init$,[Default]), UsedName(isInstanceOf,[Default]), UsedName(apply,[Default]), UsedName(WalletSettings,[Default]), UsedName(synchronized,[Default]), UsedName(productPrefix,[Default]), UsedName(hashCode,[Default]), UsedName(examples;hybrid;mining;WalletSettings;init;,[Default]), UsedName(password,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(copy$default$3,[Default]), UsedName(toString,[Default]), UsedName(copy$default$1,[Default]), UsedName(##,[Default]), UsedName(getClass,[Default]), UsedName(clone,[Default]), UsedName(seed,[Default]), UsedName(unapply,[Default]), UsedName(asInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(productArity,[Default]), UsedName(finalize,[Default]), UsedName(!=,[Default]), UsedName(tupled,[Default]), UsedName(wait,[Default]), UsedName(productIterator,[Default]), UsedName(walletDir,[Default]), UsedName(copy,[Default]), UsedName(canEqual,[Default]), UsedName(curried,[Default]))) invalidates 1 classes due to The examples.hybrid.mining.WalletSettings has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(copy$default$2,[Default]), UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(notifyAll,[Default]), UsedName(productElement,[Default]), UsedName($init$,[Default]), UsedName(isInstanceOf,[Default]), UsedName(apply,[Default]), UsedName(WalletSettings,[Default]), UsedName(synchronized,[Default]), UsedName(productPrefix,[Default]), UsedName(hashCode,[Default]), UsedName(examples;hybrid;mining;WalletSettings;init;,[Default]), UsedName(password,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(copy$default$3,[Default]), UsedName(toString,[Default]), UsedName(copy$default$1,[Default]), UsedName(##,[Default]), UsedName(getClass,[Default]), UsedName(clone,[Default]), UsedName(seed,[Default]), UsedName(unapply,[Default]), UsedName(asInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(productArity,[Default]), UsedName(finalize,[Default]), UsedName(!=,[Default]), UsedName(tupled,[Default]), UsedName(wait,[Default]), UsedName(productIterator,[Default]), UsedName(walletDir,[Default]), UsedName(copy,[Default]), UsedName(canEqual,[Default]), UsedName(curried,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(examples.hybrid.mining.WalletSettings)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from examples.ZSChain.history.HybridHistory...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: examples.ZSChain.history.HybridHistory[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(examples.ZSChain.history.HybridHistory)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following member ref dependencies of examples.ZSChain.history.HybridHistory are invalidated:[0m
[0m[[0m[0mdebug[0m] [0m[0m	examples.ZSChain.HybridApp[0m
[0m[[0m[0mdebug[0m] [0m[0m	examples.ZSChain.HybridNodeViewHolder[0m
[0m[[0m[0mdebug[0m] [0m[0m	examples.ZSChain.api.http.DebugApiRoute[0m
[0m[[0m[0mdebug[0m] [0m[0m	examples.ZSChain.api.http.StatsApiRoute[0m
[0m[[0m[0mdebug[0m] [0m[0m	examples.ZSChain.api.http.WalletApiRoute[0m
[0m[[0m[0mdebug[0m] [0m[0m	examples.ZSChain.mining.PosForger[0m
[0m[[0m[0mdebug[0m] [0m[0m	examples.ZSChain.mining.PowMiner[0m
[0m[[0m[0mdebug[0m] [0m[0m	examples.ZSChain.simulations.PrivateChain[0m
[0m[[0m[0mdebug[0m] [0m[0m	examples.ZSChain.wallet.SimpleBoxTransactionGenerator[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(examples.ZSChain.history.HybridHistory,ModifiedNames(changes = UsedName(bestPosBlock,[Default]), UsedName(powDifficulty,[Default]), UsedName(bestBlock,[Default]), UsedName(applicableTry,[Default]), UsedName(syncInfo,[Default]), UsedName(==,[Default]), UsedName(getReader,[Default]), UsedName(eq,[Default]), UsedName(reportModifierIsValid,[Default]), UsedName(notifyAll,[Default]), UsedName(reportModifierIsInvalid,[Default]), UsedName(storage,[Default]), UsedName($init$,[Default]), UsedName(isInstanceOf,[Default]), UsedName(generatorDistribution,[Default]), UsedName(synchronized,[Default]), UsedName(bestPowId,[Default]), UsedName(compare,[Default]), UsedName(hashCode,[Default]), UsedName(contains,[Default]), UsedName(HybridHistory,[Default]), UsedName(isEmpty,[Default]), UsedName(encoder,[Implicit]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(examples;ZSChain;history;HybridHistory;init;,[Default]), UsedName(count,[Default]), UsedName(averageDelay,[Default]), UsedName(readOrGenerate,[Default]), UsedName(DifficultyRecalcPeriod,[Default]), UsedName(toString,[Default]), UsedName(blockGenerator,[Default]), UsedName(filter,[Default]), UsedName(isSemanticallyValid,[Default]), UsedName(##,[Default]), UsedName(getClass,[Default]), UsedName(clone,[Default]), UsedName(logger,[Default]), UsedName(commonBlockThenSuffixes,[Default]), UsedName(bestForkChanges,[Default]), UsedName(asInstanceOf,[Default]), UsedName(bestPowBlock,[Default]), UsedName(continuationIds,[Default]), UsedName(parentBlock,[Default]), UsedName(equals,[Default]), UsedName(openSurfaceIds,[Default]), UsedName(lastPowBlocks,[Default]), UsedName(height,[Default]), UsedName(modifierById,[Default]), UsedName(NVCT,[Default]), UsedName(finalize,[Default]), UsedName(log,[Default]), UsedName(!=,[Default]), UsedName(append,[Default]), UsedName(bestPosId,[Default]), UsedName(wait,[Default]), UsedName(lastBlockIds,[Default]), UsedName(commonBlockThenSuffixes$default$2,[Default]), UsedName(posDifficulty,[Default]), UsedName(pairCompleted,[Default]))) invalidates 10 classes due to The examples.ZSChain.history.HybridHistory has the following implicit definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(encoder,[Implicit]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(examples.ZSChain.history.HybridHistory)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(examples.ZSChain.HybridApp, examples.ZSChain.api.http.DebugApiRoute, examples.ZSChain.api.http.StatsApiRoute, examples.ZSChain.simulations.PrivateChain, examples.ZSChain.api.http.WalletApiRoute, examples.ZSChain.wallet.SimpleBoxTransactionGenerator, examples.ZSChain.mining.PowMiner, examples.ZSChain.mining.PosForger, examples.ZSChain.HybridNodeViewHolder)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from examples.ZSChain.blocks.PowBlockHeader...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: examples.ZSChain.blocks.PowBlockHeader[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding examples.ZSChain.blocks.PowBlock by examples.ZSChain.blocks.PowBlockHeader[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(examples.ZSChain.blocks.PowBlock, examples.ZSChain.blocks.PowBlockHeader)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following member ref dependencies of examples.ZSChain.blocks.PowBlock are invalidated:[0m
[0m[[0m[0mdebug[0m] [0m[0m	examples.ZSChain.HLocalInterface[0m
[0m[[0m[0mdebug[0m] [0m[0m	examples.ZSChain.HybridApp[0m
[0m[[0m[0mdebug[0m] [0m[0m	examples.ZSChain.HybridNodeViewHolder[0m
[0m[[0m[0mdebug[0m] [0m[0m	examples.ZSChain.api.http.DebugApiRoute[0m
[0m[[0m[0mdebug[0m] [0m[0m	examples.ZSChain.history.HistoryStorage[0m
[0m[[0m[0mdebug[0m] [0m[0m	examples.ZSChain.history.HybridHistory[0m
[0m[[0m[0mdebug[0m] [0m[0m	examples.ZSChain.history.HybridSyncInfo[0m
[0m[[0m[0mdebug[0m] [0m[0m	examples.ZSChain.mining.PosForger[0m
[0m[[0m[0mdebug[0m] [0m[0m	examples.ZSChain.mining.PosForger.ReceivableMessages.PosForgingInfo[0m
[0m[[0m[0mdebug[0m] [0m[0m	examples.ZSChain.mining.PowMiner[0m
[0m[[0m[0mdebug[0m] [0m[0m	examples.ZSChain.mining.PowMiner.ReceivableMessages.PowMiningInfo[0m
[0m[[0m[0mdebug[0m] [0m[0m	examples.ZSChain.simulations.PrivateChain[0m
[0m[[0m[0mdebug[0m] [0m[0m	examples.ZSChain.state.HBoxStoredState[0m
[0m[[0m[0mdebug[0m] [0m[0m	examples.ZSChain.validation.DifficultyBlockValidator[0m
[0m[[0m[0mdebug[0m] [0m[0m	examples.ZSChain.validation.ParentBlockValidator[0m
[0m[[0m[0mdebug[0m] [0m[0m	examples.ZSChain.validation.SemanticBlockValidator[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following member ref dependencies of examples.ZSChain.blocks.PowBlockHeader are invalidated:[0m
[0m[[0m[0mdebug[0m] [0m[0m	examples.ZSChain.HybridNodeViewHolder[0m
[0m[[0m[0mdebug[0m] [0m[0m	examples.ZSChain.history.HistoryStorage[0m
[0m[[0m[0mdebug[0m] [0m[0m	examples.ZSChain.history.HybridHistory[0m
[0m[[0m[0mdebug[0m] [0m[0m	examples.ZSChain.mining.PosForger[0m
[0m[[0m[0mdebug[0m] [0m[0m	examples.ZSChain.mining.PowMiner[0m
[0m[[0m[0mdebug[0m] [0m[0m	examples.ZSChain.simulations.PrivateChain[0m
[0m[[0m[0mdebug[0m] [0m[0m	examples.ZSChain.state.HBoxStoredState[0m
[0m[[0m[0mdebug[0m] [0m[0m	examples.ZSChain.validation.DifficultyBlockValidator[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(examples.ZSChain.blocks.PowBlockHeader,ModifiedNames(changes = UsedName(prevPosId,[Default]), UsedName(==,[Default]), UsedName(brothersCount,[Default]), UsedName(eq,[Default]), UsedName(id,[Default]), UsedName(notifyAll,[Default]), UsedName($init$,[Default]), UsedName(isInstanceOf,[Default]), UsedName(PowBlockHeader,[Default]), UsedName(parentId,[Default]), UsedName(synchronized,[Default]), UsedName(brothersHash,[Default]), UsedName(nonce,[Default]), UsedName(hashCode,[Default]), UsedName(correctWork,[Default]), UsedName(encoder,[Implicit]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(timestamp,[Default]), UsedName(examples;ZSChain;blocks;PowBlockHeader;init;,[Default]), UsedName(##,[Default]), UsedName(getClass,[Default]), UsedName(clone,[Default]), UsedName(asInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(finalize,[Default]), UsedName(!=,[Default]), UsedName(generatorProposition,[Default]), UsedName(wait,[Default]), UsedName(correctWorkDone,[Default]))) invalidates 18 classes due to The examples.ZSChain.blocks.PowBlockHeader has the following implicit definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(encoder,[Implicit]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(examples.ZSChain.blocks.PowBlock, examples.ZSChain.blocks.PowBlockHeader)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(examples.ZSChain.mining.PowMiner.ReceivableMessages.PowMiningInfo, examples.ZSChain.history.HistoryStorage, examples.ZSChain.HybridApp, examples.ZSChain.api.http.DebugApiRoute, examples.ZSChain.HLocalInterface, examples.ZSChain.history.HybridHistory, examples.ZSChain.validation.ParentBlockValidator, examples.ZSChain.simulations.PrivateChain, examples.ZSChain.validation.SemanticBlockValidator, examples.ZSChain.history.HybridSyncInfo, examples.ZSChain.mining.PowMiner, examples.ZSChain.mining.PosForger, examples.ZSChain.state.HBoxStoredState, examples.ZSChain.HybridNodeViewHolder, examples.ZSChain.mining.PosForger.ReceivableMessages.PosForgingInfo, examples.ZSChain.validation.DifficultyBlockValidator)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from examples.ZSChain.blocks.HybridBlock...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: examples.ZSChain.blocks.HybridBlock[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding examples.ZSChain.blocks.PosBlock by examples.ZSChain.blocks.HybridBlock[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding examples.ZSChain.blocks.PowBlock by examples.ZSChain.blocks.HybridBlock[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(examples.ZSChain.blocks.HybridBlock, examples.ZSChain.blocks.PowBlock, examples.ZSChain.blocks.PosBlock)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following member ref dependencies of examples.ZSChain.blocks.HybridBlock are invalidated:[0m
[0m[[0m[0mdebug[0m] [0m[0m	examples.ZSChain.HybridApp[0m
[0m[[0m[0mdebug[0m] [0m[0m	examples.ZSChain.HybridNodeViewHolder[0m
[0m[[0m[0mdebug[0m] [0m[0m	examples.ZSChain.api.http.DebugApiRoute[0m
[0m[[0m[0mdebug[0m] [0m[0m	examples.ZSChain.api.http.StatsApiRoute[0m
[0m[[0m[0mdebug[0m] [0m[0m	examples.ZSChain.blocks.PosBlock[0m
[0m[[0m[0mdebug[0m] [0m[0m	examples.ZSChain.blocks.PowBlock[0m
[0m[[0m[0mdebug[0m] [0m[0m	examples.ZSChain.history.HistoryStorage[0m
[0m[[0m[0mdebug[0m] [0m[0m	examples.ZSChain.history.HybridHistory[0m
[0m[[0m[0mdebug[0m] [0m[0m	examples.ZSChain.mining.PosForger[0m
[0m[[0m[0mdebug[0m] [0m[0m	examples.ZSChain.mining.PowMiner[0m
[0m[[0m[0mdebug[0m] [0m[0m	examples.ZSChain.simulations.PrivateChain[0m
[0m[[0m[0mdebug[0m] [0m[0m	examples.ZSChain.state.HBoxStoredState[0m
[0m[[0m[0mdebug[0m] [0m[0m	examples.ZSChain.validation.DifficultyBlockValidator[0m
[0m[[0m[0mdebug[0m] [0m[0m	examples.ZSChain.validation.ParentBlockValidator[0m
[0m[[0m[0mdebug[0m] [0m[0m	examples.ZSChain.validation.SemanticBlockValidator[0m
[0m[[0m[0mdebug[0m] [0m[0m	examples.ZSChain.wallet.HBoxWallet[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following member ref dependencies of examples.ZSChain.blocks.PowBlock are invalidated:[0m
[0m[[0m[0mdebug[0m] [0m[0m	examples.ZSChain.HLocalInterface[0m
[0m[[0m[0mdebug[0m] [0m[0m	examples.ZSChain.HybridApp[0m
[0m[[0m[0mdebug[0m] [0m[0m	examples.ZSChain.HybridNodeViewHolder[0m
[0m[[0m[0mdebug[0m] [0m[0m	examples.ZSChain.api.http.DebugApiRoute[0m
[0m[[0m[0mdebug[0m] [0m[0m	examples.ZSChain.history.HistoryStorage[0m
[0m[[0m[0mdebug[0m] [0m[0m	examples.ZSChain.history.HybridHistory[0m
[0m[[0m[0mdebug[0m] [0m[0m	examples.ZSChain.history.HybridSyncInfo[0m
[0m[[0m[0mdebug[0m] [0m[0m	examples.ZSChain.mining.PosForger[0m
[0m[[0m[0mdebug[0m] [0m[0m	examples.ZSChain.mining.PosForger.ReceivableMessages.PosForgingInfo[0m
[0m[[0m[0mdebug[0m] [0m[0m	examples.ZSChain.mining.PowMiner[0m
[0m[[0m[0mdebug[0m] [0m[0m	examples.ZSChain.mining.PowMiner.ReceivableMessages.PowMiningInfo[0m
[0m[[0m[0mdebug[0m] [0m[0m	examples.ZSChain.simulations.PrivateChain[0m
[0m[[0m[0mdebug[0m] [0m[0m	examples.ZSChain.state.HBoxStoredState[0m
[0m[[0m[0mdebug[0m] [0m[0m	examples.ZSChain.validation.DifficultyBlockValidator[0m
[0m[[0m[0mdebug[0m] [0m[0m	examples.ZSChain.validation.ParentBlockValidator[0m
[0m[[0m[0mdebug[0m] [0m[0m	examples.ZSChain.validation.SemanticBlockValidator[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following member ref dependencies of examples.ZSChain.blocks.PosBlock are invalidated:[0m
[0m[[0m[0mdebug[0m] [0m[0m	examples.ZSChain.HLocalInterface[0m
[0m[[0m[0mdebug[0m] [0m[0m	examples.ZSChain.HybridApp[0m
[0m[[0m[0mdebug[0m] [0m[0m	examples.ZSChain.HybridNodeViewHolder[0m
[0m[[0m[0mdebug[0m] [0m[0m	examples.ZSChain.api.http.DebugApiRoute[0m
[0m[[0m[0mdebug[0m] [0m[0m	examples.ZSChain.history.HistoryStorage[0m
[0m[[0m[0mdebug[0m] [0m[0m	examples.ZSChain.history.HybridHistory[0m
[0m[[0m[0mdebug[0m] [0m[0m	examples.ZSChain.history.HybridSyncInfo[0m
[0m[[0m[0mdebug[0m] [0m[0m	examples.ZSChain.mining.PosForger[0m
[0m[[0m[0mdebug[0m] [0m[0m	examples.ZSChain.mining.PosForger.ReceivableMessages.PosForgingInfo[0m
[0m[[0m[0mdebug[0m] [0m[0m	examples.ZSChain.simulations.PrivateChain[0m
[0m[[0m[0mdebug[0m] [0m[0m	examples.ZSChain.state.HBoxStoredState[0m
[0m[[0m[0mdebug[0m] [0m[0m	examples.ZSChain.validation.DifficultyBlockValidator[0m
[0m[[0m[0mdebug[0m] [0m[0m	examples.ZSChain.validation.ParentBlockValidator[0m
[0m[[0m[0mdebug[0m] [0m[0m	examples.ZSChain.validation.SemanticBlockValidator[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(examples.ZSChain.blocks.HybridBlock,ModifiedNames(changes = UsedName(version,[Default]), UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(id,[Default]), UsedName(transactions,[Default]), UsedName(notifyAll,[Default]), UsedName($init$,[Default]), UsedName(isInstanceOf,[Default]), UsedName(parentId,[Default]), UsedName(synchronized,[Default]), UsedName(hashCode,[Default]), UsedName(encoder,[Implicit]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(timestamp,[Default]), UsedName(HybridBlock,[Default]), UsedName(##,[Default]), UsedName(getClass,[Default]), UsedName(serializer,[Default]), UsedName(clone,[Default]), UsedName(modifierTypeId,[Default]), UsedName(asInstanceOf,[Default]), UsedName(bytes,[Default]), UsedName(equals,[Default]), UsedName(finalize,[Default]), UsedName(!=,[Default]), UsedName(M,[Default]), UsedName(wait,[Default]), UsedName(encodedId,[Default]))) invalidates 21 classes due to The examples.ZSChain.blocks.HybridBlock has the following implicit definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(encoder,[Implicit]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(examples.ZSChain.blocks.HybridBlock, examples.ZSChain.blocks.PowBlock, examples.ZSChain.blocks.PosBlock)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(examples.ZSChain.mining.PowMiner.ReceivableMessages.PowMiningInfo, examples.ZSChain.history.HistoryStorage, examples.ZSChain.HybridApp, examples.ZSChain.api.http.DebugApiRoute, examples.ZSChain.HLocalInterface, examples.ZSChain.history.HybridHistory, examples.ZSChain.validation.ParentBlockValidator, examples.ZSChain.api.http.StatsApiRoute, examples.ZSChain.simulations.PrivateChain, examples.ZSChain.validation.SemanticBlockValidator, examples.ZSChain.history.HybridSyncInfo, examples.ZSChain.blocks.PosBlock, examples.ZSChain.wallet.HBoxWallet, examples.ZSChain.mining.PowMiner, examples.ZSChain.mining.PosForger, examples.ZSChain.state.HBoxStoredState, examples.ZSChain.HybridNodeViewHolder, examples.ZSChain.mining.PosForger.ReceivableMessages.PosForgingInfo, examples.ZSChain.blocks.PowBlock, examples.ZSChain.validation.DifficultyBlockValidator)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from examples.ZSChain.mining.PowMiner.ReceivableMessages.MineBlock...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: examples.ZSChain.mining.PowMiner.ReceivableMessages.MineBlock[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(examples.ZSChain.mining.PowMiner.ReceivableMessages.MineBlock)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of examples.ZSChain.HLocalInterface: Set(UsedName(==,[Default]), UsedName(isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName(MineBlock,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(examples.ZSChain.mining.PowMiner.ReceivableMessages.MineBlock,ModifiedNames(changes = UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(notifyAll,[Default]), UsedName(productElement,[Default]), UsedName($init$,[Default]), UsedName(isInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(productPrefix,[Default]), UsedName(hashCode,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(##,[Default]), UsedName(getClass,[Default]), UsedName(clone,[Default]), UsedName(asInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(productArity,[Default]), UsedName(finalize,[Default]), UsedName(!=,[Default]), UsedName(wait,[Default]), UsedName(productIterator,[Default]), UsedName(MineBlock,[Default]), UsedName(canEqual,[Default]))) invalidates 2 classes due to The examples.ZSChain.mining.PowMiner.ReceivableMessages.MineBlock has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(notifyAll,[Default]), UsedName(productElement,[Default]), UsedName($init$,[Default]), UsedName(isInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(productPrefix,[Default]), UsedName(hashCode,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(##,[Default]), UsedName(getClass,[Default]), UsedName(clone,[Default]), UsedName(asInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(productArity,[Default]), UsedName(finalize,[Default]), UsedName(!=,[Default]), UsedName(wait,[Default]), UsedName(productIterator,[Default]), UsedName(MineBlock,[Default]), UsedName(canEqual,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(examples.ZSChain.mining.PowMiner.ReceivableMessages.MineBlock)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(examples.ZSChain.HLocalInterface)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from examples.ZSChain.util.Cancellable...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: examples.ZSChain.util.Cancellable[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(examples.ZSChain.util.Cancellable)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of examples.ZSChain.mining.PowMiner: Set(UsedName(status,[Default]), UsedName(==,[Default]), UsedName(isInstanceOf,[Default]), UsedName(apply,[Default]), UsedName(Cancellable,[Default]), UsedName(run,[Default]), UsedName(ne,[Default]), UsedName(cancel,[Default]), UsedName(asInstanceOf,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(examples.ZSChain.util.Cancellable,ModifiedNames(changes = UsedName(status,[Default]), UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(notifyAll,[Default]), UsedName(isInstanceOf,[Default]), UsedName(apply,[Default]), UsedName(synchronized,[Default]), UsedName(Cancellable,[Default]), UsedName(run,[Default]), UsedName(hashCode,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(##,[Default]), UsedName(getClass,[Default]), UsedName(clone,[Default]), UsedName(cancel,[Default]), UsedName(asInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(finalize,[Default]), UsedName(!=,[Default]), UsedName(wait,[Default]))) invalidates 2 classes due to The examples.ZSChain.util.Cancellable has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(status,[Default]), UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(notifyAll,[Default]), UsedName(isInstanceOf,[Default]), UsedName(apply,[Default]), UsedName(synchronized,[Default]), UsedName(Cancellable,[Default]), UsedName(run,[Default]), UsedName(hashCode,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(##,[Default]), UsedName(getClass,[Default]), UsedName(clone,[Default]), UsedName(cancel,[Default]), UsedName(asInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(finalize,[Default]), UsedName(!=,[Default]), UsedName(wait,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(examples.ZSChain.util.Cancellable)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(examples.ZSChain.mining.PowMiner)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from examples.ZSChain.wallet.SimpleBoxTransactionGeneratorRef...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: examples.ZSChain.wallet.SimpleBoxTransactionGeneratorRef[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(examples.ZSChain.wallet.SimpleBoxTransactionGeneratorRef)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of examples.ZSChain.HybridApp: Set(UsedName(apply,[Default]), UsedName(SimpleBoxTransactionGeneratorRef,[Default]), UsedName(props,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(examples.ZSChain.wallet.SimpleBoxTransactionGeneratorRef,ModifiedNames(changes = UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(notifyAll,[Default]), UsedName(isInstanceOf,[Default]), UsedName(apply,[Default]), UsedName(synchronized,[Default]), UsedName(hashCode,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(##,[Default]), UsedName(getClass,[Default]), UsedName(clone,[Default]), UsedName(asInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(SimpleBoxTransactionGeneratorRef,[Default]), UsedName(props,[Default]), UsedName(finalize,[Default]), UsedName(!=,[Default]), UsedName(wait,[Default]))) invalidates 2 classes due to The examples.ZSChain.wallet.SimpleBoxTransactionGeneratorRef has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(notifyAll,[Default]), UsedName(isInstanceOf,[Default]), UsedName(apply,[Default]), UsedName(synchronized,[Default]), UsedName(hashCode,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(##,[Default]), UsedName(getClass,[Default]), UsedName(clone,[Default]), UsedName(asInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(SimpleBoxTransactionGeneratorRef,[Default]), UsedName(props,[Default]), UsedName(finalize,[Default]), UsedName(!=,[Default]), UsedName(wait,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(examples.ZSChain.wallet.SimpleBoxTransactionGeneratorRef)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(examples.ZSChain.HybridApp)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from examples.hybrid.history.HybridSyncInfoMessageSpec...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: examples.hybrid.history.HybridSyncInfoMessageSpec[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(examples.hybrid.history.HybridSyncInfoMessageSpec)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(examples.hybrid.history.HybridSyncInfoMessageSpec,ModifiedNames(changes = UsedName(toBytes,[Default]), UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(parse,[Default]), UsedName(notifyAll,[Default]), UsedName($init$,[Default]), UsedName(isInstanceOf,[Default]), UsedName(protocolVersion,[Default]), UsedName(parseBytes,[Default]), UsedName(synchronized,[Default]), UsedName(parseByteString,[Default]), UsedName(hashCode,[Default]), UsedName(parseBytesTry,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(parseByteStringTry,[Default]), UsedName(##,[Default]), UsedName(getClass,[Default]), UsedName(clone,[Default]), UsedName(asInstanceOf,[Default]), UsedName(messageName,[Default]), UsedName(equals,[Default]), UsedName(HybridSyncInfoMessageSpec,[Default]), UsedName(serialize,[Default]), UsedName(finalize,[Default]), UsedName(!=,[Default]), UsedName(parseTry,[Default]), UsedName(wait,[Default]), UsedName(toByteString,[Default]), UsedName(messageCode,[Default]))) invalidates 1 classes due to The examples.hybrid.history.HybridSyncInfoMessageSpec has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(toBytes,[Default]), UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(parse,[Default]), UsedName(notifyAll,[Default]), UsedName($init$,[Default]), UsedName(isInstanceOf,[Default]), UsedName(protocolVersion,[Default]), UsedName(parseBytes,[Default]), UsedName(synchronized,[Default]), UsedName(parseByteString,[Default]), UsedName(hashCode,[Default]), UsedName(parseBytesTry,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(parseByteStringTry,[Default]), UsedName(##,[Default]), UsedName(getClass,[Default]), UsedName(clone,[Default]), UsedName(asInstanceOf,[Default]), UsedName(messageName,[Default]), UsedName(equals,[Default]), UsedName(HybridSyncInfoMessageSpec,[Default]), UsedName(serialize,[Default]), UsedName(finalize,[Default]), UsedName(!=,[Default]), UsedName(parseTry,[Default]), UsedName(wait,[Default]), UsedName(toByteString,[Default]), UsedName(messageCode,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(examples.hybrid.history.HybridSyncInfoMessageSpec)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mNew invalidations:[0m
[0m[[0m[0mdebug[0m] [0m[0m	Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: [0m
[0m[[0m[0mdebug[0m] [0m[0mPreviously invalidated, but (transitively) depend on new invalidations:[0m
[0m[[0m[0mdebug[0m] [0m[0m	Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mNo classes were invalidated.[0m
